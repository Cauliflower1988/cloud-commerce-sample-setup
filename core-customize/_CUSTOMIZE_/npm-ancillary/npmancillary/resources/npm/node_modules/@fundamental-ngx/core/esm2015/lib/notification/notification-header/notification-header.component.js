/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, HostBinding, Input, Output, ViewEncapsulation } from '@angular/core';
export class NotificationHeaderComponent {
    constructor() {
        /**
         * @hidden
         */
        this.fdNotificationHeaderClass = true;
        /**
         * Whether user wants to hide close button at the top. It's shown by default.
         */
        this.closeButton = true;
        /**
         * Event thrown always, when the close button is clicked
         */
        this.closeButtonClick = new EventEmitter();
    }
    /**
     * @hidden
     * @return {?}
     */
    closeButtonClicked() {
        this.closeButtonClick.emit();
    }
}
NotificationHeaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'fd-notification-header',
                template: "<div [ngClass]=\"['fd-notification__indicator--' + type]\" *ngIf=\"type\"></div>\n<ng-content select=\"[fd-notification-title]\"></ng-content>\n<button fd-button [glyph]=\"'decline'\" [options]=\"'light'\" class=\"fd-notification__close\" (click)=\"closeButtonClicked()\"></button>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [""]
            }] }
];
NotificationHeaderComponent.propDecorators = {
    fdNotificationHeaderClass: [{ type: HostBinding, args: ['class.fd-notification__header',] }],
    type: [{ type: Input }],
    closeButton: [{ type: Input }],
    closeButtonClick: [{ type: Output }]
};
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    NotificationHeaderComponent.prototype.fdNotificationHeaderClass;
    /**
     * type of Notification 'success' | 'warning' | 'information' | 'error'
     * @type {?}
     */
    NotificationHeaderComponent.prototype.type;
    /**
     * Whether user wants to hide close button at the top. It's shown by default.
     * @type {?}
     */
    NotificationHeaderComponent.prototype.closeButton;
    /**
     * Event thrown always, when the close button is clicked
     * @type {?}
     */
    NotificationHeaderComponent.prototype.closeButtonClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLWhlYWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi1oZWFkZXIvbm90aWZpY2F0aW9uLWhlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBUXZHLE1BQU0sT0FBTywyQkFBMkI7SUFOeEM7Ozs7UUFTSSw4QkFBeUIsR0FBWSxJQUFJLENBQUM7Ozs7UUFRMUMsZ0JBQVcsR0FBWSxJQUFJLENBQUM7Ozs7UUFJbkIscUJBQWdCLEdBQXVCLElBQUksWUFBWSxFQUFRLENBQUM7SUFNN0UsQ0FBQzs7Ozs7SUFIVSxrQkFBa0I7UUFDckIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2pDLENBQUM7OztZQTFCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHdCQUF3QjtnQkFDbEMsdVNBQW1EO2dCQUVuRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7YUFDeEM7Ozt3Q0FHSSxXQUFXLFNBQUMsK0JBQStCO21CQUkzQyxLQUFLOzBCQUlMLEtBQUs7K0JBSUwsTUFBTTs7Ozs7OztJQVpQLGdFQUMwQzs7Ozs7SUFHMUMsMkNBQ2E7Ozs7O0lBR2Isa0RBQzRCOzs7OztJQUc1Qix1REFDeUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSG9zdEJpbmRpbmcsIElucHV0LCBPdXRwdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnZmQtbm90aWZpY2F0aW9uLWhlYWRlcicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL25vdGlmaWNhdGlvbi1oZWFkZXIuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL25vdGlmaWNhdGlvbi1oZWFkZXIuY29tcG9uZW50LnNjc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIE5vdGlmaWNhdGlvbkhlYWRlckNvbXBvbmVudCB7XG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmZkLW5vdGlmaWNhdGlvbl9faGVhZGVyJylcbiAgICBmZE5vdGlmaWNhdGlvbkhlYWRlckNsYXNzOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiB0eXBlIG9mIE5vdGlmaWNhdGlvbiAnc3VjY2VzcycgfCAnd2FybmluZycgfCAnaW5mb3JtYXRpb24nIHwgJ2Vycm9yJyAqL1xuICAgIEBJbnB1dCgpXG4gICAgdHlwZTogc3RyaW5nO1xuXG4gICAgLyoqIFdoZXRoZXIgdXNlciB3YW50cyB0byBoaWRlIGNsb3NlIGJ1dHRvbiBhdCB0aGUgdG9wLiBJdCdzIHNob3duIGJ5IGRlZmF1bHQuICovXG4gICAgQElucHV0KClcbiAgICBjbG9zZUJ1dHRvbjogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKiogRXZlbnQgdGhyb3duIGFsd2F5cywgd2hlbiB0aGUgY2xvc2UgYnV0dG9uIGlzIGNsaWNrZWQgKi9cbiAgICBAT3V0cHV0KClcbiAgICByZWFkb25seSBjbG9zZUJ1dHRvbkNsaWNrOiBFdmVudEVtaXR0ZXI8dm9pZD4gPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIHB1YmxpYyBjbG9zZUJ1dHRvbkNsaWNrZWQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuY2xvc2VCdXR0b25DbGljay5lbWl0KCk7XG4gICAgfVxufVxuIl19