/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';
import { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';
/**
 * @hidden
 * The base class for the icon component
 * @type {?}
 */
var BASE_ICON_CLASS = 'sap-icon';
/**
 * @hidden
 * Prefix for icon prop classes
 * @type {?}
 */
var PREFIX_ICON_CLASS = BASE_ICON_CLASS + '--';
/**
 * The component that represents an icon.
 *
 * ```html
 * <fd-icon [glyph]="cart-approval" [size]="'l'"></fd-icon>
 * ```
 */
var IconComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IconComponent, _super);
    /** @hidden */
    function IconComponent(elementRef) {
        var _this = _super.call(this, elementRef) || this;
        _this.elementRef = elementRef;
        /**
         * The size of the icon
         * The predefined values for the input size are *xs*, *s*, *l*, and *xl*.
         * *size* can accept any other string, for example *xxs*, which will be translated into class *sap-icon--xxs*.
         */
        _this.size = '';
        return _this;
    }
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    IconComponent.prototype._setProperties = /**
     * @hidden
     * @return {?}
     */
    function () {
        if (this.glyph) {
            this._addClassToElement(PREFIX_ICON_CLASS + this.glyph);
        }
        if (this.size) {
            this._addClassToElement(PREFIX_ICON_CLASS + this.size);
        }
    };
    IconComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-icon',
                    template: "",
                    host: {
                        role: 'presentation'
                    },
                    encapsulation: ViewEncapsulation.None,
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    IconComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    IconComponent.propDecorators = {
        glyph: [{ type: Input }],
        size: [{ type: Input }]
    };
    return IconComponent;
}(AbstractFdNgxClass));
export { IconComponent };
if (false) {
    /**
     * The icon name to display. See the icon page for the list of icons
     * here: https://sap.github.io/fundamental-ngx/icon
     *
     * @type {?}
     */
    IconComponent.prototype.glyph;
    /**
     * The size of the icon
     * The predefined values for the input size are *xs*, *s*, *l*, and *xl*.
     * *size* can accept any other string, for example *xxs*, which will be translated into class *sap-icon--xxs*.
     * @type {?}
     */
    IconComponent.prototype.size;
    /**
     * @type {?}
     * @private
     */
    IconComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvaWNvbi9pY29uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQzs7Ozs7O0lBTTlELGVBQWUsR0FBRyxVQUFVOzs7Ozs7SUFNNUIsaUJBQWlCLEdBQUcsZUFBZSxHQUFHLElBQUk7Ozs7Ozs7O0FBU2hEO0lBU21DLHlDQUFrQjtJQXlCakQsY0FBYztJQUNkLHVCQUFvQixVQUFzQjtRQUExQyxZQUNJLGtCQUFNLFVBQVUsQ0FBQyxTQUNwQjtRQUZtQixnQkFBVSxHQUFWLFVBQVUsQ0FBWTs7Ozs7O1FBZGpDLFVBQUksR0FBVyxFQUFFLENBQUM7O0lBZ0IzQixDQUFDO0lBZEQsY0FBYzs7Ozs7SUFDZCxzQ0FBYzs7OztJQUFkO1FBQ0ksSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1osSUFBSSxDQUFDLGtCQUFrQixDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUMzRDtRQUVELElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNYLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDMUQ7SUFDTCxDQUFDOztnQkFoQ0osU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxTQUFTO29CQUNuQixRQUFRLEVBQUUsRUFBRTtvQkFFWixJQUFJLEVBQUU7d0JBQ0YsSUFBSSxFQUFFLGNBQWM7cUJBQ3ZCO29CQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOztpQkFDeEM7Ozs7Z0JBOUJtQixVQUFVOzs7d0JBb0N6QixLQUFLO3VCQU9MLEtBQUs7O0lBaUJWLG9CQUFDO0NBQUEsQUF0Q0QsQ0FTbUMsa0JBQWtCLEdBNkJwRDtTQTdCWSxhQUFhOzs7Ozs7OztJQUt0Qiw4QkFBZTs7Ozs7OztJQU9mLDZCQUEyQjs7Ozs7SUFjZixtQ0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWJzdHJhY3RGZE5neENsYXNzIH0gZnJvbSAnLi4vdXRpbHMvYWJzdHJhY3QtZmQtbmd4LWNsYXNzJztcblxuLyoqIFxuICogQGhpZGRlblxuICogVGhlIGJhc2UgY2xhc3MgZm9yIHRoZSBpY29uIGNvbXBvbmVudCBcbiAqL1xuY29uc3QgQkFTRV9JQ09OX0NMQVNTID0gJ3NhcC1pY29uJztcblxuLyoqIFxuICogQGhpZGRlblxuICogUHJlZml4IGZvciBpY29uIHByb3AgY2xhc3NlcyBcbiAqL1xuY29uc3QgUFJFRklYX0lDT05fQ0xBU1MgPSBCQVNFX0lDT05fQ0xBU1MgKyAnLS0nO1xuXG4vKipcbiAqIFRoZSBjb21wb25lbnQgdGhhdCByZXByZXNlbnRzIGFuIGljb24uXG4gKlxuICogYGBgaHRtbFxuICogPGZkLWljb24gW2dseXBoXT1cImNhcnQtYXBwcm92YWxcIiBbc2l6ZV09XCInbCdcIj48L2ZkLWljb24+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdmZC1pY29uJyxcbiAgICB0ZW1wbGF0ZTogYGAsXG4gICAgc3R5bGVVcmxzOiBbJy4vaWNvbi5jb21wb25lbnQuc2NzcyddLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgcm9sZTogJ3ByZXNlbnRhdGlvbidcbiAgICB9LFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgSWNvbkNvbXBvbmVudCBleHRlbmRzIEFic3RyYWN0RmROZ3hDbGFzcyB7XG5cbiAgICAvKiogVGhlIGljb24gbmFtZSB0byBkaXNwbGF5LiBTZWUgdGhlIGljb24gcGFnZSBmb3IgdGhlIGxpc3Qgb2YgaWNvbnNcbiAgICAgKiBoZXJlOiBodHRwczovL3NhcC5naXRodWIuaW8vZnVuZGFtZW50YWwtbmd4L2ljb25cbiAgICAgKiAqL1xuICAgIEBJbnB1dCgpIGdseXBoO1xuXG4gICAgLyoqIFxuICAgICAqIFRoZSBzaXplIG9mIHRoZSBpY29uXG4gICAgICogVGhlIHByZWRlZmluZWQgdmFsdWVzIGZvciB0aGUgaW5wdXQgc2l6ZSBhcmUgKnhzKiwgKnMqLCAqbCosIGFuZCAqeGwqLlxuICAgICAqICpzaXplKiBjYW4gYWNjZXB0IGFueSBvdGhlciBzdHJpbmcsIGZvciBleGFtcGxlICp4eHMqLCB3aGljaCB3aWxsIGJlIHRyYW5zbGF0ZWQgaW50byBjbGFzcyAqc2FwLWljb24tLXh4cyouXG4gICAgICovXG4gICAgQElucHV0KCkgc2l6ZTogc3RyaW5nID0gJyc7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIF9zZXRQcm9wZXJ0aWVzKCkge1xuICAgICAgICBpZiAodGhpcy5nbHlwaCkge1xuICAgICAgICAgICAgdGhpcy5fYWRkQ2xhc3NUb0VsZW1lbnQoUFJFRklYX0lDT05fQ0xBU1MgKyB0aGlzLmdseXBoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLnNpemUpIHtcbiAgICAgICAgICAgIHRoaXMuX2FkZENsYXNzVG9FbGVtZW50KFBSRUZJWF9JQ09OX0NMQVNTICsgdGhpcy5zaXplKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XG4gICAgICAgIHN1cGVyKGVsZW1lbnRSZWYpO1xuICAgIH1cbn1cbiJdfQ==