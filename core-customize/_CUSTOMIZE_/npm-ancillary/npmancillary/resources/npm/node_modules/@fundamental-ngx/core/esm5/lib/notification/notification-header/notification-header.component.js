/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, HostBinding, Input, Output, ViewEncapsulation } from '@angular/core';
var NotificationHeaderComponent = /** @class */ (function () {
    function NotificationHeaderComponent() {
        /**
         * @hidden
         */
        this.fdNotificationHeaderClass = true;
        /**
         * Whether user wants to hide close button at the top. It's shown by default.
         */
        this.closeButton = true;
        /**
         * Event thrown always, when the close button is clicked
         */
        this.closeButtonClick = new EventEmitter();
    }
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    NotificationHeaderComponent.prototype.closeButtonClicked = /**
     * @hidden
     * @return {?}
     */
    function () {
        this.closeButtonClick.emit();
    };
    NotificationHeaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-notification-header',
                    template: "<div [ngClass]=\"['fd-notification__indicator--' + type]\" *ngIf=\"type\"></div>\n<ng-content select=\"[fd-notification-title]\"></ng-content>\n<button fd-button [glyph]=\"'decline'\" [options]=\"'light'\" class=\"fd-notification__close\" (click)=\"closeButtonClicked()\"></button>\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: [""]
                }] }
    ];
    NotificationHeaderComponent.propDecorators = {
        fdNotificationHeaderClass: [{ type: HostBinding, args: ['class.fd-notification__header',] }],
        type: [{ type: Input }],
        closeButton: [{ type: Input }],
        closeButtonClick: [{ type: Output }]
    };
    return NotificationHeaderComponent;
}());
export { NotificationHeaderComponent };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    NotificationHeaderComponent.prototype.fdNotificationHeaderClass;
    /**
     * type of Notification 'success' | 'warning' | 'information' | 'error'
     * @type {?}
     */
    NotificationHeaderComponent.prototype.type;
    /**
     * Whether user wants to hide close button at the top. It's shown by default.
     * @type {?}
     */
    NotificationHeaderComponent.prototype.closeButton;
    /**
     * Event thrown always, when the close button is clicked
     * @type {?}
     */
    NotificationHeaderComponent.prototype.closeButtonClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLWhlYWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi1oZWFkZXIvbm90aWZpY2F0aW9uLWhlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZHO0lBQUE7Ozs7UUFTSSw4QkFBeUIsR0FBWSxJQUFJLENBQUM7Ozs7UUFRMUMsZ0JBQVcsR0FBWSxJQUFJLENBQUM7Ozs7UUFJbkIscUJBQWdCLEdBQXVCLElBQUksWUFBWSxFQUFRLENBQUM7SUFNN0UsQ0FBQztJQUpHLGNBQWM7Ozs7O0lBQ1Asd0RBQWtCOzs7O0lBQXpCO1FBQ0ksSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2pDLENBQUM7O2dCQTFCSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsdVNBQW1EO29CQUVuRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7aUJBQ3hDOzs7NENBR0ksV0FBVyxTQUFDLCtCQUErQjt1QkFJM0MsS0FBSzs4QkFJTCxLQUFLO21DQUlMLE1BQU07O0lBT1gsa0NBQUM7Q0FBQSxBQTNCRCxJQTJCQztTQXJCWSwyQkFBMkI7Ozs7OztJQUVwQyxnRUFDMEM7Ozs7O0lBRzFDLDJDQUNhOzs7OztJQUdiLGtEQUM0Qjs7Ozs7SUFHNUIsdURBQ3lFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIEhvc3RCaW5kaW5nLCBJbnB1dCwgT3V0cHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2ZkLW5vdGlmaWNhdGlvbi1oZWFkZXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9ub3RpZmljYXRpb24taGVhZGVyLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9ub3RpZmljYXRpb24taGVhZGVyLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBOb3RpZmljYXRpb25IZWFkZXJDb21wb25lbnQge1xuICAgIC8qKiBAaGlkZGVuICovXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5mZC1ub3RpZmljYXRpb25fX2hlYWRlcicpXG4gICAgZmROb3RpZmljYXRpb25IZWFkZXJDbGFzczogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKiogdHlwZSBvZiBOb3RpZmljYXRpb24gJ3N1Y2Nlc3MnIHwgJ3dhcm5pbmcnIHwgJ2luZm9ybWF0aW9uJyB8ICdlcnJvcicgKi9cbiAgICBASW5wdXQoKVxuICAgIHR5cGU6IHN0cmluZztcblxuICAgIC8qKiBXaGV0aGVyIHVzZXIgd2FudHMgdG8gaGlkZSBjbG9zZSBidXR0b24gYXQgdGhlIHRvcC4gSXQncyBzaG93biBieSBkZWZhdWx0LiAqL1xuICAgIEBJbnB1dCgpXG4gICAgY2xvc2VCdXR0b246IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgLyoqIEV2ZW50IHRocm93biBhbHdheXMsIHdoZW4gdGhlIGNsb3NlIGJ1dHRvbiBpcyBjbGlja2VkICovXG4gICAgQE91dHB1dCgpXG4gICAgcmVhZG9ubHkgY2xvc2VCdXR0b25DbGljazogRXZlbnRFbWl0dGVyPHZvaWQ+ID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBwdWJsaWMgY2xvc2VCdXR0b25DbGlja2VkKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmNsb3NlQnV0dG9uQ2xpY2suZW1pdCgpO1xuICAgIH1cbn1cbiJdfQ==