import { AfterContentInit, ElementRef, EventEmitter } from '@angular/core';
import { CdkDrag, CdkDragMove } from '@angular/cdk/drag-drop';
import { ElementChord, LinkPosition } from '../dnd-list/dnd-list.directive';
export declare class DndContainerDirective implements AfterContentInit {
    element: ElementRef;
    /** Class added to element, when it's dragged. */
    readonly CLASS_WHEN_ELEMENT_DRAGGED: string;
    private placeholderElement;
    private lineElement;
    /** @hidden */
    cdkDrag: CdkDrag;
    constructor(element: ElementRef);
    /** Event thrown when the element is moved by 1px */
    readonly moved: EventEmitter<CdkDragMove>;
    /** Event thrown when the element is released */
    readonly released: EventEmitter<void>;
    /** Event thrown when the element is started to be dragged */
    readonly started: EventEmitter<void>;
    /** @hidden */
    getElementChord(isBefore: boolean, listMode: boolean): ElementChord;
    /** @hidden */
    ngAfterContentInit(): void;
    /** @hidden */
    onCdkMove(cdkMovedEvent: CdkDragMove): void;
    /** @hidden */
    onCdkDragReleased(): void;
    /** @hidden */
    onCdkDragStart(): void;
    /** @hidden */
    removePlaceholder(): void;
    /** @hidden */
    removeLine(): void;
    /** @hidden */
    createLine(position: LinkPosition, listMode: boolean): void;
    /** @hidden */
    private createPlaceHolder;
}
