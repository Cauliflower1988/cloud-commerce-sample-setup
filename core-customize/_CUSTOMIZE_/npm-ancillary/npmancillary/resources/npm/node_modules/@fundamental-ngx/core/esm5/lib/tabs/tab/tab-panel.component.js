/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChild, Input, TemplateRef, ViewEncapsulation } from '@angular/core';
import { TabTitleDirective } from '../tab-utils/tab-directives';
/** @type {?} */
var tabPanelUniqueId = 0;
/**
 * Represents the body of a tab element. It also contains elements pertaining to the associated tab header.
 */
var TabPanelComponent = /** @class */ (function () {
    function TabPanelComponent() {
        /**
         * Id of the tab. If none is provided, one will be generated.
         */
        this.id = 'fd-tab-panel' + tabPanelUniqueId++;
        /**
         * @hidden
         */
        this.expanded = false;
    }
    TabPanelComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-tab',
                    template: "<ng-container *ngIf=\"expanded\">\n  <ng-content></ng-content>\n</ng-container>\n",
                    host: {
                        role: 'tabpanel',
                        class: 'fd-tabs__panel',
                        '[attr.id]': 'id',
                        '[attr.aria-expanded]': 'expanded ? true : null',
                        '[class.is-expanded]': 'expanded'
                    },
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    TabPanelComponent.propDecorators = {
        titleTemplate: [{ type: ContentChild, args: [TabTitleDirective, { read: TemplateRef, static: false },] }],
        title: [{ type: Input }],
        ariaLabel: [{ type: Input }],
        ariaLabelledBy: [{ type: Input }],
        disabled: [{ type: Input }],
        id: [{ type: Input }]
    };
    return TabPanelComponent;
}());
export { TabPanelComponent };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    TabPanelComponent.prototype.titleTemplate;
    /**
     * The title of the tab header.
     * @type {?}
     */
    TabPanelComponent.prototype.title;
    /**
     * Aria-label of the tab. Also applied to the tab header.
     * @type {?}
     */
    TabPanelComponent.prototype.ariaLabel;
    /**
     * Id of the element that labels the tab. Also applied to the tab header.
     * @type {?}
     */
    TabPanelComponent.prototype.ariaLabelledBy;
    /**
     * Whether the tab is disabled.
     * @type {?}
     */
    TabPanelComponent.prototype.disabled;
    /**
     * Id of the tab. If none is provided, one will be generated.
     * @type {?}
     */
    TabPanelComponent.prototype.id;
    /**
     * @hidden
     * @type {?}
     */
    TabPanelComponent.prototype.expanded;
    /**
     * @hidden
     * @type {?}
     */
    TabPanelComponent.prototype.index;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLXBhbmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi90YWJzL3RhYi90YWItcGFuZWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9GLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDOztJQUU1RCxnQkFBZ0IsR0FBVyxDQUFDOzs7O0FBS2hDO0lBQUE7Ozs7UUFvQ0ksT0FBRSxHQUFXLGNBQWMsR0FBRyxnQkFBZ0IsRUFBRSxDQUFDOzs7O1FBR2pELGFBQVEsR0FBRyxLQUFLLENBQUM7SUFJckIsQ0FBQzs7Z0JBM0NBLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsUUFBUTtvQkFDbEIsNkZBQXlDO29CQUN6QyxJQUFJLEVBQUU7d0JBQ0YsSUFBSSxFQUFFLFVBQVU7d0JBQ2hCLEtBQUssRUFBRSxnQkFBZ0I7d0JBQ3ZCLFdBQVcsRUFBRSxJQUFJO3dCQUNqQixzQkFBc0IsRUFBRSx3QkFBd0I7d0JBQ2hELHFCQUFxQixFQUFFLFVBQVU7cUJBQ3BDO29CQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2lCQUN4Qzs7O2dDQUlJLFlBQVksU0FBQyxpQkFBaUIsRUFBRSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRTt3QkFJcEUsS0FBSzs0QkFJTCxLQUFLO2lDQUlMLEtBQUs7MkJBSUwsS0FBSztxQkFJTCxLQUFLOztJQVFWLHdCQUFDO0NBQUEsQUEzQ0QsSUEyQ0M7U0EvQlksaUJBQWlCOzs7Ozs7SUFHMUIsMENBQ2dDOzs7OztJQUdoQyxrQ0FDYzs7Ozs7SUFHZCxzQ0FDa0I7Ozs7O0lBR2xCLDJDQUN1Qjs7Ozs7SUFHdkIscUNBQ2tCOzs7OztJQUdsQiwrQkFDaUQ7Ozs7O0lBR2pELHFDQUFpQjs7Ozs7SUFHakIsa0NBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgSW5wdXQsIFRlbXBsYXRlUmVmLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGFiVGl0bGVEaXJlY3RpdmUgfSBmcm9tICcuLi90YWItdXRpbHMvdGFiLWRpcmVjdGl2ZXMnO1xuXG5sZXQgdGFiUGFuZWxVbmlxdWVJZDogbnVtYmVyID0gMDtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBib2R5IG9mIGEgdGFiIGVsZW1lbnQuIEl0IGFsc28gY29udGFpbnMgZWxlbWVudHMgcGVydGFpbmluZyB0byB0aGUgYXNzb2NpYXRlZCB0YWIgaGVhZGVyLlxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2ZkLXRhYicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3RhYi1wYW5lbC5jb21wb25lbnQuaHRtbCcsXG4gICAgaG9zdDoge1xuICAgICAgICByb2xlOiAndGFicGFuZWwnLFxuICAgICAgICBjbGFzczogJ2ZkLXRhYnNfX3BhbmVsJyxcbiAgICAgICAgJ1thdHRyLmlkXSc6ICdpZCcsXG4gICAgICAgICdbYXR0ci5hcmlhLWV4cGFuZGVkXSc6ICdleHBhbmRlZCA/IHRydWUgOiBudWxsJyxcbiAgICAgICAgJ1tjbGFzcy5pcy1leHBhbmRlZF0nOiAnZXhwYW5kZWQnXG4gICAgfSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxufSlcbmV4cG9ydCBjbGFzcyBUYWJQYW5lbENvbXBvbmVudCB7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBDb250ZW50Q2hpbGQoVGFiVGl0bGVEaXJlY3RpdmUsIHsgcmVhZDogVGVtcGxhdGVSZWYsIHN0YXRpYzogZmFsc2UgfSlcbiAgICB0aXRsZVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgLyoqIFRoZSB0aXRsZSBvZiB0aGUgdGFiIGhlYWRlci4gKi9cbiAgICBASW5wdXQoKVxuICAgIHRpdGxlOiBzdHJpbmc7XG5cbiAgICAvKiogQXJpYS1sYWJlbCBvZiB0aGUgdGFiLiBBbHNvIGFwcGxpZWQgdG8gdGhlIHRhYiBoZWFkZXIuICovXG4gICAgQElucHV0KClcbiAgICBhcmlhTGFiZWw6IHN0cmluZztcblxuICAgIC8qKiBJZCBvZiB0aGUgZWxlbWVudCB0aGF0IGxhYmVscyB0aGUgdGFiLiBBbHNvIGFwcGxpZWQgdG8gdGhlIHRhYiBoZWFkZXIuICovXG4gICAgQElucHV0KClcbiAgICBhcmlhTGFiZWxsZWRCeTogc3RyaW5nO1xuXG4gICAgLyoqIFdoZXRoZXIgdGhlIHRhYiBpcyBkaXNhYmxlZC4gKi9cbiAgICBASW5wdXQoKVxuICAgIGRpc2FibGVkOiBib29sZWFuO1xuXG4gICAgLyoqIElkIG9mIHRoZSB0YWIuIElmIG5vbmUgaXMgcHJvdmlkZWQsIG9uZSB3aWxsIGJlIGdlbmVyYXRlZC4gKi9cbiAgICBASW5wdXQoKVxuICAgIGlkOiBzdHJpbmcgPSAnZmQtdGFiLXBhbmVsJyArIHRhYlBhbmVsVW5pcXVlSWQrKztcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgZXhwYW5kZWQgPSBmYWxzZTtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgaW5kZXg6IG51bWJlcjtcbn1cbiJdfQ==