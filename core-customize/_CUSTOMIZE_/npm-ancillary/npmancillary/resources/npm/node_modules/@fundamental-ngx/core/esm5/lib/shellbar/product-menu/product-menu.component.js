/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ContentChild, HostListener, Input, ViewChild, ViewEncapsulation } from '@angular/core';
import { PopoverComponent } from '../../popover/popover.component';
import { MenuComponent } from '../../menu/menu.component';
/**
 * The component that represents a product menu.
 * Product menu is used for navigating to applications within the product.
 * ```html
 * <fd-product-menu [control]="productMenuControl"
 *                  [items]="productMenuItems">
 * </fd-product-menu>
 * ```
 */
var ProductMenuComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ProductMenuComponent, _super);
    function ProductMenuComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * @hidden
         */
        _this.productMenuCollapsed = false;
        /**
         * When set to true, popover list will be closed after selecting the option
         */
        _this.closePopoverOnSelect = false;
        return _this;
    }
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    ProductMenuComponent.prototype.onResize = /**
     * @hidden
     * @return {?}
     */
    function () {
        /** @type {?} */
        var mq = window.matchMedia('(max-width: 601px)');
        mq.matches ? this.productMenuCollapsed = true : this.productMenuCollapsed = false;
    };
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    ProductMenuComponent.prototype.ngOnInit = /**
     * @hidden
     * @return {?}
     */
    function () {
        this.onResize();
    };
    /**
     * @hidden
     */
    /**
     * @hidden
     * @param {?} item
     * @param {?} event
     * @return {?}
     */
    ProductMenuComponent.prototype.itemClicked = /**
     * @hidden
     * @param {?} item
     * @param {?} event
     * @return {?}
     */
    function (item, event) {
        if (this.closePopoverOnSelect) {
            this.popoverComponent.close();
        }
        item.callback(event);
    };
    /**
    * @hidden
    */
    /**
     * @hidden
     * @return {?}
     */
    ProductMenuComponent.prototype.isAnyGlyphInItems = /**
     * @hidden
     * @return {?}
     */
    function () {
        if (!this.items || this.items.length === 0) {
            return false;
        }
        return !!this.items.find((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item.glyph; }));
    };
    ProductMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-product-menu',
                    template: "<div class=\"fd-product-menu\">\n    <ng-template [ngIf]=\"items?.length > 0\" [ngIfElse]=\"subHeader\">\n        <fd-popover [options]=\"{placement: 'bottom-end'}\"\n                    [disabled]=\"!items || items.length === 0 || disabled\"\n                    [closeOnEscapeKey]=\"closeOnEscapeKey\"\n                    [closeOnOutsideClick]=\"closeOnOutsideClick\"\n                    [(isOpen)]=\"isOpen\"\n                    (isOpenChange)=\"openChanged($event)\"\n                    [isDropdown]=\"isDropdown\"\n                    [triggers]=\"triggers\"\n                    [focusTrapped]=\"false\">\n            <fd-popover-control>\n                <button class=\"fd-product-menu__control\">\n                    <span class=\"fd-shellbar__title fd-product-menu__title\">\n                        {{control}}\n                    </span>\n                </button>\n            </fd-popover-control>\n            <fd-popover-body>\n                <fd-menu fd-menu-addon [fdMenuAddonClass]=\"isAnyGlyphInItems()\" *ngIf=\"!menuComponent\">\n                    <ul fd-menu-list>\n                        <ng-container *ngFor=\"let item of items\">\n                            <li (click)=\"itemClicked(item, $event)\" *ngIf=\"item.link\">\n                                <a href=\"{{item.link}}\"\n                                   fd-menu-item\n                                   [ngClass]=\"{'fd-product-menu-padding-left': !item.glyph}\"\n                                   class=\"fd-product-menu-padding-right\">\n                                    {{item.name}}\n                                    <div fd-menu-item-addon *ngIf=\"item.glyph\">\n                                        <fd-icon [glyph]=\"item.glyph\"></fd-icon>\n                                    </div>\n                                </a>\n                            </li>\n                            <li *ngIf=\"!item.link\"\n                                fd-menu-item\n                                (click)=\"itemClicked(item, $event)\"\n                                [ngClass]=\"{'fd-product-menu-padding-left': !item.glyph}\"\n                                class=\"fd-product-menu-padding-right\">\n                                {{item.name}}\n                                <div fd-menu-item-addon *ngIf=\"item.glyph\">\n                                    <fd-icon [glyph]=\"item.glyph\"></fd-icon>\n                                </div>\n                            </li>\n                        </ng-container>\n                    </ul>\n                </fd-menu>\n                <ng-content select=\"fd-menu\"></ng-content>\n            </fd-popover-body>\n        </fd-popover>\n    </ng-template>\n</div>\n\n\n<ng-template #subHeader>\n    <span class=\"fd-shellbar__title fd-product-menu__title\">\n        {{control}}\n    </span>\n</ng-template>\n",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    ProductMenuComponent.propDecorators = {
        popoverComponent: [{ type: ViewChild, args: [PopoverComponent, { static: false },] }],
        menuComponent: [{ type: ContentChild, args: [MenuComponent, { static: false },] }],
        control: [{ type: Input }],
        items: [{ type: Input }],
        closePopoverOnSelect: [{ type: Input }],
        onResize: [{ type: HostListener, args: ['window:resize', [],] }]
    };
    return ProductMenuComponent;
}(PopoverComponent));
export { ProductMenuComponent };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    ProductMenuComponent.prototype.popoverComponent;
    /**
     * @hidden
     * @type {?}
     */
    ProductMenuComponent.prototype.menuComponent;
    /**
     * The control element to toggle the product menu,
     * represented by the name of the current application.
     * @type {?}
     */
    ProductMenuComponent.prototype.control;
    /**
     *  The items in the product menu. If the value is not passed or there is empty array,
     * the template changes and shows only control
     * @type {?}
     */
    ProductMenuComponent.prototype.items;
    /**
     * @hidden
     * @type {?}
     */
    ProductMenuComponent.prototype.productMenuCollapsed;
    /**
     * When set to true, popover list will be closed after selecting the option
     * @type {?}
     */
    ProductMenuComponent.prototype.closePopoverOnSelect;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1tZW51LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9zaGVsbGJhci9wcm9kdWN0LW1lbnUvcHJvZHVjdC1tZW51LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ILE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7Ozs7OztBQVkxRDtJQUswQyxnREFBZ0I7SUFMMUQ7UUFBQSxxRUFtRUM7Ozs7UUFyQ0csMEJBQW9CLEdBQVksS0FBSyxDQUFDOzs7O1FBSXRDLDBCQUFvQixHQUFZLEtBQUssQ0FBQzs7SUFpQzFDLENBQUM7SUEvQkcsY0FBYzs7Ozs7SUFFZCx1Q0FBUTs7OztJQURSOztZQUVVLEVBQUUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLG9CQUFvQixDQUFDO1FBQ2xELEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxLQUFLLENBQUM7SUFDdEYsQ0FBQztJQUVELGNBQWM7Ozs7O0lBQ2QsdUNBQVE7Ozs7SUFBUjtRQUNJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRUQ7O09BRUc7Ozs7Ozs7SUFDSCwwQ0FBVzs7Ozs7O0lBQVgsVUFBWSxJQUFTLEVBQUUsS0FBVTtRQUM3QixJQUFJLElBQUksQ0FBQyxvQkFBb0IsRUFBRTtZQUMzQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDakM7UUFDRCxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFRDs7TUFFRTs7Ozs7SUFDRixnREFBaUI7Ozs7SUFBakI7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDeEMsT0FBTyxLQUFLLENBQUM7U0FDaEI7UUFDRCxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUk7Ozs7UUFBQyxVQUFBLElBQUksSUFBSSxPQUFBLElBQUksQ0FBQyxLQUFLLEVBQVYsQ0FBVSxFQUFDLENBQUM7SUFDakQsQ0FBQzs7Z0JBbEVKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQiwyMEZBQTRDO29CQUM1QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtpQkFDeEM7OzttQ0FJSSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFO2dDQUk3QyxZQUFZLFNBQUMsYUFBYSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRTswQkFPN0MsS0FBSzt3QkFPTCxLQUFLO3VDQU9MLEtBQUs7MkJBSUwsWUFBWSxTQUFDLGVBQWUsRUFBRSxFQUFFOztJQThCckMsMkJBQUM7Q0FBQSxBQW5FRCxDQUswQyxnQkFBZ0IsR0E4RHpEO1NBOURZLG9CQUFvQjs7Ozs7O0lBRzdCLGdEQUNtQzs7Ozs7SUFHbkMsNkNBQzZCOzs7Ozs7SUFNN0IsdUNBQ2dCOzs7Ozs7SUFNaEIscUNBQzBCOzs7OztJQUcxQixvREFBc0M7Ozs7O0lBR3RDLG9EQUNzQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ29udGVudENoaWxkLCBIb3N0TGlzdGVuZXIsIElucHV0LCBPbkluaXQsIFZpZXdDaGlsZCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvcG92ZXJDb21wb25lbnQgfSBmcm9tICcuLi8uLi9wb3BvdmVyL3BvcG92ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IE1lbnVDb21wb25lbnQgfSBmcm9tICcuLi8uLi9tZW51L21lbnUuY29tcG9uZW50JztcbmltcG9ydCB7IFNoZWxsYmFyTWVudUl0ZW0gfSBmcm9tICcuLi9tb2RlbC9zaGVsbGJhci1tZW51LWl0ZW0nO1xuXG4vKipcbiAqIFRoZSBjb21wb25lbnQgdGhhdCByZXByZXNlbnRzIGEgcHJvZHVjdCBtZW51LlxuICogUHJvZHVjdCBtZW51IGlzIHVzZWQgZm9yIG5hdmlnYXRpbmcgdG8gYXBwbGljYXRpb25zIHdpdGhpbiB0aGUgcHJvZHVjdC5cbiAqIGBgYGh0bWxcbiAqIDxmZC1wcm9kdWN0LW1lbnUgW2NvbnRyb2xdPVwicHJvZHVjdE1lbnVDb250cm9sXCJcbiAqICAgICAgICAgICAgICAgICAgW2l0ZW1zXT1cInByb2R1Y3RNZW51SXRlbXNcIj5cbiAqIDwvZmQtcHJvZHVjdC1tZW51PlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnZmQtcHJvZHVjdC1tZW51JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vcHJvZHVjdC1tZW51LmNvbXBvbmVudC5odG1sJyxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFByb2R1Y3RNZW51Q29tcG9uZW50IGV4dGVuZHMgUG9wb3ZlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBWaWV3Q2hpbGQoUG9wb3ZlckNvbXBvbmVudCwgeyBzdGF0aWM6IGZhbHNlIH0pXG4gICAgcG9wb3ZlckNvbXBvbmVudDogUG9wb3ZlckNvbXBvbmVudDtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgQENvbnRlbnRDaGlsZChNZW51Q29tcG9uZW50LCB7IHN0YXRpYzogZmFsc2UgfSlcbiAgICBtZW51Q29tcG9uZW50OiBNZW51Q29tcG9uZW50O1xuXG4gICAgLyoqXG4gICAgICogVGhlIGNvbnRyb2wgZWxlbWVudCB0byB0b2dnbGUgdGhlIHByb2R1Y3QgbWVudSxcbiAgICAgKiByZXByZXNlbnRlZCBieSB0aGUgbmFtZSBvZiB0aGUgY3VycmVudCBhcHBsaWNhdGlvbi5cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIGNvbnRyb2w6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqICBUaGUgaXRlbXMgaW4gdGhlIHByb2R1Y3QgbWVudS4gSWYgdGhlIHZhbHVlIGlzIG5vdCBwYXNzZWQgb3IgdGhlcmUgaXMgZW1wdHkgYXJyYXksXG4gICAgICogdGhlIHRlbXBsYXRlIGNoYW5nZXMgYW5kIHNob3dzIG9ubHkgY29udHJvbFxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgaXRlbXM6IFNoZWxsYmFyTWVudUl0ZW1bXTtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgcHJvZHVjdE1lbnVDb2xsYXBzZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIC8qKiBXaGVuIHNldCB0byB0cnVlLCBwb3BvdmVyIGxpc3Qgd2lsbCBiZSBjbG9zZWQgYWZ0ZXIgc2VsZWN0aW5nIHRoZSBvcHRpb24gKi9cbiAgICBASW5wdXQoKVxuICAgIGNsb3NlUG9wb3Zlck9uU2VsZWN0OiBib29sZWFuID0gZmFsc2U7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBIb3N0TGlzdGVuZXIoJ3dpbmRvdzpyZXNpemUnLCBbXSlcbiAgICBvblJlc2l6ZSgpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgbXEgPSB3aW5kb3cubWF0Y2hNZWRpYSgnKG1heC13aWR0aDogNjAxcHgpJyk7XG4gICAgICAgIG1xLm1hdGNoZXMgPyB0aGlzLnByb2R1Y3RNZW51Q29sbGFwc2VkID0gdHJ1ZSA6IHRoaXMucHJvZHVjdE1lbnVDb2xsYXBzZWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIG5nT25Jbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLm9uUmVzaXplKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGl0ZW1DbGlja2VkKGl0ZW06IGFueSwgZXZlbnQ6IGFueSk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5jbG9zZVBvcG92ZXJPblNlbGVjdCkge1xuICAgICAgICAgICAgdGhpcy5wb3BvdmVyQ29tcG9uZW50LmNsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgICAgaXRlbS5jYWxsYmFjayhldmVudCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgKiBAaGlkZGVuXG4gICAgKi9cbiAgICBpc0FueUdseXBoSW5JdGVtcygpOiBib29sZWFuIHtcbiAgICAgICAgaWYgKCF0aGlzLml0ZW1zIHx8IHRoaXMuaXRlbXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICEhdGhpcy5pdGVtcy5maW5kKGl0ZW0gPT4gaXRlbS5nbHlwaCk7XG4gICAgfVxufVxuIl19