/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChild, HostListener, Input, ViewChild, ViewEncapsulation } from '@angular/core';
import { PopoverComponent } from '../../popover/popover.component';
import { MenuComponent } from '../../menu/menu.component';
/**
 * The component that represents a product menu.
 * Product menu is used for navigating to applications within the product.
 * ```html
 * <fd-product-menu [control]="productMenuControl"
 *                  [items]="productMenuItems">
 * </fd-product-menu>
 * ```
 */
export class ProductMenuComponent extends PopoverComponent {
    constructor() {
        super(...arguments);
        /**
         * @hidden
         */
        this.productMenuCollapsed = false;
        /**
         * When set to true, popover list will be closed after selecting the option
         */
        this.closePopoverOnSelect = false;
    }
    /**
     * @hidden
     * @return {?}
     */
    onResize() {
        /** @type {?} */
        const mq = window.matchMedia('(max-width: 601px)');
        mq.matches ? this.productMenuCollapsed = true : this.productMenuCollapsed = false;
    }
    /**
     * @hidden
     * @return {?}
     */
    ngOnInit() {
        this.onResize();
    }
    /**
     * @hidden
     * @param {?} item
     * @param {?} event
     * @return {?}
     */
    itemClicked(item, event) {
        if (this.closePopoverOnSelect) {
            this.popoverComponent.close();
        }
        item.callback(event);
    }
    /**
     * @hidden
     * @return {?}
     */
    isAnyGlyphInItems() {
        if (!this.items || this.items.length === 0) {
            return false;
        }
        return !!this.items.find((/**
         * @param {?} item
         * @return {?}
         */
        item => item.glyph));
    }
}
ProductMenuComponent.decorators = [
    { type: Component, args: [{
                selector: 'fd-product-menu',
                template: "<div class=\"fd-product-menu\">\n    <ng-template [ngIf]=\"items?.length > 0\" [ngIfElse]=\"subHeader\">\n        <fd-popover [options]=\"{placement: 'bottom-end'}\"\n                    [disabled]=\"!items || items.length === 0 || disabled\"\n                    [closeOnEscapeKey]=\"closeOnEscapeKey\"\n                    [closeOnOutsideClick]=\"closeOnOutsideClick\"\n                    [(isOpen)]=\"isOpen\"\n                    (isOpenChange)=\"openChanged($event)\"\n                    [isDropdown]=\"isDropdown\"\n                    [triggers]=\"triggers\"\n                    [focusTrapped]=\"false\">\n            <fd-popover-control>\n                <button class=\"fd-product-menu__control\">\n                    <span class=\"fd-shellbar__title fd-product-menu__title\">\n                        {{control}}\n                    </span>\n                </button>\n            </fd-popover-control>\n            <fd-popover-body>\n                <fd-menu fd-menu-addon [fdMenuAddonClass]=\"isAnyGlyphInItems()\" *ngIf=\"!menuComponent\">\n                    <ul fd-menu-list>\n                        <ng-container *ngFor=\"let item of items\">\n                            <li (click)=\"itemClicked(item, $event)\" *ngIf=\"item.link\">\n                                <a href=\"{{item.link}}\"\n                                   fd-menu-item\n                                   [ngClass]=\"{'fd-product-menu-padding-left': !item.glyph}\"\n                                   class=\"fd-product-menu-padding-right\">\n                                    {{item.name}}\n                                    <div fd-menu-item-addon *ngIf=\"item.glyph\">\n                                        <fd-icon [glyph]=\"item.glyph\"></fd-icon>\n                                    </div>\n                                </a>\n                            </li>\n                            <li *ngIf=\"!item.link\"\n                                fd-menu-item\n                                (click)=\"itemClicked(item, $event)\"\n                                [ngClass]=\"{'fd-product-menu-padding-left': !item.glyph}\"\n                                class=\"fd-product-menu-padding-right\">\n                                {{item.name}}\n                                <div fd-menu-item-addon *ngIf=\"item.glyph\">\n                                    <fd-icon [glyph]=\"item.glyph\"></fd-icon>\n                                </div>\n                            </li>\n                        </ng-container>\n                    </ul>\n                </fd-menu>\n                <ng-content select=\"fd-menu\"></ng-content>\n            </fd-popover-body>\n        </fd-popover>\n    </ng-template>\n</div>\n\n\n<ng-template #subHeader>\n    <span class=\"fd-shellbar__title fd-product-menu__title\">\n        {{control}}\n    </span>\n</ng-template>\n",
                encapsulation: ViewEncapsulation.None
            }] }
];
ProductMenuComponent.propDecorators = {
    popoverComponent: [{ type: ViewChild, args: [PopoverComponent, { static: false },] }],
    menuComponent: [{ type: ContentChild, args: [MenuComponent, { static: false },] }],
    control: [{ type: Input }],
    items: [{ type: Input }],
    closePopoverOnSelect: [{ type: Input }],
    onResize: [{ type: HostListener, args: ['window:resize', [],] }]
};
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    ProductMenuComponent.prototype.popoverComponent;
    /**
     * @hidden
     * @type {?}
     */
    ProductMenuComponent.prototype.menuComponent;
    /**
     * The control element to toggle the product menu,
     * represented by the name of the current application.
     * @type {?}
     */
    ProductMenuComponent.prototype.control;
    /**
     *  The items in the product menu. If the value is not passed or there is empty array,
     * the template changes and shows only control
     * @type {?}
     */
    ProductMenuComponent.prototype.items;
    /**
     * @hidden
     * @type {?}
     */
    ProductMenuComponent.prototype.productMenuCollapsed;
    /**
     * When set to true, popover list will be closed after selecting the option
     * @type {?}
     */
    ProductMenuComponent.prototype.closePopoverOnSelect;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1tZW51LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9zaGVsbGJhci9wcm9kdWN0LW1lbnUvcHJvZHVjdC1tZW51LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkgsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDJCQUEyQixDQUFDOzs7Ozs7Ozs7O0FBaUIxRCxNQUFNLE9BQU8sb0JBQXFCLFNBQVEsZ0JBQWdCO0lBTDFEOzs7OztRQThCSSx5QkFBb0IsR0FBWSxLQUFLLENBQUM7Ozs7UUFJdEMseUJBQW9CLEdBQVksS0FBSyxDQUFDO0lBaUMxQyxDQUFDOzs7OztJQTdCRyxRQUFROztjQUNFLEVBQUUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLG9CQUFvQixDQUFDO1FBQ2xELEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxLQUFLLENBQUM7SUFDdEYsQ0FBQzs7Ozs7SUFHRCxRQUFRO1FBQ0osSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3BCLENBQUM7Ozs7Ozs7SUFLRCxXQUFXLENBQUMsSUFBUyxFQUFFLEtBQVU7UUFDN0IsSUFBSSxJQUFJLENBQUMsb0JBQW9CLEVBQUU7WUFDM0IsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEtBQUssRUFBRSxDQUFDO1NBQ2pDO1FBQ0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6QixDQUFDOzs7OztJQUtELGlCQUFpQjtRQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUN4QyxPQUFPLEtBQUssQ0FBQztTQUNoQjtRQUNELE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSTs7OztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBQyxDQUFDO0lBQ2pELENBQUM7OztZQWxFSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsMjBGQUE0QztnQkFDNUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7YUFDeEM7OzsrQkFJSSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFOzRCQUk3QyxZQUFZLFNBQUMsYUFBYSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRTtzQkFPN0MsS0FBSztvQkFPTCxLQUFLO21DQU9MLEtBQUs7dUJBSUwsWUFBWSxTQUFDLGVBQWUsRUFBRSxFQUFFOzs7Ozs7O0lBN0JqQyxnREFDbUM7Ozs7O0lBR25DLDZDQUM2Qjs7Ozs7O0lBTTdCLHVDQUNnQjs7Ozs7O0lBTWhCLHFDQUMwQjs7Ozs7SUFHMUIsb0RBQXNDOzs7OztJQUd0QyxvREFDc0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgSG9zdExpc3RlbmVyLCBJbnB1dCwgT25Jbml0LCBWaWV3Q2hpbGQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb3BvdmVyQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vcG9wb3Zlci9wb3BvdmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNZW51Q29tcG9uZW50IH0gZnJvbSAnLi4vLi4vbWVudS9tZW51LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTaGVsbGJhck1lbnVJdGVtIH0gZnJvbSAnLi4vbW9kZWwvc2hlbGxiYXItbWVudS1pdGVtJztcblxuLyoqXG4gKiBUaGUgY29tcG9uZW50IHRoYXQgcmVwcmVzZW50cyBhIHByb2R1Y3QgbWVudS5cbiAqIFByb2R1Y3QgbWVudSBpcyB1c2VkIGZvciBuYXZpZ2F0aW5nIHRvIGFwcGxpY2F0aW9ucyB3aXRoaW4gdGhlIHByb2R1Y3QuXG4gKiBgYGBodG1sXG4gKiA8ZmQtcHJvZHVjdC1tZW51IFtjb250cm9sXT1cInByb2R1Y3RNZW51Q29udHJvbFwiXG4gKiAgICAgICAgICAgICAgICAgIFtpdGVtc109XCJwcm9kdWN0TWVudUl0ZW1zXCI+XG4gKiA8L2ZkLXByb2R1Y3QtbWVudT5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2ZkLXByb2R1Y3QtbWVudScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3Byb2R1Y3QtbWVudS5jb21wb25lbnQuaHRtbCcsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBQcm9kdWN0TWVudUNvbXBvbmVudCBleHRlbmRzIFBvcG92ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBAVmlld0NoaWxkKFBvcG92ZXJDb21wb25lbnQsIHsgc3RhdGljOiBmYWxzZSB9KVxuICAgIHBvcG92ZXJDb21wb25lbnQ6IFBvcG92ZXJDb21wb25lbnQ7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBDb250ZW50Q2hpbGQoTWVudUNvbXBvbmVudCwgeyBzdGF0aWM6IGZhbHNlIH0pXG4gICAgbWVudUNvbXBvbmVudDogTWVudUNvbXBvbmVudDtcblxuICAgIC8qKlxuICAgICAqIFRoZSBjb250cm9sIGVsZW1lbnQgdG8gdG9nZ2xlIHRoZSBwcm9kdWN0IG1lbnUsXG4gICAgICogcmVwcmVzZW50ZWQgYnkgdGhlIG5hbWUgb2YgdGhlIGN1cnJlbnQgYXBwbGljYXRpb24uXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICBjb250cm9sOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiAgVGhlIGl0ZW1zIGluIHRoZSBwcm9kdWN0IG1lbnUuIElmIHRoZSB2YWx1ZSBpcyBub3QgcGFzc2VkIG9yIHRoZXJlIGlzIGVtcHR5IGFycmF5LFxuICAgICAqIHRoZSB0ZW1wbGF0ZSBjaGFuZ2VzIGFuZCBzaG93cyBvbmx5IGNvbnRyb2xcbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIGl0ZW1zOiBTaGVsbGJhck1lbnVJdGVtW107XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIHByb2R1Y3RNZW51Q29sbGFwc2VkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICAvKiogV2hlbiBzZXQgdG8gdHJ1ZSwgcG9wb3ZlciBsaXN0IHdpbGwgYmUgY2xvc2VkIGFmdGVyIHNlbGVjdGluZyB0aGUgb3B0aW9uICovXG4gICAgQElucHV0KClcbiAgICBjbG9zZVBvcG92ZXJPblNlbGVjdDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBASG9zdExpc3RlbmVyKCd3aW5kb3c6cmVzaXplJywgW10pXG4gICAgb25SZXNpemUoKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IG1xID0gd2luZG93Lm1hdGNoTWVkaWEoJyhtYXgtd2lkdGg6IDYwMXB4KScpO1xuICAgICAgICBtcS5tYXRjaGVzID8gdGhpcy5wcm9kdWN0TWVudUNvbGxhcHNlZCA9IHRydWUgOiB0aGlzLnByb2R1Y3RNZW51Q29sbGFwc2VkID0gZmFsc2U7XG4gICAgfVxuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5vblJlc2l6ZSgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBpdGVtQ2xpY2tlZChpdGVtOiBhbnksIGV2ZW50OiBhbnkpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuY2xvc2VQb3BvdmVyT25TZWxlY3QpIHtcbiAgICAgICAgICAgIHRoaXMucG9wb3ZlckNvbXBvbmVudC5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgICAgIGl0ZW0uY2FsbGJhY2soZXZlbnQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICogQGhpZGRlblxuICAgICovXG4gICAgaXNBbnlHbHlwaEluSXRlbXMoKTogYm9vbGVhbiB7XG4gICAgICAgIGlmICghdGhpcy5pdGVtcyB8fCB0aGlzLml0ZW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAhIXRoaXMuaXRlbXMuZmluZChpdGVtID0+IGl0ZW0uZ2x5cGgpO1xuICAgIH1cbn1cbiJdfQ==