/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, forwardRef, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
/** @type {?} */
let toggleUniqueId = 0;
/**
 * The Toggle component is used to activate or deactivate an element.
 * It uses a visual metaphor to inform the user of the state of the toggle.
 */
export class ToggleComponent {
    constructor() {
        /**
         * Whether the toggle is disabled.
         */
        this.disabled = false;
        /**
         * Id for the toggle component. If omitted, a unique one is generated.
         */
        this.id = 'fd-toggle-' + toggleUniqueId++;
        /**
         * Whether the toggle is checked.
         */
        this.checked = false;
        /**
         * aria-label attribute of the inner input element.
         */
        this.ariaLabel = null;
        /**
         * aria-labelledby attribute of the inner input element.
         */
        this.ariaLabelledby = null;
        /**
         * Event fired when the state of the toggle changes.
         * *$event* can be used to retrieve the new state of the toggle.
         */
        this.checkedChange = new EventEmitter();
        /**
         * @hidden
         */
        this.onChange = (/**
         * @return {?}
         */
        () => { });
        /**
         * @hidden
         */
        this.onTouched = (/**
         * @return {?}
         */
        () => { });
    }
    /**
     * @hidden
     * @return {?}
     */
    ngOnInit() {
        if (this.size && this.size !== 'xs' && this.size !== 's' && this.size !== 'l') {
            this.size = null;
        }
    }
    /**
     * Set focus on the input element.
     * @return {?}
     */
    focus() {
        this.inputElement.nativeElement.focus();
    }
    /**
     * Get the id of the inner input element of the toggle.
     * @return {?}
     */
    get innerInputId() {
        return `${this.id}-input`;
    }
    /**
     * Get the isChecked property of the toggle.
     * @return {?}
     */
    get isChecked() {
        return this.checked;
    }
    /**
     * Set the isChecked property of the toggle.
     * @param {?} value
     * @return {?}
     */
    set isChecked(value) {
        this.checked = value;
        this.onChange(value);
        this.onTouched();
        this.checkedChange.emit(value);
    }
    /**
     * @hidden
     * @param {?} value Sets the value of the *checked* property of the toggle.
     * @return {?}
     */
    writeValue(value) {
        this.checked = value;
    }
    /**
     * @hidden
     * @param {?} fn User defined function that handles the *onChange* event of the toggle.
     * @return {?}
     */
    registerOnChange(fn) {
        this.onChange = fn;
    }
    /**
     * @hidden
     * @param {?} fn User defined function that handles the *onTouch* event of the toggle.
     * @return {?}
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    /**
     * @hidden
     * @param {?} isDisabled Sets the value of the *disabled* property of the toggle.
     * @return {?}
     */
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
}
ToggleComponent.decorators = [
    { type: Component, args: [{
                selector: 'fd-toggle',
                template: "<label fd-form-label [attr.for]=\"innerInputId\">\n    <span class=\"fd-toggle fd-form__control\" [ngClass]=\"(this.size ? ('fd-toggle--' + this.size) : '')\">\n        <input #input\n               type=\"checkbox\"\n               class=\"fd-toggle__input\"\n               [id]=\"innerInputId\"\n               [disabled]=\"this.disabled\"\n               [attr.aria-checked]=\"checked\"\n               [attr.aria-label]=\"this.ariaLabel\"\n               [attr.aria-labelledby]=\"this.ariaLabelledby\"\n               [(ngModel)]=\"this.isChecked\">\n        <span class=\"fd-toggle__switch\" role=\"presentation\"></span>\n    </span>\n    <ng-content></ng-content>\n</label>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef((/**
                         * @return {?}
                         */
                        () => ToggleComponent)),
                        multi: true
                    }
                ],
                host: {
                    class: 'fd-form__item fd-form__item--check fd-toggle-custom',
                    '[attr.id]': 'id',
                },
                encapsulation: ViewEncapsulation.None,
                styles: ["/*!\n * Fundamental Styles v0.3.0\n * Copyright (c) 2019 SAP SE or an SAP affiliate company.\n * Licensed under Apache License 2.0 (https://github.com/SAP/fundamental-styles/blob/master/LICENSE)\n *//*!\n.fd-toggle+(--no-border)\n    .fd-toggle__content+()\n    .fd-toggle__title+()\n*/.fd-toggle{font-size:14px;line-height:1.42857;color:#32363a;color:var(--fd-color-text-1,#32363a);font-family:\"72\",-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0 5px 0 0;border:0;position:relative;display:inline-block;width:52px;height:22px;vertical-align:middle}.fd-toggle:after,.fd-toggle:before{box-sizing:inherit;font-size:inherit}.fd-toggle[dir=rtl],[dir=rtl] .fd-toggle{margin-left:5px;margin-right:0}.fd-toggle__input{font-size:14px;line-height:1.42857;color:#32363a;color:var(--fd-color-text-1,#32363a);font-family:\"72\",-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0;border:0;opacity:0;width:0;height:0}.fd-toggle__input:after,.fd-toggle__input:before{box-sizing:inherit;font-size:inherit;display:none}.fd-toggle__input:active,.fd-toggle__input:focus,.fd-toggle__input:hover{border-color:transparent}.fd-toggle__input.is-disabled,.fd-toggle__input[disabled]{opacity:0;background-color:#ededee;border-color:rgba(137,145,154,.4)}.fd-toggle__input.is-disabled+.fd-toggle__switch,.fd-toggle__input[disabled]+.fd-toggle__switch{opacity:1;border-color:rgba(137,145,154,.4);box-shadow:none;background-color:#ededee;pointer-events:none}.fd-toggle__input.is-disabled+.fd-toggle__switch:before,.fd-toggle__input[disabled]+.fd-toggle__switch:before{border-color:rgba(137,145,154,.4)}.fd-toggle__input:checked.is-disabled+.fd-toggle__switch,.fd-toggle__input:checked[disabled]+.fd-toggle__switch{border-color:transparent;background-color:#c5dcf2;pointer-events:none}.fd-toggle__input:checked.is-disabled+.fd-toggle__switch:before,.fd-toggle__input:checked[disabled]+.fd-toggle__switch:before{border-color:transparent;background-color:#9ebbd8}.fd-toggle__switch{font-size:14px;line-height:1.42857;color:#32363a;color:var(--fd-color-text-1,#32363a);font-family:\"72\",-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0;border:1px solid #89919a;position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;border-color:var(--fd-color-neutral-4,#89919a);background-color:#d9d9d9;background-color:var(--fd-color-neutral-3,#d9d9d9);transition:.4s;border-radius:34px}.fd-toggle__switch:after,.fd-toggle__switch:before{box-sizing:inherit;font-size:inherit}.fd-toggle__switch:hover{border-color:#0254a7;border-color:var(--fd-color-action-selected,#0254a7)}.fd-toggle__switch:hover:before{border-color:#0254a7;border-color:var(--fd-color-action-selected,#0254a7);background-color:#ebf5fe}.fd-toggle__switch:before{position:absolute;content:\"\";height:32px;width:32px;left:-1px;top:-6px;background-color:#fff;background-color:var(--fd-color-background-2,#fff);border-color:var(--fd-color-neutral-4,#89919a);transition:.4s;border-radius:50%;z-index:1;box-shadow:0 1px 2px 0 rgba(0,0,0,.2);border:1px solid #89919a}.fd-toggle__input:checked+.fd-toggle__switch{background-color:rgba(10,110,209,.6);border-color:#0254a7;border-color:var(--fd-color-action-selected,#0254a7)}.fd-toggle__input:checked+.fd-toggle__switch:before{background-color:#0254a7;background-color:var(--fd-color-action-selected,#0254a7);border-color:#0254a7;border-color:var(--fd-color-action-selected,#0254a7);pointer-events:none;left:calc(100% - 31px)}.fd-toggle--xs{height:14px;width:36px}.fd-toggle--xs .fd-toggle__switch:before{height:20px;width:20px;top:-4.5px}.fd-toggle--xs input:checked+.fd-toggle__switch:before{left:15px}.fd-toggle--s{height:17px;width:40px}.fd-toggle--s .fd-toggle__switch:before{height:24px;width:24px;top:-5px}.fd-toggle--s input:checked+.fd-toggle__switch:before{left:15px}.fd-toggle--compact{height:16px;width:40px}.fd-toggle--compact .fd-toggle__switch:before{height:26px;width:26px;top:-6px}.fd-toggle--compact input:checked+.fd-toggle__switch:before{left:13px}.fd-toggle--l{height:22px;width:56px}.fd-toggle--l .fd-toggle__switch:before{height:32px;width:32px;top:-6px}.fd-toggle--l input:checked+.fd-toggle__switch:before{left:23px}.fd-toggle--label,.fd-toggle--semantic{font-size:14px;line-height:1.42857;color:#32363a;color:var(--fd-color-text-1,#32363a);font-family:\"72\",-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0;border:0;width:62px;height:22px}.fd-toggle--label:after,.fd-toggle--label:before,.fd-toggle--semantic:after,.fd-toggle--semantic:before{box-sizing:inherit;font-size:inherit}.fd-toggle--label .fd-toggle__label--on,.fd-toggle--semantic .fd-toggle__label--on{visibility:hidden}.fd-toggle--label.fd-toggle--compact,.fd-toggle--semantic.fd-toggle--compact{width:56px}.fd-toggle--label.fd-toggle--compact .fd-toggle__switch:before,.fd-toggle--semantic.fd-toggle--compact .fd-toggle__switch:before{top:-3px}.fd-toggle--label .fd-toggle__input:checked+.fd-toggle__switch:before,.fd-toggle--semantic .fd-toggle__input:checked+.fd-toggle__switch:before{left:calc(100% - 31px)}.fd-toggle--label .fd-toggle__input:checked+.fd-toggle__switch .fd-toggle__label--off,.fd-toggle--semantic .fd-toggle__input:checked+.fd-toggle__switch .fd-toggle__label--off{visibility:hidden}.fd-toggle--label .fd-toggle__input:checked+.fd-toggle__switch .fd-toggle__label--on,.fd-toggle--semantic .fd-toggle__input:checked+.fd-toggle__switch .fd-toggle__label--on{visibility:visible}.fd-toggle--label.fd-toggle--compact .fd-toggle__input:checked+.fd-toggle__switch:before,.fd-toggle--semantic.fd-toggle--compact .fd-toggle__input:checked+.fd-toggle__switch:before{left:calc(100% - 25px)}.fd-toggle__label{font-size:14px;line-height:1.42857;color:#32363a;color:var(--fd-color-text-1,#32363a);font-family:\"72\",-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-weight:400;-webkit-font-smoothing:antialiased;box-sizing:border-box;padding:0;margin:0;border:0}.fd-toggle__label:after,.fd-toggle__label:before{box-sizing:inherit;font-size:inherit}.fd-toggle__label--off{font-size:12px;line-height:1.33333;font-weight:400;position:absolute;right:6px;top:3px}.fd-toggle__label--on{font-size:12px;line-height:1.33333;font-weight:400;position:absolute;left:8px;top:3px}.fd-toggle--semantic .fd-toggle__switch{background-color:#ffebeb;background-color:var(--fd-color-background-5,#ffebeb);border-color:#b00;border-color:var(--fd-color-status-3,#b00)}.fd-toggle--semantic .fd-toggle__switch:before{background-color:#b00;background-color:var(--fd-color-status-3,#b00);border-color:#b00;border-color:var(--fd-color-status-3,#b00)}.fd-toggle--semantic input:checked+.fd-toggle__switch{background-color:#f1fdf6;background-color:var(--fd-color-background-3,#f1fdf6);border-color:#0a7e3e;border-color:var(--fd-color-status-1,#0a7e3e)}.fd-toggle--semantic input:checked+.fd-toggle__switch:before{background-color:#0a7e3e;background-color:var(--fd-color-status-1,#0a7e3e);border-color:#0a7e3e;border-color:var(--fd-color-status-1,#0a7e3e)}.fd-toggle__semantic--off{font-size:12px;line-height:1.33333;font-weight:400;position:absolute;right:12px;top:2px;color:#b00;color:var(--fd-color-status-3,#b00)}.fd-toggle__semantic--off:before{font-size:12px;line-height:1.33333;font-weight:400}.fd-toggle__semantic--on{font-size:12px;line-height:1.33333;font-weight:400;position:absolute;left:12px;top:2px;color:#0a7e3e;color:var(--fd-color-status-1,#0a7e3e)}.fd-toggle__semantic--on:before{font-size:12px;line-height:1.33333;font-weight:400}.fd-toggle-custom{display:block}"]
            }] }
];
ToggleComponent.propDecorators = {
    inputElement: [{ type: ViewChild, args: ['input', { static: false },] }],
    size: [{ type: Input }],
    disabled: [{ type: Input }],
    id: [{ type: Input }],
    checked: [{ type: Input }],
    ariaLabel: [{ type: Input }],
    ariaLabelledby: [{ type: Input }],
    checkedChange: [{ type: Output }]
};
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    ToggleComponent.prototype.inputElement;
    /**
     * The size of the toggle.
     * Can be one of the four *xs*, *s*, *l*, *error* or default.
     * @type {?}
     */
    ToggleComponent.prototype.size;
    /**
     * Whether the toggle is disabled.
     * @type {?}
     */
    ToggleComponent.prototype.disabled;
    /**
     * Id for the toggle component. If omitted, a unique one is generated.
     * @type {?}
     */
    ToggleComponent.prototype.id;
    /**
     * Whether the toggle is checked.
     * @type {?}
     */
    ToggleComponent.prototype.checked;
    /**
     * aria-label attribute of the inner input element.
     * @type {?}
     */
    ToggleComponent.prototype.ariaLabel;
    /**
     * aria-labelledby attribute of the inner input element.
     * @type {?}
     */
    ToggleComponent.prototype.ariaLabelledby;
    /**
     * Event fired when the state of the toggle changes.
     * *$event* can be used to retrieve the new state of the toggle.
     * @type {?}
     */
    ToggleComponent.prototype.checkedChange;
    /**
     * @hidden
     * @type {?}
     */
    ToggleComponent.prototype.onChange;
    /**
     * @hidden
     * @type {?}
     */
    ToggleComponent.prototype.onTouched;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi90b2dnbGUvdG9nZ2xlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNySSxPQUFPLEVBQXdCLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0lBRXJFLGNBQWMsR0FBVyxDQUFDOzs7OztBQXVCOUIsTUFBTSxPQUFPLGVBQWU7SUFqQjVCOzs7O1FBK0JJLGFBQVEsR0FBWSxLQUFLLENBQUM7Ozs7UUFJMUIsT0FBRSxHQUFXLFlBQVksR0FBRyxjQUFjLEVBQUUsQ0FBQzs7OztRQUk3QyxZQUFPLEdBQVksS0FBSyxDQUFDOzs7O1FBSXpCLGNBQVMsR0FBVyxJQUFJLENBQUM7Ozs7UUFJekIsbUJBQWMsR0FBVyxJQUFJLENBQUM7Ozs7O1FBT3JCLGtCQUFhLEdBQTBCLElBQUksWUFBWSxFQUFXLENBQUM7Ozs7UUFHNUUsYUFBUTs7O1FBQVEsR0FBRyxFQUFFLEdBQUUsQ0FBQyxFQUFDOzs7O1FBR3pCLGNBQVM7OztRQUFRLEdBQUcsRUFBRSxHQUFFLENBQUMsRUFBQztJQWdFOUIsQ0FBQzs7Ozs7SUE3REcsUUFBUTtRQUNKLElBQUksSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLEdBQUcsRUFBRTtZQUMzRSxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUNwQjtJQUNMLENBQUM7Ozs7O0lBR00sS0FBSztRQUNSLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzVDLENBQUM7Ozs7O0lBR0QsSUFBSSxZQUFZO1FBQ1osT0FBTyxHQUFHLElBQUksQ0FBQyxFQUFFLFFBQVEsQ0FBQztJQUM5QixDQUFDOzs7OztJQUdELElBQUksU0FBUztRQUNULE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN4QixDQUFDOzs7Ozs7SUFHRCxJQUFJLFNBQVMsQ0FBQyxLQUFLO1FBQ2YsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNyQixJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbkMsQ0FBQzs7Ozs7O0lBTUQsVUFBVSxDQUFDLEtBQVU7UUFDakIsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDekIsQ0FBQzs7Ozs7O0lBTUQsZ0JBQWdCLENBQUMsRUFBRTtRQUNmLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7Ozs7OztJQU1ELGlCQUFpQixDQUFDLEVBQUU7UUFDaEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7SUFDeEIsQ0FBQzs7Ozs7O0lBTUQsZ0JBQWdCLENBQUMsVUFBbUI7UUFDaEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUM7SUFDL0IsQ0FBQzs7O1lBMUhKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsV0FBVztnQkFDckIsdXJCQUFzQztnQkFFdEMsU0FBUyxFQUFFO29CQUNQO3dCQUNJLE9BQU8sRUFBRSxpQkFBaUI7d0JBQzFCLFdBQVcsRUFBRSxVQUFVOzs7d0JBQUMsR0FBRyxFQUFFLENBQUMsZUFBZSxFQUFDO3dCQUM5QyxLQUFLLEVBQUUsSUFBSTtxQkFDZDtpQkFDSjtnQkFDRCxJQUFJLEVBQUU7b0JBQ0YsS0FBSyxFQUFFLHFEQUFxRDtvQkFDNUQsV0FBVyxFQUFFLElBQUk7aUJBQ3BCO2dCQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOzthQUN4Qzs7OzJCQUdJLFNBQVMsU0FBQyxPQUFPLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFO21CQU9wQyxLQUFLO3VCQUlMLEtBQUs7aUJBSUwsS0FBSztzQkFJTCxLQUFLO3dCQUlMLEtBQUs7NkJBSUwsS0FBSzs0QkFPTCxNQUFNOzs7Ozs7O0lBbENQLHVDQUMyQzs7Ozs7O0lBTTNDLCtCQUNhOzs7OztJQUdiLG1DQUMwQjs7Ozs7SUFHMUIsNkJBQzZDOzs7OztJQUc3QyxrQ0FDeUI7Ozs7O0lBR3pCLG9DQUN5Qjs7Ozs7SUFHekIseUNBQzhCOzs7Ozs7SUFNOUIsd0NBQzRFOzs7OztJQUc1RSxtQ0FBeUI7Ozs7O0lBR3pCLG9DQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBmb3J3YXJkUmVmLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQsIFZpZXdDaGlsZCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxubGV0IHRvZ2dsZVVuaXF1ZUlkOiBudW1iZXIgPSAwO1xuXG4vKipcbiAqIFRoZSBUb2dnbGUgY29tcG9uZW50IGlzIHVzZWQgdG8gYWN0aXZhdGUgb3IgZGVhY3RpdmF0ZSBhbiBlbGVtZW50LlxuICogSXQgdXNlcyBhIHZpc3VhbCBtZXRhcGhvciB0byBpbmZvcm0gdGhlIHVzZXIgb2YgdGhlIHN0YXRlIG9mIHRoZSB0b2dnbGUuXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnZmQtdG9nZ2xlJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vdG9nZ2xlLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi90b2dnbGUuY29tcG9uZW50LnNjc3MnXSxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUb2dnbGVDb21wb25lbnQpLFxuICAgICAgICAgICAgbXVsdGk6IHRydWVcbiAgICAgICAgfVxuICAgIF0sXG4gICAgaG9zdDoge1xuICAgICAgICBjbGFzczogJ2ZkLWZvcm1fX2l0ZW0gZmQtZm9ybV9faXRlbS0tY2hlY2sgZmQtdG9nZ2xlLWN1c3RvbScsXG4gICAgICAgICdbYXR0ci5pZF0nOiAnaWQnLFxuICAgIH0sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBUb2dnbGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBWaWV3Q2hpbGQoJ2lucHV0JywgeyBzdGF0aWM6IGZhbHNlIH0pXG4gICAgaW5wdXRFbGVtZW50OiBFbGVtZW50UmVmPEhUTUxJbnB1dEVsZW1lbnQ+O1xuXG4gICAgLyoqXG4gICAgICogVGhlIHNpemUgb2YgdGhlIHRvZ2dsZS5cbiAgICAgKiBDYW4gYmUgb25lIG9mIHRoZSBmb3VyICp4cyosICpzKiwgKmwqLCAqZXJyb3IqIG9yIGRlZmF1bHQuXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICBzaXplOiBzdHJpbmc7XG5cbiAgICAvKiogV2hldGhlciB0aGUgdG9nZ2xlIGlzIGRpc2FibGVkLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgZGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIC8qKiBJZCBmb3IgdGhlIHRvZ2dsZSBjb21wb25lbnQuIElmIG9taXR0ZWQsIGEgdW5pcXVlIG9uZSBpcyBnZW5lcmF0ZWQuICovXG4gICAgQElucHV0KClcbiAgICBpZDogc3RyaW5nID0gJ2ZkLXRvZ2dsZS0nICsgdG9nZ2xlVW5pcXVlSWQrKztcblxuICAgIC8qKiBXaGV0aGVyIHRoZSB0b2dnbGUgaXMgY2hlY2tlZC4gKi9cbiAgICBASW5wdXQoKVxuICAgIGNoZWNrZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIC8qKiBhcmlhLWxhYmVsIGF0dHJpYnV0ZSBvZiB0aGUgaW5uZXIgaW5wdXQgZWxlbWVudC4gKi9cbiAgICBASW5wdXQoKVxuICAgIGFyaWFMYWJlbDogc3RyaW5nID0gbnVsbDtcblxuICAgIC8qKiBhcmlhLWxhYmVsbGVkYnkgYXR0cmlidXRlIG9mIHRoZSBpbm5lciBpbnB1dCBlbGVtZW50LiAqL1xuICAgIEBJbnB1dCgpXG4gICAgYXJpYUxhYmVsbGVkYnk6IHN0cmluZyA9IG51bGw7XG5cbiAgICAvKipcbiAgICAgKiBFdmVudCBmaXJlZCB3aGVuIHRoZSBzdGF0ZSBvZiB0aGUgdG9nZ2xlIGNoYW5nZXMuXG4gICAgICogKiRldmVudCogY2FuIGJlIHVzZWQgdG8gcmV0cmlldmUgdGhlIG5ldyBzdGF0ZSBvZiB0aGUgdG9nZ2xlLlxuICAgICAqL1xuICAgIEBPdXRwdXQoKVxuICAgIHJlYWRvbmx5IGNoZWNrZWRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPiA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgb25DaGFuZ2U6IGFueSA9ICgpID0+IHt9O1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBvblRvdWNoZWQ6IGFueSA9ICgpID0+IHt9O1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKHRoaXMuc2l6ZSAmJiB0aGlzLnNpemUgIT09ICd4cycgJiYgdGhpcy5zaXplICE9PSAncycgJiYgdGhpcy5zaXplICE9PSAnbCcpIHtcbiAgICAgICAgICAgIHRoaXMuc2l6ZSA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogU2V0IGZvY3VzIG9uIHRoZSBpbnB1dCBlbGVtZW50LiAqL1xuICAgIHB1YmxpYyBmb2N1cygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICAgIH1cblxuICAgIC8qKiBHZXQgdGhlIGlkIG9mIHRoZSBpbm5lciBpbnB1dCBlbGVtZW50IG9mIHRoZSB0b2dnbGUuICovXG4gICAgZ2V0IGlubmVySW5wdXRJZCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gYCR7dGhpcy5pZH0taW5wdXRgO1xuICAgIH1cblxuICAgIC8qKiBHZXQgdGhlIGlzQ2hlY2tlZCBwcm9wZXJ0eSBvZiB0aGUgdG9nZ2xlLiAqL1xuICAgIGdldCBpc0NoZWNrZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNoZWNrZWQ7XG4gICAgfVxuXG4gICAgLyoqIFNldCB0aGUgaXNDaGVja2VkIHByb3BlcnR5IG9mIHRoZSB0b2dnbGUuICovXG4gICAgc2V0IGlzQ2hlY2tlZCh2YWx1ZSkge1xuICAgICAgICB0aGlzLmNoZWNrZWQgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5vbkNoYW5nZSh2YWx1ZSk7XG4gICAgICAgIHRoaXMub25Ub3VjaGVkKCk7XG4gICAgICAgIHRoaXMuY2hlY2tlZENoYW5nZS5lbWl0KHZhbHVlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQHBhcmFtIHZhbHVlIFNldHMgdGhlIHZhbHVlIG9mIHRoZSAqY2hlY2tlZCogcHJvcGVydHkgb2YgdGhlIHRvZ2dsZS5cbiAgICAgKi9cbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpIHtcbiAgICAgICAgdGhpcy5jaGVja2VkID0gdmFsdWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIEBwYXJhbSBmbiBVc2VyIGRlZmluZWQgZnVuY3Rpb24gdGhhdCBoYW5kbGVzIHRoZSAqb25DaGFuZ2UqIGV2ZW50IG9mIHRoZSB0b2dnbGUuXG4gICAgICovXG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbikge1xuICAgICAgICB0aGlzLm9uQ2hhbmdlID0gZm47XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIEBwYXJhbSBmbiBVc2VyIGRlZmluZWQgZnVuY3Rpb24gdGhhdCBoYW5kbGVzIHRoZSAqb25Ub3VjaCogZXZlbnQgb2YgdGhlIHRvZ2dsZS5cbiAgICAgKi9cbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbikge1xuICAgICAgICB0aGlzLm9uVG91Y2hlZCA9IGZuO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAcGFyYW0gaXNEaXNhYmxlZCBTZXRzIHRoZSB2YWx1ZSBvZiB0aGUgKmRpc2FibGVkKiBwcm9wZXJ0eSBvZiB0aGUgdG9nZ2xlLlxuICAgICAqL1xuICAgIHNldERpc2FibGVkU3RhdGUoaXNEaXNhYmxlZDogYm9vbGVhbik6IHZvaWQge1xuICAgICAgICB0aGlzLmRpc2FibGVkID0gaXNEaXNhYmxlZDtcbiAgICB9XG5cbn1cbiJdfQ==