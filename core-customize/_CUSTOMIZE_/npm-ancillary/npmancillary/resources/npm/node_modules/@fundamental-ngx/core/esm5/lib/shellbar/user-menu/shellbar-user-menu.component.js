/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { PopoverComponent } from '../../popover/popover.component';
/**
 * This Component extends popover component and passes all of the options and events from outside to popover component
 * and Vice Versa
 *
 */
var ShellbarUserMenuComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ShellbarUserMenuComponent, _super);
    function ShellbarUserMenuComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Event emitted on item click
         */
        _this.itemClicked = new EventEmitter();
        return _this;
    }
    /**
     * @hidden
     */
    /**
     * @hidden
     * @param {?} item
     * @param {?} event
     * @return {?}
     */
    ShellbarUserMenuComponent.prototype.itemClick = /**
     * @hidden
     * @param {?} item
     * @param {?} event
     * @return {?}
     */
    function (item, event) {
        this.itemClicked.emit();
        if (item.callback) {
            item.callback(event);
        }
    };
    ShellbarUserMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-shellbar-user-menu',
                    template: "<div class=\"fd-shellbar__action fd-shellbar__action--show-always\" *ngIf=\"user\">\n    <div class=\"fd-user-menu\">\n        <fd-popover [options]=\"options || {placement: 'bottom-end'}\"\n                    [closeOnEscapeKey]=\"closeOnEscapeKey\"\n                    [closeOnOutsideClick]=\"closeOnOutsideClick\"\n                    [(isOpen)]=\"isOpen\"\n                    [triggers]=\"triggers\"\n                    (isOpenChange)=\"openChanged($event)\"\n                    [disabled]=\"disabled\"\n                    [isDropdown]=\"isDropdown\"\n                    [focusTrapped]=\"false\">\n            <fd-popover-control>\n                <div class=\"fd-user-menu__control\">\n                    <span fd-identifier *ngIf=\"!user.image\" [colorAccent]=\"user.colorAccent\" [circle]=\"true\" [size]=\"'xs'\">\n                        {{user.initials}}\n                    </span>\n                    <span fd-identifier *ngIf=\"user.image\" [colorAccent]=\"user.colorAccent\" [circle]=\"true\" [size]=\"'xs'\"\n                          [ngStyle]=\"{'background-image': 'url(' + user.image + ')'}\">\n                    </span>\n                </div>\n            </fd-popover-control>\n            <fd-popover-body>\n                <fd-menu>\n                    <ul fd-menu-list>\n                        <li fd-menu-item\n                            *ngFor=\"let item of userMenu\"\n                            (click)=\"itemClick(item, $event)\">\n                            {{item.text}}\n                        </li>\n                    </ul>\n                </fd-menu>\n            </fd-popover-body>\n        </fd-popover>\n    </div>\n</div>\n"
                }] }
    ];
    ShellbarUserMenuComponent.propDecorators = {
        user: [{ type: Input }],
        userMenu: [{ type: Input }],
        itemClicked: [{ type: Output }]
    };
    return ShellbarUserMenuComponent;
}(PopoverComponent));
export { ShellbarUserMenuComponent };
if (false) {
    /**
     * The user data.
     * @type {?}
     */
    ShellbarUserMenuComponent.prototype.user;
    /**
     * The user menu data.
     * @type {?}
     */
    ShellbarUserMenuComponent.prototype.userMenu;
    /**
     * Event emitted on item click
     * @type {?}
     */
    ShellbarUserMenuComponent.prototype.itemClicked;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hlbGxiYXItdXNlci1tZW51LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9zaGVsbGJhci91c2VyLW1lbnUvc2hlbGxiYXItdXNlci1tZW51LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7Ozs7OztBQVNuRTtJQUkrQyxxREFBZ0I7SUFKL0Q7UUFBQSxxRUEyQkM7Ozs7UUFYRyxpQkFBVyxHQUF1QixJQUFJLFlBQVksRUFBUSxDQUFDOztJQVcvRCxDQUFDO0lBVEc7O09BRUc7Ozs7Ozs7SUFDSCw2Q0FBUzs7Ozs7O0lBQVQsVUFBVSxJQUFzQixFQUFFLEtBQVU7UUFDeEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN4QixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDZixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3hCO0lBQ0wsQ0FBQzs7Z0JBMUJKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsdUJBQXVCO29CQUNqQyw2cERBQWtEO2lCQUNyRDs7O3VCQUlJLEtBQUs7MkJBSUwsS0FBSzs4QkFJTCxNQUFNOztJQVlYLGdDQUFDO0NBQUEsQUEzQkQsQ0FJK0MsZ0JBQWdCLEdBdUI5RDtTQXZCWSx5QkFBeUI7Ozs7OztJQUdsQyx5Q0FDbUI7Ozs7O0lBR25CLDZDQUM2Qjs7Ozs7SUFHN0IsZ0RBQzJEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvcG92ZXJDb21wb25lbnQgfSBmcm9tICcuLi8uLi9wb3BvdmVyL3BvcG92ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFNoZWxsYmFyTWVudUl0ZW0gfSBmcm9tICcuLi9tb2RlbC9zaGVsbGJhci1tZW51LWl0ZW0nO1xuaW1wb3J0IHsgU2hlbGxiYXJVc2VyIH0gZnJvbSAnLi4vbW9kZWwvc2hlbGxiYXItdXNlcic7XG5pbXBvcnQgeyBTaGVsbGJhclVzZXJNZW51IH0gZnJvbSAnLi4vbW9kZWwvc2hlbGxiYXItdXNlci1tZW51JztcblxuLyoqXG4gKiBUaGlzIENvbXBvbmVudCBleHRlbmRzIHBvcG92ZXIgY29tcG9uZW50IGFuZCBwYXNzZXMgYWxsIG9mIHRoZSBvcHRpb25zIGFuZCBldmVudHMgZnJvbSBvdXRzaWRlIHRvIHBvcG92ZXIgY29tcG9uZW50XG4gKiBhbmQgVmljZSBWZXJzYVxuICogKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnZmQtc2hlbGxiYXItdXNlci1tZW51JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vc2hlbGxiYXItdXNlci1tZW51LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBTaGVsbGJhclVzZXJNZW51Q29tcG9uZW50IGV4dGVuZHMgUG9wb3ZlckNvbXBvbmVudCB7XG5cbiAgICAvKiogVGhlIHVzZXIgZGF0YS4gKi9cbiAgICBASW5wdXQoKVxuICAgIHVzZXI6IFNoZWxsYmFyVXNlcjtcblxuICAgIC8qKiBUaGUgdXNlciBtZW51IGRhdGEuICovXG4gICAgQElucHV0KClcbiAgICB1c2VyTWVudTogU2hlbGxiYXJVc2VyTWVudVtdO1xuXG4gICAgLyoqIEV2ZW50IGVtaXR0ZWQgb24gaXRlbSBjbGljayAqL1xuICAgIEBPdXRwdXQoKVxuICAgIGl0ZW1DbGlja2VkOiBFdmVudEVtaXR0ZXI8dm9pZD4gPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgaXRlbUNsaWNrKGl0ZW06IFNoZWxsYmFyVXNlck1lbnUsIGV2ZW50OiBhbnkpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5pdGVtQ2xpY2tlZC5lbWl0KCk7XG4gICAgICAgIGlmIChpdGVtLmNhbGxiYWNrKSB7XG4gICAgICAgICAgICBpdGVtLmNhbGxiYWNrKGV2ZW50KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==