/**
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
import * as tslib_1 from "tslib";
/**
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
import { ComponentFactoryResolver, Directive, Input, OnDestroy, ViewContainerRef } from '@angular/core';
import { AbstractForm } from '../../models';
import { decorate } from './decorate';
var FormRendererDirective = /** @class */ (function () {
    function FormRendererDirective(componentFactoryResolver, viewContainerRef) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.viewContainerRef = viewContainerRef;
    }
    Object.defineProperty(FormRendererDirective.prototype, "form", {
        set: function (form) {
            this._dispose();
            var componentFactory = this.componentFactoryResolver.resolveComponentFactory(form.component);
            // Create and decorate the component's inputs.
            var componentRef = this.viewContainerRef.createComponent(componentFactory);
            this._subscription = decorate(componentRef, form);
        },
        enumerable: true,
        configurable: true
    });
    FormRendererDirective.prototype.ngOnDestroy = function () {
        this._dispose();
    };
    /**
     * @internal
     * Clear all views and unsubscribe to streams.
     */
    FormRendererDirective.prototype._dispose = function () {
        this._subscription && this._subscription.unsubscribe();
        this.viewContainerRef.clear();
    };
    FormRendererDirective.ctorParameters = function () { return [
        { type: ComponentFactoryResolver },
        { type: ViewContainerRef }
    ]; };
    tslib_1.__decorate([
        Input('formRenderer'),
        tslib_1.__metadata("design:type", AbstractForm),
        tslib_1.__metadata("design:paramtypes", [AbstractForm])
    ], FormRendererDirective.prototype, "form", null);
    FormRendererDirective = tslib_1.__decorate([
        Directive({
            selector: '[formRenderer]'
        }),
        tslib_1.__metadata("design:paramtypes", [ComponentFactoryResolver,
            ViewContainerRef])
    ], FormRendererDirective);
    return FormRendererDirective;
}());
export { FormRendererDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1yZW5kZXJlci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac21hcnQvdXRpbHMvIiwic291cmNlcyI6WyJtb2R1bGVzL2Zvcm0tYnVpbGRlci9kaXJlY3RpdmVzL2Zvcm0tcmVuZGVyZXIvZm9ybS1yZW5kZXJlci5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7R0FHRztBQUNILE9BQU8sRUFDSCx3QkFBd0IsRUFDeEIsU0FBUyxFQUNULEtBQUssRUFDTCxTQUFTLEVBQ1QsZ0JBQWdCLEVBQ25CLE1BQU0sZUFBZSxDQUFDO0FBR3ZCLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDNUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUt0QztJQWtCSSwrQkFDWSx3QkFBa0QsRUFDbEQsZ0JBQWtDO1FBRGxDLDZCQUF3QixHQUF4Qix3QkFBd0IsQ0FBMEI7UUFDbEQscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtJQUMzQyxDQUFDO0lBZEosc0JBQUksdUNBQUk7YUFBUixVQUFTLElBQWtCO1lBQ3ZCLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNoQixJQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyx1QkFBdUIsQ0FDMUUsSUFBSSxDQUFDLFNBQVMsQ0FDakIsQ0FBQztZQUVGLDhDQUE4QztZQUM5QyxJQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsZUFBZSxDQUFDLGdCQUFnQixDQUFDLENBQUM7WUFDN0UsSUFBSSxDQUFDLGFBQWEsR0FBRyxRQUFRLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3RELENBQUM7OztPQUFBO0lBT0QsMkNBQVcsR0FBWDtRQUNJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0ssd0NBQVEsR0FBaEI7UUFDSSxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDdkQsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ2xDLENBQUM7O2dCQWZxQyx3QkFBd0I7Z0JBQ2hDLGdCQUFnQjs7SUFiOUM7UUFEQyxLQUFLLENBQUMsY0FBYyxDQUFDOzBDQUNQLFlBQVk7aURBQVosWUFBWTtxREFTMUI7SUFoQlEscUJBQXFCO1FBSGpDLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxnQkFBZ0I7U0FDN0IsQ0FBQztpREFvQndDLHdCQUF3QjtZQUNoQyxnQkFBZ0I7T0FwQnJDLHFCQUFxQixDQW1DakM7SUFBRCw0QkFBQztDQUFBLEFBbkNELElBbUNDO1NBbkNZLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE5IFNBUCBTRSBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBAbW9kdWxlIHNtYXJ0dXRpbHNcbiAqL1xuaW1wb3J0IHtcbiAgICBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gICAgRGlyZWN0aXZlLFxuICAgIElucHV0LFxuICAgIE9uRGVzdHJveSxcbiAgICBWaWV3Q29udGFpbmVyUmVmXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IEFic3RyYWN0Rm9ybSB9IGZyb20gJy4uLy4uL21vZGVscyc7XG5pbXBvcnQgeyBkZWNvcmF0ZSB9IGZyb20gJy4vZGVjb3JhdGUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tmb3JtUmVuZGVyZXJdJ1xufSlcbmV4cG9ydCBjbGFzcyBGb3JtUmVuZGVyZXJEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIHByaXZhdGUgX3N1YnNjcmlwdGlvbiE6IFN1YnNjcmlwdGlvbjtcblxuICAgIEBJbnB1dCgnZm9ybVJlbmRlcmVyJylcbiAgICBzZXQgZm9ybShmb3JtOiBBYnN0cmFjdEZvcm0pIHtcbiAgICAgICAgdGhpcy5fZGlzcG9zZSgpO1xuICAgICAgICBjb25zdCBjb21wb25lbnRGYWN0b3J5ID0gdGhpcy5jb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkoXG4gICAgICAgICAgICBmb3JtLmNvbXBvbmVudFxuICAgICAgICApO1xuXG4gICAgICAgIC8vIENyZWF0ZSBhbmQgZGVjb3JhdGUgdGhlIGNvbXBvbmVudCdzIGlucHV0cy5cbiAgICAgICAgY29uc3QgY29tcG9uZW50UmVmID0gdGhpcy52aWV3Q29udGFpbmVyUmVmLmNyZWF0ZUNvbXBvbmVudChjb21wb25lbnRGYWN0b3J5KTtcbiAgICAgICAgdGhpcy5fc3Vic2NyaXB0aW9uID0gZGVjb3JhdGUoY29tcG9uZW50UmVmLCBmb3JtKTtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSBjb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcixcbiAgICAgICAgcHJpdmF0ZSB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmXG4gICAgKSB7fVxuXG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuX2Rpc3Bvc2UoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKiBDbGVhciBhbGwgdmlld3MgYW5kIHVuc3Vic2NyaWJlIHRvIHN0cmVhbXMuXG4gICAgICovXG4gICAgcHJpdmF0ZSBfZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5fc3Vic2NyaXB0aW9uICYmIHRoaXMuX3N1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB0aGlzLnZpZXdDb250YWluZXJSZWYuY2xlYXIoKTtcbiAgICB9XG59XG4iXX0=