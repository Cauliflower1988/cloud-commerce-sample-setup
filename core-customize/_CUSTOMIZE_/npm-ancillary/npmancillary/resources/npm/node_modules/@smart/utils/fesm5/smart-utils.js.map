{"version":3,"file":"smart-utils.js","sources":["ng://@smart/utils/utils/cloneable-utils.ts","ng://@smart/utils/utils/string-utils.ts","ng://@smart/utils/utils/url-utils.ts","ng://@smart/utils/utils/cryptographic-utils.ts","ng://@smart/utils/utils/functions-utils.ts","ng://@smart/utils/utils/common-ng-zone.ts","ng://@smart/utils/utils/window-utils.ts","ng://@smart/utils/utils/module-utils.ts","ng://@smart/utils/services/log.service.ts","ng://@smart/utils/utils/promise-utils.ts","ng://@smart/utils/utils/boolean-utils.ts","ng://@smart/utils/utils/http-utils.ts","ng://@smart/utils/utils/base-value-accessor.ts","ng://@smart/utils/utils/index.ts","ng://@smart/utils/services/annotation.service.ts","ng://@smart/utils/services/cache/cached-annotation.ts","ng://@smart/utils/services/cache/cache-action.ts","ng://@smart/utils/services/cache/engine/cache-engine.ts","ng://@smart/utils/services/cache/engine/default-cache-timing.ts","ng://@smart/utils/services/cache/engine/index.ts","ng://@smart/utils/constants.ts","ng://@smart/utils/services/cache/cache.service.ts","ng://@smart/utils/services/cache/eviction-tag.ts","ng://@smart/utils/services/cache/actions/rarely-changing-content.ts","ng://@smart/utils/services/cache/actions/index.ts","ng://@smart/utils/services/cache/index.ts","ng://@smart/utils/services/interceptors/backend/http-backend.service.ts","ng://@smart/utils/services/interceptors/backend/backend.interceptor.ts","ng://@smart/utils/services/interceptors/backend/index.ts","ng://@smart/utils/services/interceptors/flaws/flaw-injection.interceptor.ts","ng://@smart/utils/services/interceptors/flaws/flaw-injection-interceptor.Module.ts","ng://@smart/utils/services/interceptors/flaws/index.ts","ng://@smart/utils/interfaces/i-alert.service.ts","ng://@smart/utils/interfaces/i-authentication-service.ts","ng://@smart/utils/interfaces/i-storage.service.ts","ng://@smart/utils/interfaces/i-test-mode.service.ts","ng://@smart/utils/interfaces/i-modal-button-options.ts","ng://@smart/utils/interfaces/i-shared-data.service.ts","ng://@smart/utils/interfaces/i-settings-service.ts","ng://@smart/utils/interfaces/i-modal.service.ts","ng://@smart/utils/interfaces/i-session.service.ts","ng://@smart/utils/interfaces/i-authentication-manager.service.ts","ng://@smart/utils/services/interceptors/errors/retries/predicates/http-error.predicates.ts","ng://@smart/utils/services/interceptors/errors/retries/predicates/http-method.predicates.ts","ng://@smart/utils/services/interceptors/errors/retries/predicates/index.ts","ng://@smart/utils/services/interceptors/errors/retries/retryPolicies/exponential-retry.ts","ng://@smart/utils/services/interceptors/errors/retries/retryPolicies/linear-retry.ts","ng://@smart/utils/services/interceptors/errors/retries/retryPolicies/simple-retry.ts","ng://@smart/utils/services/interceptors/errors/retries/retryPolicies/index.ts","ng://@smart/utils/services/interceptors/errors/retries/retryStrategies/default-retry-strategy.factory.ts","ng://@smart/utils/services/interceptors/errors/retries/retryStrategies/exponential-retry-strategy.factory.ts","ng://@smart/utils/services/interceptors/errors/retries/retryStrategies/linear-retry-strategy-factory.ts","ng://@smart/utils/services/interceptors/errors/retries/operation-context.service.ts","ng://@smart/utils/services/interceptors/errors/retries/operation-context.annotation.ts","ng://@smart/utils/services/interceptors/errors/retries/index.ts","ng://@smart/utils/services/interceptors/errors/retry.interceptor.ts","ng://@smart/utils/services/interceptors/errors/permission-error.interceptor.ts","ng://@smart/utils/services/interceptors/errors/unauthorized-error.interceptor.ts","ng://@smart/utils/services/interceptors/errors/index.ts","ng://@smart/utils/services/interceptors/http-auth.interceptor.ts","ng://@smart/utils/services/interceptors/http-error-interceptor.service.ts","ng://@smart/utils/services/interceptors/http-error.interceptor.ts","ng://@smart/utils/services/interceptors/http-interceptor.module.ts","ng://@smart/utils/services/interceptors/i-http-error.interceptor.ts","ng://@smart/utils/utils/http-pagination-response-adapter.ts","ng://@smart/utils/services/interceptors/response-adapter-interceptor.service.ts","ng://@smart/utils/services/interceptors/index.ts","ng://@smart/utils/services/rest/rest-client.ts","ng://@smart/utils/services/rest/rest-service.factory.ts","ng://@smart/utils/services/rest/abstract-cached-rest.service.ts","ng://@smart/utils/services/authentication/sso-authentication.helper.ts","ng://@smart/utils/services/translations/i-translations-fetch.service.ts","ng://@smart/utils/services/browser/BrowserService.ts","ng://@smart/utils/services/browser/FingerPrintingService.ts","ng://@smart/utils/services/browser/index.ts","ng://@smart/utils/services/translations/translate-http.loader.ts","ng://@smart/utils/services/translations/translation.module.ts","ng://@smart/utils/services/translations/index.ts","ng://@smart/utils/components/login-dialog/login-dialog-resource-provider.ts","ng://@smart/utils/components/login-dialog/login-dialog.component.ts","ng://@smart/utils/components/language-dropdown/language-dropdown-adapter.ts","ng://@smart/utils/services/language.service.ts","ng://@smart/utils/components/language-dropdown/language-dropdown-helper.ts","ng://@smart/utils/components/language-dropdown/language-dropdown.ts","ng://@smart/utils/components/language-dropdown/language-dropdown.component.ts","ng://@smart/utils/components/select/i-select-adapter.ts","ng://@smart/utils/components/select/select.component.ts","ng://@smart/utils/directives/list-keyboard-control/list-item-keyboard-control.directive.ts","ng://@smart/utils/directives/list-keyboard-control/list-keyboard-control.directive.ts","ng://@smart/utils/directives/list-keyboard-control/list-keyboard-control.module.ts","ng://@smart/utils/components/select/select.module.ts","ng://@smart/utils/components/select/index.ts","ng://@smart/utils/components/language-dropdown/language-dropdown.module.ts","ng://@smart/utils/components/language-dropdown/index.ts","ng://@smart/utils/components/login-dialog/login-dialog.module.ts","ng://@smart/utils/components/login-dialog/index.ts","ng://@smart/utils/services/authentication/authentication.service.ts","ng://@smart/utils/services/authentication/index.ts","ng://@smart/utils/services/modal/modal-manager.service.ts","ng://@smart/utils/components/modal-template/modal-template.component.ts","ng://@smart/utils/components/modal-template/modal-template.module.ts","ng://@smart/utils/components/modal-template/index.ts","ng://@smart/utils/components/index.ts","ng://@smart/utils/services/modal/modal.service.ts","ng://@smart/utils/services/modal/index.ts","ng://@smart/utils/services/alert/alert.ts","ng://@smart/utils/services/alert/alert-token.ts","ng://@smart/utils/services/alert/alert-factory.ts","ng://@smart/utils/services/alert/alert.service.ts","ng://@smart/utils/services/alert/alert.module.ts","ng://@smart/utils/services/alert/index.ts","ng://@smart/utils/services/index.ts","ng://@smart/utils/modules/form-builder/models/abstract-form.ts","ng://@smart/utils/modules/form-builder/models/validator-parameters.ts","ng://@smart/utils/modules/form-builder/models/form-field.ts","ng://@smart/utils/modules/form-builder/models/form-grouping.ts","ng://@smart/utils/modules/form-builder/models/form-list.ts","ng://@smart/utils/modules/form-builder/models/input-properties.ts","ng://@smart/utils/modules/form-builder/models/index.ts","ng://@smart/utils/modules/form-builder/decorators.ts","ng://@smart/utils/modules/form-builder/components/form-lister/form-lister.component.ts","ng://@smart/utils/modules/form-builder/directives/form-renderer/decorate.ts","ng://@smart/utils/modules/form-builder/directives/form-renderer/form-renderer.directive.ts","ng://@smart/utils/modules/form-builder/services/injection-tokens.ts","ng://@smart/utils/modules/form-builder/form-builder.module.ts","ng://@smart/utils/modules/form-builder/directives/index.ts","ng://@smart/utils/modules/form-builder/services/registry.ts","ng://@smart/utils/modules/form-builder/services/component-registry.service.ts","ng://@smart/utils/modules/form-builder/services/async-validator-registry.service.ts","ng://@smart/utils/modules/form-builder/services/validator-registry.service.ts","ng://@smart/utils/modules/form-builder/services/schema-compiler.service.ts","ng://@smart/utils/modules/form-builder/services/index.ts","ng://@smart/utils/modules/form-builder/components/index.ts","ng://@smart/utils/modules/form-builder/helpers/get-persistence-map.helper.ts","ng://@smart/utils/modules/form-builder/index.ts","ng://@smart/utils/modules/index.ts","ng://@smart/utils/public_api.ts","ng://@smart/utils/smart-utils.ts"],"sourcesContent":["/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lodash from 'lodash';\nimport { Cloneable, Payload } from '../dtos';\n\n/**\n * @ngdoc service\n * @name @smartutils.services:CloneableUtils\n *\n * @description\n * utility service around Cloneable objects\n */\nexport class CloneableUtils {\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:CloneableUtils#makeCloneable\n     * @methodOf @smartutils.services:CloneableUtils\n     * @description\n     * returns a \"cloneable\" version of an object.\n     * Something is cloneable when it can be sent through W3C postMessage.\n     * To this purpose, functions must be removed from the cloneable candidate.\n     * @param {Object} json the object to be made cloneable\n     * @returns {Cloneable} the cloneable copy of the object\n     */\n    makeCloneable(_json: any): Cloneable {\n        const json = lodash.cloneDeepWith(_json, (value: any) => {\n            if (value !== undefined && value !== null && !this.isPrimitive(json)) {\n                // is a promise\n                if (value.then) {\n                    return null;\n                } else if (typeof value === 'function') {\n                    return null;\n                } else if (lodash.isElement(value)) {\n                    return null;\n                    // is yjQuery\n                } else if (\n                    typeof value !== 'string' &&\n                    value.hasOwnProperty('length') &&\n                    !value.forEach\n                ) {\n                    return null;\n                } else {\n                    return value;\n                }\n            } else {\n                return value;\n            }\n        });\n        if (json === undefined || json === null || this.isPrimitive(json)) {\n            return json;\n        } else if (json.hasOwnProperty('length') || json.forEach) {\n            // Array, already taken care of by yjQuery\n            return json.map((arrayElement: any) => this.makeCloneable(arrayElement)) as Cloneable;\n        } else {\n            // JSON\n            return Object.keys(json).reduce(\n                (clone, directKey) => {\n                    if (directKey.indexOf('$') !== 0) {\n                        clone[directKey] = this.makeCloneable(json[directKey]);\n                    }\n                    return clone;\n                },\n                {} as Payload\n            );\n        }\n    }\n\n    private isPrimitive(value: any) {\n        return typeof value === 'number' || typeof value === 'string' || typeof value === 'boolean';\n    }\n}\nexport const cloneableUtils = new CloneableUtils();\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { TypedMap } from '../dtos';\n/**\n * @ngdoc service\n * @name @smartutils.services:StringUtils\n *\n * @description\n * utility service around Strings.\n */\nexport class StringUtils {\n    /**\n     * @ngdoc service\n     * @name @smartutils.services:StringUtils#isBlank\n     * @methodOf @smartutils.services:StringUtils\n     *\n     * @description\n     * <b>isBlank</b> will check if a given string is undefined or null or empty.\n     * - returns TRUE for undefined / null/ empty string\n     * - returns FALSE otherwise\n     *\n     * @param {String} inputString any input string.\n     *\n     * @returns {boolean} true if the string is null else false\n     */\n    isBlank(value: any): boolean {\n        return (\n            typeof value === 'undefined' ||\n            value === null ||\n            value === 'null' ||\n            value.toString().trim().length === 0\n        );\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:StringUtils#regExpFactory\n     * @methodOf @smartutils.services:StringUtils\n     *\n     * @description\n     * <b>regExpFactory</b> will convert a given pattern into a regular expression.\n     * This method will prepend and append a string with ^ and $ respectively replaces\n     * and wildcards (*) by proper regex wildcards.\n     *\n     * @param {String} pattern any string that needs to be converted to a regular expression.\n     *\n     * @returns {RegExp} a regular expression generated from the given string.\n     *\n     */\n\n    regExpFactory(pattern: string): RegExp {\n        const onlyAlphanumericsRegex = new RegExp(/^[a-zA-Z\\d]+$/i);\n        const antRegex = new RegExp(/^[a-zA-Z\\d\\*]+$/i);\n\n        let regexpKey;\n        if (onlyAlphanumericsRegex.test(pattern)) {\n            regexpKey = ['^', '$'].join(pattern);\n        } else if (antRegex.test(pattern)) {\n            regexpKey = ['^', '$'].join(pattern.replace(/\\*/g, '.*'));\n        } else {\n            regexpKey = pattern;\n        }\n\n        return new RegExp(regexpKey, 'g');\n    }\n\n    /*\n     * formats HTML outputs typically from Node.outerHTML to easy string comparison by:\n     * - remove empty lines\n     * - remove spaces between tags\n     * - normalize remainign spaces to a single one\n     *\n     */\n    formatHTML(rawHTML: string): string {\n        return rawHTML\n            .replace(/^\\s*\\n/gm, '')\n            .replace(/\\>[\\t\\s]+\\</g, '><')\n            .replace(/[\\r\\n\\t\\s]+/g, ' ');\n    }\n\n    /**\n     * @ngdoc service\n     * @name @smartutils.services:StringUtils#sanitize\n     * @methodOf @smartutils.services:StringUtils\n     *\n     * @description\n     * <b>escapes any harmful scripting from a string, leaves innocuous HTML untouched/b>\n     * @param {String} a string that needs to be sanitized.\n     *\n     * @returns {String} the sanitized string.\n     *\n     */\n    sanitize = (str: string): string => {\n        /* The correct solution for this is to use Negative Lookbehind Regex expression which is available as part of ES2018. // str.replace(/(?:(?<!\\\\)([()]))/g, '\\\\$1')\n        But in order to support cross browser compatibility, the string is reversed and negative lookahead is used instead. */\n        return !this.isBlank(str)\n            ? str\n                  .split('')\n                  .reverse()\n                  .join('')\n                  .replace(/(?:(([()])(?!\\\\)))/g, '$1\\\\')\n                  .split('')\n                  .reverse()\n                  .join('')\n            : str;\n    };\n\n    /**\n     * @ngdoc service\n     * @name @smartutils.services:StringUtils#encode\n     * @methodOf @smartutils.services:StringUtils\n     *\n     * @description\n     * will return a encoded value for any JSON object passed as argument\n     * @param {object} JSON object to be encoded\n     */\n    encode = (object: any): any => {\n        /* first we use encodeURIComponent to get percent-encoded UTF-8,\n         * then we convert the percent encodings into raw bytes which\n         * can be fed into btoa.\n         * from https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n         */\n        return btoa(\n            encodeURIComponent(JSON.stringify(object)).replace(\n                /%([0-9A-F]{2})/g,\n                function toSolidBytes(match: any, p1: string) {\n                    return String.fromCharCode(parseInt(p1, 16));\n                }\n            )\n        );\n    };\n\n    /**\n     * @ngdoc service\n     * @name @smartutils.services:StringUtils#replaceAll\n     * @methodOf @smartutils.services:StringUtils\n     *\n     * @description\n     * will return a string where all matches for the string regexps keys passed in the substitutionMap will have been substituted by correspoing values in the substitutionMap\n     * @param {string} string the string to substitute keys in object to be encoded\n     * @param {TypedMap<string>} substitutionMap the map of string regexp to string substitution values\n     * @returns {string} the substituted string\n     */\n    replaceAll = (str: string, substitutionMap: TypedMap<string>) => {\n        const regex = new RegExp(Object.keys(substitutionMap).join('|'), 'g');\n        return str.replace(regex, function(matched) {\n            return substitutionMap[matched];\n        });\n    };\n}\n\nexport const stringUtils = new StringUtils();\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lodash from 'lodash';\nimport { stringUtils } from './string-utils';\nimport { TypedMap } from '../dtos';\n\n/* tslint:disable:max-classes-per-file */\n\n/**\n * @ngdoc service\n * @name @smartutils.services:UrlUtils#URIBuilder\n *\n * @description\n * builder or URIs, build() method must be invoked to actually retrieve a URI\n *\n * @param {Object} modalStack, the $modalStack service of angular-ui.\n */\n\nexport class URIBuilder {\n    private readonly wholeWordMatch = '[\\\\w]+';\n\n    constructor(private uri: string) {}\n\n    build() {\n        return this.uri;\n    }\n\n    /**\n     * @ngdoc method\n     * @name  @smartutils.services:UrlUtils#URIBuilder#replaceParams\n     * @methodOf  @smartutils.services:UrlUtils#URIBuilder\n     *\n     * @description\n     * Substitute all \":\" prefixed placeholders in the full url with the matching values in the given params\n     * Substitute Non \":\" prefixed placeholders containg \"_\"\n     *\n     * @param {Object} params a map of placeholder names / values\n     */\n    replaceParams(params: TypedMap<string>): URIBuilder {\n        const clone = lodash.cloneDeep(this);\n        if (params) {\n            // order the keys by descending length\n            clone.uri = Object.keys(params)\n                .sort(function(a, b) {\n                    return b.length - a.length;\n                })\n                .reduce((tempURL: string, key: string) => {\n                    return this.substituteKeyForValue(tempURL, key, params[key]);\n                }, clone.uri);\n        }\n        return clone;\n    }\n\n    /**\n     * @ngdoc method\n     * @name  @smartutils.services:UrlUtils#URIBuilder#sanitize\n     * @methodOf  @smartutils.services:UrlUtils#URIBuilder\n     *\n     * @description\n     * removes unresolved \":\" prefixed placeholders from absolute path\n     */\n    sanitize(): URIBuilder {\n        const clone = lodash.cloneDeep(this);\n        const uriDomainAndPath: string[] | null = /(https?:\\/\\/[^\\/]*)(\\/.*)/.exec(clone.uri);\n        clone.uri = uriDomainAndPath == null ? clone.uri : uriDomainAndPath[2];\n        clone.uri = this.substituteKeyForValue(clone.uri, this.wholeWordMatch, '')\n            .replace(/\\/\\//, '/') // to replace double slash (api/:identifier/data?param=true) if :identifier is removed\n            .replace(/\\/\\?/, '?') // to replace slash question mark (api/:identifier?param=true) if :identifier is removed\n            .replace(/\\/$/, ''); // to remove trailing slash\n\n        clone.uri = uriDomainAndPath == null ? clone.uri : uriDomainAndPath[1] + clone.uri;\n        return clone;\n    }\n\n    private substituteKeyForValue(url: string, key: string, value: string): string {\n        url = url\n            .replace(new RegExp(':' + key + '/'), `${value || ''}/`)\n            .replace(new RegExp(':' + key + '$'), `${value || ''}`)\n            .replace(new RegExp(':' + key + '\\\\?'), `${value || ''}?`)\n            .replace(new RegExp(':' + key + '&'), `${value || ''}&`);\n\n        /*\n         * to cater for special case of smartedit\n         * where some non \":\" prefixed placeholders must be resolved too\n         * we limit it though to keys containing \"_\" (case for smartedit)\n         * since it would otherwise breaks most APIs patterns\n         */\n        if (key !== this.wholeWordMatch && key.includes('_')) {\n            const _uri = url.includes('?') ? url.substr(0, url.indexOf('?')) : url;\n            const uri = _uri.replace(new RegExp('\\\\b' + key + '\\\\b'), `${value || ''}`);\n            url = url.includes('?') ? uri + url.substr(url.indexOf('?')) : uri;\n        }\n        return url;\n    }\n}\n/**\n * @ngdoc service\n * @name @smartutils.services:UrlUtils\n *\n * @description\n * A collection of utility methods for manipulating URLs\n */\nexport class UrlUtils {\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:UrlUtils#getOrigin\n     * @methodOf @smartutils.services:UrlUtils\n     * @description\n     * returns document location origin\n     * Some browsers still do not support W3C document.location.origin, this function caters for gap.\n     * @param {String =} url optional any url\n     */\n    getOrigin(url?: string): string {\n        if (url) {\n            let link = document.createElement('a');\n            link.setAttribute('href', url);\n            const origin =\n                link.protocol + '//' + link.hostname + (link.port ? ':' + link.port : '');\n            // @ts-ignore\n            link = null; // GC\n            return origin;\n        } else {\n            return (\n                window.location.protocol +\n                '//' +\n                window.location.hostname +\n                (window.location.port ? ':' + window.location.port : '')\n            );\n        }\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:UrlUtils#getURI\n     * @methodOf @smartutils.services:UrlUtils\n     *\n     * @description\n     * Will return the URI part of a URL\n     * @param {String} url the URL the URI of which is to be returned\n     */\n    getURI(url: string): string {\n        return url && url.indexOf('?') > -1 ? url.split('?')[0] : url;\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:UrlUtils#updateUrlParameter\n     * @methodOf @smartutils.services:UrlUtils\n     *\n     * @description\n     * Updates a URL to contain the query param and value provided. If already exists then it is updated,\n     * if it did not previously exist, then it will be added.\n     *\n     * @param {String} url The url to be updated (this param will not be modified)\n     * @param {String} key The query param key\n     * @param {String} value The query param value\n     *\n     * @returns {String} The url with updated key/value\n     */\n    updateUrlParameter(url: string, key: string, value: string): string {\n        const i = url.indexOf('#');\n        const hash = i === -1 ? '' : url.substr(i);\n        url = i === -1 ? url : url.substr(0, i);\n        const regex = new RegExp('([?&])' + key + '=.*?(&|$)', 'i');\n        const separator = url.indexOf('?') !== -1 ? '&' : '?';\n\n        if (url.match(regex)) {\n            url = url.replace(regex, '$1' + key + '=' + value + '$2');\n        } else {\n            url = url + separator + key + '=' + value;\n        }\n        return url + hash;\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:UrlUtils#getQueryString\n     * @methodOf @smartutils.services:UrlUtils\n     *\n     * @description\n     * <b>getQueryString</b> will convert a given object into a query string.\n     *\n     * Below is the code snippet for sample input and sample output:\n     *\n     * <pre>\n     * var params = {\n     *  key1 : 'value1',\n     *  key2 : 'value2',\n     *  key3 : 'value3'\n     *  }\n     *\n     *  var output = getQueryString(params);\n     *\n     *  // The output is '?&key1=value1&key2=value2&key3=value3'\n     *\n     * </pre>\n     * @param {Object} params Object containing a list of params.\n     *\n     * @returns {String} a query string\n     */\n    getQueryString(params: any): string {\n        let queryString = '';\n        if (params) {\n            for (const param in params) {\n                if (params.hasOwnProperty(param)) {\n                    (lodash.isArray(params[param]) ? params[param] : [params[param]]).forEach(\n                        (value: any) => {\n                            queryString +=\n                                '&' + encodeURIComponent(param) + '=' + encodeURIComponent(value);\n                        }\n                    );\n                }\n            }\n        }\n        return '?' + (!stringUtils.isBlank(queryString) ? queryString.substring(1) : queryString);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:UrlUtils#parseQuery\n     * @methodOf @smartutils.services:UrlUtils\n     *\n     * @description\n     * <b>parseQuery</b> will convert a given query string to an object.\n     *\n     * Below is the code snippet for sample input and sample output:\n     *\n     * <pre>\n     * var query = '?key1=value1&key2=value2&key3=value3';\n     *\n     * var output = parseQuery(query);\n     *\n     * // The output is { key1 : 'value1', key2 : 'value2', key3 : 'value3' }\n     *\n     * </pre>\n     * @param {String} query String that needs to be parsed.\n     *\n     * @returns {Object} an object containing all params of the given query\n     */\n    parseQuery(str: any): JSON {\n        const objURL = {} as any;\n\n        str.replace(new RegExp('([^?=&]+)(=([^&]*))?', 'g'), function(\n            $0: any,\n            $1: any,\n            $2: any,\n            $3: any\n        ) {\n            objURL[$1] = $3;\n        });\n        return objURL;\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:UrlUtils#getAbsoluteURL\n     * @methodOf @smartutils.services:UrlUtils\n     *\n     * @description\n     * Makes url absolute (with provided domain) if not yet\n     *\n     * @param {String} domain the domain with witch to prepend the url if it is not absolute\n     * @param {String} url the url to test\n     *\n     * @returns {String} url\n     */\n    getAbsoluteURL(domain: string, url: string): string {\n        // url regex\n        // scheme:[//[user[:password]@]host[:port]][/path][?query][#fragment]\n        const re = new RegExp(\n            '([a-zA-Z0-9]+://)' + // scheme\n            '([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?' + // user:password\n            '([a-zA-Z0-9.-]+)' + // hostname\n            '|([0-9]+\\\\.[0-9]+\\\\.[0-9]+\\\\.[0-9]+)' + // or ip\n            '(:[0-9]+)?' + // port\n                '(/.*)?' // everything else\n        );\n\n        return re.exec(url) ? url : domain + url;\n    }\n}\n\nexport const urlUtils = new UrlUtils();\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as CryptoJS from 'crypto-js';\n\n/**\n * @ngdoc service\n * @name @smartutils.services:CryptographicUtils\n *\n * @description\n * utility service around Cryptographic operations.\n */\nexport class CryptographicUtils {\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:CryptographicUtils#sha1Hash\n     * @methodOf @smartutils.services:CryptographicUtils\n     *\n     * @description\n     * A utility function that takes an input string and provides a cryptographic SHA1 hash value.\n     *\n     * @param {String} data The input string to be encrypted.\n     * @returns {String} the encrypted hashed result.\n     */\n    sha1Hash(data: string): string {\n        return CryptoJS.SHA1(data).toString();\n    }\n\n    aesBase64Encrypt(base64EncodedMessage: string, secretPassphrase: string): string {\n        return CryptoJS.AES.encrypt(\n            CryptoJS.enc.Base64.parse(base64EncodedMessage),\n            secretPassphrase\n        ).toString();\n    }\n\n    aesDecrypt(encryptedMessage: string, secretPassphrase: string): string {\n        return CryptoJS.AES.decrypt(encryptedMessage, secretPassphrase).toString(CryptoJS.enc.Utf8);\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lo from 'lodash';\nimport { TypedMap } from '../dtos';\n\n/**\n * @ngdoc service\n * @name @smartutils.services:FunctionsUtils\n *\n * @description\n * utility service around Functions.\n */\nexport class FunctionsUtils {\n    /*\n     * regexp matching function(a, $b){} and function MyFunction(a, $b){}\n     */\n    private signatureArgsRegexp: RegExp = /function[\\s\\w]*\\(([\\w\\s\\$,]*)\\)[\\s]*{/;\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:FunctionsUtils#isEmpty\n     * @methodOf @smartutils.services:FunctionsUtils\n     *\n     * @description\n     * Will determine whether a function body is empty or should be considered empty for proxying purposes\n     *\n     * @param {Function} func, the function to evaluate\n     * @returns {Boolean} a boolean.\n     */\n    isEmpty(func: (...args: any[]) => any) {\n        const match = func.toString().match(/\\{([\\s\\S]*)\\}/m);\n        return (\n            !match ||\n            match[1].trim() === '' ||\n            /(proxyFunction)/g.test(func.toString().replace(/\\s/g, ''))\n        );\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:FunctionsUtils#getArguments\n     * @methodOf @smartutils.services:FunctionsUtils\n     *\n     * @description\n     * Returns the array of string arguments of the given function signature\n     *\n     * @param {Function} func the function to analyze\n     * @returns {string[]} an array of string arguments\n     */\n    getArguments(func: (...args: any[]) => any) {\n        const exec = this.signatureArgsRegexp.exec(func.toString());\n        if (exec) {\n            return exec[1].replace(/\\s/g, '').split(',');\n        } else {\n            throw new Error(`failed to retrieve arguments list of ${func}`);\n        }\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:FunctionsUtils#hasArguments\n     * @methodOf @smartutils.services:FunctionsUtils\n     *\n     * @description\n     * Determines whether a given function (anonymous or not) has arguments in it signature\n     *\n     * @param {Function} func the function to analyze\n     * @returns {boolean} true if the function has signature arguments\n     */\n    hasArguments(func: (...args: any[]) => any) {\n        const exec = this.signatureArgsRegexp.exec(func.toString());\n        if (exec) {\n            return !lo.isEmpty(exec[1]);\n        } else {\n            throw new Error(`failed to retrieve arguments list of ${func}`);\n        }\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:FunctionsUtils#getConstructorName\n     * @methodOf @smartutils.services:FunctionsUtils\n     *\n     * @description\n     * Returns the constructor name in a cross browser fashion\n     *\n     * @param {Function} func the function to analyze\n     * @returns {string} the constructor name\n     */\n    getConstructorName(func: new (...args: any[]) => any) {\n        let name = func.name;\n        if (!name) {\n            // IE does not support constructor.name\n            const exec = /function (\\$?\\w+)\\s*\\(/.exec(func.toString());\n            if (exec) {\n                name = exec[1];\n            } else {\n                throw new Error('[FunctionsUtils] - Cannot get name from invalid constructor.');\n            }\n        }\n        return name;\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:FunctionsUtils#getInstanceConstructorName\n     * @methodOf @smartutils.services:FunctionsUtils\n     *\n     * @description\n     * Returns the constructor name in a cross browser fashion of a class instance\n     *\n     * @param {Object} instance instance class to analyze\n     * @returns {string} the constructor name of the instance\n     */\n    getInstanceConstructorName(instance: object): string {\n        return this.getConstructorName(Object.getPrototypeOf(instance).constructor);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:FunctionsUtils#extendsConstructor\n     * @methodOf @smartutils.services:FunctionsUtils\n     *\n     * @description\n     * Overrides a given constructor with a new constructor body. The resulting constructor will share the same prototype as the original one.\n     *\n     * @param {(...args:any[]) => T} originalConstructor the original constructor to override\n     * @returns {(...args:any[]) => T} newConstructorBody the new constructor body to execute in the override. It may or may not return an instance. Should it return an instance, the latter will be returned by the override.\n     */\n    extendsConstructor<T>(\n        originalConstructor: (...args: any[]) => T,\n        newConstructorBody: (...args: any[]) => T\n    ): any {\n        // the new constructor behaviour\n        const newConstructor: any = function(...args: any[]) {\n            const result = newConstructorBody.apply(this, args);\n            if (result) {\n                return result;\n            }\n        };\n        // copy prototype so intanceof operator still works\n        newConstructor.prototype = originalConstructor.prototype;\n\n        return newConstructor;\n    }\n\n    /** @internal */\n    isUnitTestMode(): boolean {\n        /* forbiddenNameSpaces window._:false */\n        return typeof window.__karma__ !== 'undefined';\n    }\n\n    convertToArray<T = string>(obj: TypedMap<T>): { key: string; value: T }[] {\n        return Object.keys(obj).reduce(\n            (acc: { key: string; value: T }[], key: string) => [\n                ...(acc || []),\n                { key, value: obj[key] }\n            ],\n            []\n        );\n    }\n}\n\nexport const functionsUtils = new FunctionsUtils();\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { NgZone } from '@angular/core';\nexport const commonNgZone = new NgZone({ enableLongStackTrace: false });\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { NgZone } from '@angular/core';\nimport { commonNgZone } from './common-ng-zone';\n\ndeclare global {\n    interface Window {\n        Zone: any;\n        __karma__: any;\n    }\n}\n\n/**\n * @ngdoc service\n * @name @smartutils.services:WindowUtils\n *\n * @description\n * A collection of utility methods for windows.\n */\nexport class WindowUtils {\n    static SMARTEDIT_IFRAME_ID = 'ySmartEditFrame';\n\n    constructor(private ngZone?: NgZone) {\n        this.ngZone = this.ngZone || commonNgZone;\n    }\n\n    getWindow(): Window {\n        return window;\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:WindowUtils#isIframe\n     * @methodOf @smartutils.services:WindowUtils\n     * @description\n     * <b>isIframe</b> will check if the current document is in an iFrame.\n     * @returns {boolean} true if the current document is in an iFrame.\n     */\n    isIframe = () => {\n        return this.getWindow().top !== this.getWindow();\n    };\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:WindowUtils#runTimeoutOutsideAngular\n     * @methodOf @smartutils.services:WindowUtils\n     *\n     * @description\n     * Runs a given timeout outside Angular and attaches its callback to Angular\n     * this is usefull in order not to be blocking from an e2e stand point\n     *\n     * @param {string} callback argument less callback to execute when timeout.\n     * @param {number} timeout the delay in milliseconds until timeout\n     */\n    runTimeoutOutsideAngular(callback: () => void, timeout?: number): number {\n        const ngZone = this.ngZone;\n        if (ngZone !== undefined) {\n            return ngZone.runOutsideAngular<number>(() => {\n                return (setTimeout(() => {\n                    return ngZone.run(callback);\n                }, timeout) as unknown) as number;\n            });\n        } else {\n            throw new Error(\n                'this instance of WindowUtils has not been instantiated through Angular 7 DI'\n            );\n        }\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:WindowUtils#runIntervalOutsideAngular\n     * @methodOf @smartutils.services:WindowUtils\n     *\n     * @description\n     * Runs a given interval outside Angular and attaches its callback to Angular\n     * this is usefull in order not to be blocking from an e2e stand point\n     *\n     * @param {string} callback argument less callback to execute when timeout.\n     * @param {number} timeout the delay in milliseconds until timeout\n     */\n    runIntervalOutsideAngular(callback: () => void, timeout?: number): number {\n        const ngZone = this.ngZone;\n        if (ngZone === undefined) {\n            throw new Error(\n                'this instance of WindowUtils has not been instantiated through Angular 7 DI'\n            );\n        }\n        return ngZone.runOutsideAngular<number>(() => {\n            return (setInterval(() => {\n                return ngZone.run(callback);\n            }, timeout) as unknown) as number;\n        });\n    }\n}\n\nexport const windowUtils = new WindowUtils();\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport {\n    APP_BOOTSTRAP_LISTENER,\n    APP_INITIALIZER,\n    ComponentRef,\n    Injectable,\n    Provider,\n    ValueProvider\n} from '@angular/core';\nimport { Cloneable, TypedMap } from '../dtos';\n\n/*\n * internal utility service to handle ES6 modules\n */\n/* forbiddenNameSpaces angular.module:false */\n/** @internal */\n@Injectable()\nexport class ModuleUtils {\n    public initialize(useFactory: (...args: any[]) => void, deps: any[] = []): Provider {\n        return {\n            provide: APP_INITIALIZER,\n            useFactory() {\n                useFactory.apply(undefined, Array.prototype.slice.call(arguments));\n                return (component: ComponentRef<any>) => {\n                    // an initializer useFactory must return a function\n                };\n            },\n            deps,\n            multi: true\n        };\n    }\n\n    public bootstrap(useFactory: (...args: any[]) => void, deps: any[] = []): Provider {\n        return {\n            provide: APP_BOOTSTRAP_LISTENER,\n            useFactory() {\n                useFactory.apply(undefined, Array.prototype.slice.call(arguments));\n                return (component: ComponentRef<any>) => {\n                    // an initializer useFactory must return a function\n                };\n            },\n            deps,\n            multi: true\n        };\n    }\n\n    provideValues(_constants?: TypedMap<Cloneable | RegExp>): ValueProvider[] {\n        const constants = _constants || {};\n        return Object.keys(constants).map((key) => {\n            return {\n                provide: key,\n                useValue: constants[key]\n            };\n        });\n    }\n}\n\nexport const moduleUtils = new ModuleUtils();\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport enum LogLevel {\n    log,\n    debug,\n    info,\n    warn,\n    error\n}\nexport class LogService {\n    private logLevel = LogLevel.info;\n\n    log(...msg: any[]) {\n        this._log(LogLevel.log, msg);\n    }\n\n    debug(...msg: any[]) {\n        this._log(LogLevel.debug, msg);\n    }\n\n    info(...msg: any[]) {\n        this._log(LogLevel.info, msg);\n    }\n\n    warn(...msg: any[]) {\n        this._log(LogLevel.warn, msg);\n    }\n\n    error(...msg: any[]) {\n        this._log(LogLevel.error, msg);\n    }\n\n    setLogLevel(logLevel: LogLevel) {\n        this.logLevel = logLevel;\n    }\n\n    private _log(requestLevel: LogLevel, msg: any[]) {\n        if (requestLevel >= this.logLevel) {\n            const method = LogLevel[requestLevel] as keyof Console;\n            if (this._console() && this._console()[method]) {\n                this._console()[method](...msg);\n            }\n        }\n    }\n\n    private _console(): Console {\n        return console;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lodash from 'lodash';\nimport { Injectable } from '@angular/core';\nimport { LogService } from '../services/log.service';\n\nexport interface Deferred<T> {\n    promise: Promise<T>;\n    resolve: (value?: T) => void;\n    reject: (value?: any) => void;\n}\n/**\n * @ngdoc service\n * @name @smartutils.services:PromiseUtils\n *\n * @description\n * utility service around ES6 Promises.\n */\n@Injectable()\nexport class PromiseUtils {\n    static logService = new LogService();\n\n    private WAIT_TIMEOUT = 4;\n    private FAILURE_TIMEOUT = 2000;\n\n    toPromise<T>(\n        method: (...args: any[]) => T,\n        context?: any\n    ): (...innerArgs: any[]) => Promise<T> {\n        return function() {\n            try {\n                return Promise.resolve(\n                    method.apply(context, Array.prototype.slice.call(arguments))\n                );\n            } catch (e) {\n                PromiseUtils.logService.error(\n                    'execution of a method that was turned into a promise failed'\n                );\n                PromiseUtils.logService.error(e);\n                return Promise.reject(e);\n            }\n        };\n    }\n\n    promise<T>(\n        executor: (\n            resolve: (value?: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void\n        ) => void\n    ): Promise<T> {\n        return this.handlePromiseRejections(new Promise(executor));\n    }\n\n    defer<T>(): Deferred<T> {\n        let pResolve: (value?: T | PromiseLike<T>) => void;\n        let pReject: (reason?: any) => void;\n\n        const deferred: Deferred<T> = {\n            promise: this.promise(\n                (\n                    _resolve: (value?: T | PromiseLike<T>) => void,\n                    _reject: (reason?: any) => void\n                ) => {\n                    pResolve = _resolve;\n                    pReject = _reject;\n                }\n            ),\n\n            resolve(value: T | undefined) {\n                pResolve(value);\n            },\n\n            reject(reason: any) {\n                pReject(reason);\n            }\n        };\n\n        return deferred;\n    }\n\n    async sleep(ms: number) {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n\n    handlePromiseRejections = <T>(promise: Promise<T>): Promise<T> => {\n        const oldThen = promise.then;\n        const defaultFailureCallback = this.defaultFailureCallback;\n\n        (promise as any).then = function(\n            successCallback: (value: T) => T | PromiseLike<T>,\n            _failureCallback: any\n        ) {\n            const failureCallback = _failureCallback ? _failureCallback : defaultFailureCallback;\n            return oldThen.call(this, successCallback, failureCallback);\n        };\n        return promise;\n    };\n\n    isAjaxError(error: any) {\n        return error.hasOwnProperty('headers');\n    }\n\n    waitOnCondition(\n        condition: () => boolean,\n        callback: () => any,\n        errorMessage: string,\n        elapsedTime: number = 0\n    ) {\n        setTimeout(() => {\n            if (condition()) {\n                callback();\n            } else if (elapsedTime < this.FAILURE_TIMEOUT) {\n                this.waitOnCondition(\n                    condition,\n                    callback,\n                    errorMessage,\n                    elapsedTime + this.WAIT_TIMEOUT\n                );\n            } else {\n                throw new Error(`PromiseUtils: ${errorMessage}`);\n            }\n        }, this.WAIT_TIMEOUT);\n    }\n\n    async resolveToCallbackWhenCondition<T>(\n        condition: () => boolean,\n        callback: () => T,\n        errorMessage?: string\n    ): Promise<T> {\n        return new Promise<T>((resolve) => {\n            this.waitOnCondition(\n                condition,\n                () => resolve(callback()),\n                errorMessage ? errorMessage : 'condition for promise resolution was never met'\n            );\n        });\n    }\n\n    private defaultFailureCallback = (error: any) => {\n        if (undefined !== error && null !== error && 'canceled' !== error) {\n            if (lodash.isPlainObject(error)) {\n                if (!this.isAjaxError(error)) {\n                    PromiseUtils.logService.error(\n                        `exception caught in promise: ${JSON.stringify(error)}`\n                    );\n                }\n            } else if (!lodash.isBoolean(error)) {\n                PromiseUtils.logService.error(error);\n            }\n        }\n        PromiseUtils.logService.error(`defaultFailureCallback:`, error);\n        return Promise.reject(error);\n    };\n}\n\nexport const promiseUtils = new PromiseUtils();\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n\n/**\n * @ngdoc service\n * @name @smartutils.services:BooleanUtils\n *\n * @description\n * utility service around booleans.\n */\nexport class BooleanUtils {\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:BooleanUtils#areAllTruthy\n     * @methodOf @smartutils.services:BooleanUtils\n     * @description\n     * Iterate on the given array of Functions, return true if each function returns true\n     *\n     * @param {Array} arguments the functions\n     *\n     * @return {Boolean} true if every function returns true\n     */\n    areAllTruthy(...functions: ((...args: any[]) => boolean)[]): (...args: any[]) => boolean {\n        return function(): boolean {\n            const args = arguments;\n            return functions.every((f: any) => {\n                return f && f.apply(f, args);\n            });\n        };\n    }\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:BooleanUtils#isAnyTruthy\n     * @methodOf @smartutils.services:BooleanUtils\n     *\n     * @description\n     * Iterate on the given array of Functions, return true if at least one function returns true\n     *\n     * @param {Array} arguments the functions\n     *\n     * @return {Boolean} true if at least one function returns true\n     */\n    isAnyTruthy(...functions: ((...args: any[]) => boolean)[]): (...args: any[]) => boolean {\n        return function(): boolean {\n            const args = arguments;\n            return functions.some((f: any) => {\n                return f && f.apply(f, args);\n            });\n        };\n    }\n}\n\nexport const booleanUtils = new BooleanUtils();\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lodash from 'lodash';\nimport {\n    HttpErrorResponse,\n    HttpEvent,\n    HttpHeaders,\n    HttpParams,\n    HttpRequest,\n    HttpResponse,\n    HttpResponseBase\n} from '@angular/common/http';\nimport { from, throwError, Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Payload, TypedMap } from '../dtos';\nimport { stringUtils } from './string-utils';\n\nexport class HttpUtils {\n    isGET(request: HttpRequest<any>): boolean {\n        return request.method === 'GET';\n    }\n\n    isRequestOfAccept(request: HttpRequest<any>, accept: string): boolean {\n        return (\n            !!request.headers &&\n            !!request.headers.get('Accept') &&\n            (request.headers.get('Accept') || '').includes(accept)\n        );\n    }\n\n    isResponseOfContentType(response: HttpResponseBase, contentType: string): boolean {\n        return (\n            !!response.headers &&\n            !!response.headers.get('Content-type') &&\n            (response.headers.get('Content-type') || '').indexOf(contentType) === 0\n        );\n    }\n\n    isHTMLRequest(request: HttpRequest<any>, response?: HttpResponseBase) {\n        return (\n            this.isGET(request) &&\n            (this.isRequestOfAccept(request, 'text/html') ||\n                /.+\\.html$/.test(request.url) ||\n                /.+\\.html\\?/.test(request.url))\n        );\n    }\n\n    isJSONRequest(request: HttpRequest<any>, response?: HttpResponseBase) {\n        return (\n            this.isGET(request) &&\n            ((response && this.isResponseOfContentType(response, 'json')) ||\n                /.+\\.json$/.test(request.url))\n        );\n    }\n\n    isJSRequest(request: HttpRequest<any>) {\n        return this.isGET(request) && /.+\\.js$/.test(request.url);\n    }\n\n    isCRUDRequest(request: HttpRequest<any>, response?: HttpErrorResponse) {\n        return (\n            !this.isHTMLRequest(request, response) &&\n            !this.isJSONRequest(request, response) &&\n            !this.isJSRequest(request)\n        );\n    }\n\n    transformHttpParams(params: HttpParams, substitutionMap: TypedMap<string>): HttpParams {\n        return new HttpParams({\n            fromObject: JSON.parse(\n                stringUtils.replaceAll(\n                    JSON.stringify(this.copyHttpParamsOrHeaders(params)),\n                    substitutionMap\n                )\n            )\n        });\n    }\n\n    copyHttpParamsOrHeaders(params: HttpParams | HttpHeaders): TypedMap<string | string[]> {\n        const copy = {} as TypedMap<string | string[]>;\n        params.keys().forEach((key) => {\n            const values = params.getAll(key);\n            if (values !== null) {\n                copy[key] = values.length > 1 ? values : values[0];\n            }\n        });\n        return copy;\n    }\n\n    buildHttpResponse<T = any>(\n        originalRequest: HttpRequest<T>,\n        _statusAndPayload:\n            | [number, Payload | Payload[]]\n            | PromiseLike<[number, Payload | Payload[]]>\n    ): Observable<HttpEvent<any> | never> {\n        const statusAndPayloadPromise = Promise.resolve(_statusAndPayload);\n\n        return from(statusAndPayloadPromise).pipe(\n            switchMap((statusAndPayload: [number, Payload | Payload[]]) => {\n                const status = statusAndPayload[0];\n                const body = statusAndPayload[1];\n                const requestClone = originalRequest.clone({\n                    body\n                });\n                lodash.merge(requestClone, { status });\n\n                if (200 <= status && status < 300) {\n                    return new Observable<HttpEvent<any>>((ob) => {\n                        ob.next(new HttpResponse(requestClone));\n                    });\n                } else {\n                    return throwError(\n                        new HttpErrorResponse(lodash.merge(requestClone, { error: body }))\n                    );\n                }\n            })\n        );\n    }\n}\n\nexport const httpUtils = new HttpUtils();\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n\nimport { ControlValueAccessor } from '@angular/forms';\n\n/**\n * @ngdoc object\n * @name utils.object:BaseValueAccessor\n * @description\n *\n * Class implementing {@link https://angular.io/api/forms/ControlValueAccessor ControlValueAccessor} interface used to create custom Angular inputs that\n * can be integrated with Angular Forms and.\n */\n\nexport abstract class BaseValueAccessor<T> implements ControlValueAccessor {\n    public disabled: boolean = false;\n    public value: T = (null as unknown) as T;\n\n    public onChange(item: T): void {\n        // Is set by registerOnChange method\n    }\n    public onTouched(): void {\n        // Is set by registerOnTouched method\n    }\n\n    registerOnChange(fn: (item: T) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    writeValue(item: T): void {\n        this.value = item;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './cloneable-utils';\nexport * from './url-utils';\nexport { CryptographicUtils } from './cryptographic-utils';\nexport { FunctionsUtils, functionsUtils } from './functions-utils';\nexport * from './string-utils';\nexport * from './window-utils';\nexport * from './module-utils';\nexport * from './promise-utils';\nexport * from './boolean-utils';\nexport * from './http-utils';\nexport * from './common-ng-zone';\nexport * from './base-value-accessor';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lodash from 'lodash';\nimport { FunctionsUtils } from '../utils';\nimport { Class } from '../types';\nimport { TypedMap } from '../dtos';\nimport {} from 'reflect-metadata';\n\n/**\n * @ngdoc object\n * @name @smartutils.object:MethodAnnotation\n *\n * @description\n * Shorthand signature of a {@link https://www.typescriptlang.org/docs/handbook/decorators.html Typescript Decorator} function for methods\n * used by {@link @smartutils.services:AnnotationService AnnotationService}.\n * @param {any} target the instance the method of which is annotated\n * @param {any} propertyName the name of the method that is annotated\n * @param {any} originalMethod the original method being annotated, it is prebound to the instance\n * @returns {any} the final return value of the proxied method.\n * It is left to implementers to discard, modify, reuse the original method.\n */\nexport type MethodAnnotation = (\n    target: any,\n    propertyName: string,\n    originalMethod: (...x: any[]) => any,\n    ...invocationArguments: any[]\n) => any;\n/**\n * @ngdoc object\n * @name @smartutils.object:MethodAnnotationFactory\n *\n * @description\n * A {@link @smartutils.object:MethodAnnotation MethodAnnotation} factory\n * used by {@link @smartutils.services:AnnotationService AnnotationService}.\n * @param {...any[]} factoryArguments the factory arguments\n * @returns {MethodAnnotation} {@link @smartutils.object:MethodAnnotation MethodAnnotation}\n */\nexport type MethodAnnotationFactory = (...factoryArguments: any[]) => MethodAnnotation;\n/**\n * @ngdoc object\n * @name @smartutils.object:ClassAnnotation\n *\n * @description\n * Shorthand signature of a {@link https://www.typescriptlang.org/docs/handbook/decorators.html Typescript Decorator} function for classes\n * used by {@link @smartutils.services:AnnotationService AnnotationService}.\n * @param {any} instance an instance of the class which is annotated\n * @param {(...x: any[]) => any} originalConstructor the prebound original constructor of the instance\n * @param {...any[]} invocationArguments the arguments with which the constructor is invoked\n * @returns {any} void or a new instance.\n * It is left to implementers to discard, modify, or reuse the original constructor then not to return or return a new instance.\n */\nexport type ClassAnnotation = (\n    instance: any,\n    originalConstructor: (...x: any[]) => any,\n    ...invocationArguments: any[]\n) => any;\n/**\n * @ngdoc object\n * @name @smartutils.object:ClassAnnotationFactory\n *\n * @description\n * A {@link @smartutils.object:ClassAnnotation ClassAnnotation} factory\n * used by {@link @smartutils.services:AnnotationService AnnotationService}.\n * @param {...any[]} factoryArguments the factory arguments\n * @returns {ClassAnnotation} {@link @smartutils.object:ClassAnnotation ClassAnnotation}\n */\nexport type ClassAnnotationFactory = (...x: any[]) => ClassAnnotation;\n\n/** @internal */\nenum annotationType {\n    Class = 'ClassAnnotation',\n    Method = 'MethodAnnotation'\n}\n\n/**\n * @ngdoc service\n * @name @smartutils.services:AnnotationService\n *\n * @description\n * Utility service to declare and consume method level and class level {@link https://www.typescriptlang.org/docs/handbook/decorators.html Typescript decorator factories}.\n * <br/>Since Decorator is a reserved word in Smartedit, Typescript Decorators are called as Annotations.\n */\nexport class AnnotationService {\n    public readonly INJECTABLE_NAME_KEY = 'getInjectableName';\n    public readonly ORIGINAL_CONSTRUCTOR_KEY = 'originalConstructor';\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AnnotationService#getClassAnnotations\n     * @methodOf @smartutils.services:AnnotationService\n     *\n     * @description\n     * Retrieves an object with all the string-indexed annotations defined on the given class target\n     * @param {any} target The typescript class on which class annotations are defined\n     * @returns {[index: string]: any} an object contains string-indexed annotation name and payload\n     */\n    getClassAnnotations = lodash.memoize(this.getClassAnnotationsLogic);\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AnnotationService#getMethodAnnotations\n     * @methodOf @smartutils.services:AnnotationService\n     *\n     * @description\n     * Retrieves an object with all the string indexed annotations defined on the given class method\n     * @param {any} target The typescript class to the inspected\n     * @param {string} propertyName The name of the method on which annotations are defined\n     * @returns {[index: string]: any} an object contains string-indexed annotation name and payload\n     */\n    getMethodAnnotations = lodash.memoize(this.getMethodAnnotationsLogic, function(\n        target: any,\n        propertyName: string\n    ) {\n        return JSON.stringify(target.prototype) + propertyName;\n    });\n\n    private functionsUtils: FunctionsUtils = new FunctionsUtils();\n\n    private annotationFactoryMap = {} as TypedMap<\n        MethodAnnotationFactory | ClassAnnotationFactory | null\n    >;\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AnnotationService#getClassAnnotation\n     * @methodOf @smartutils.services:AnnotationService\n     *\n     * @description\n     * Retrieves arguments of class annotation under a given annotation name\n     * @param {any} target The typescript class on which class annotation is defined\n     * @param {(args?: any) => ClassDecorator} annotation The type of the class annotation\n     * @returns {any} the payload passed to the annotation\n     */\n    getClassAnnotation(target: any, annotation: (args?: any) => ClassDecorator): any {\n        const annotationMap: TypedMap<any> = this.getClassAnnotations(target);\n        const annotationName: string = (annotation as any).annotationName;\n        if (annotationMap) {\n            if (annotationName in annotationMap) {\n                return annotationMap[annotationName];\n            }\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AnnotationService#getMethodAnnotation\n     * @methodOf @smartutils.services:AnnotationService\n     *\n     * @description\n     * Retrieves arguments of method annotation for a given typescript class\n     * @param {any} target The typescript class\n     * @param {string} propertyName The name of the method on which annotation is defined\n     * @param {(args?: any) => MethodDecorator)} annotation The type of the method annotation\n     * @returns {any} the payload passed to the annotation\n     */\n    getMethodAnnotation(\n        target: any,\n        propertyName: string,\n        annotation: (args?: any) => MethodDecorator\n    ): any {\n        const annotationMap: TypedMap<any> = this.getMethodAnnotations(target, propertyName);\n        const annotationName: string = (annotation as any).annotationName;\n        if (annotationMap) {\n            if (annotationName in annotationMap) {\n                return annotationMap[annotationName];\n            }\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AnnotationService#hasClassAnnotation\n     * @methodOf @smartutils.services:AnnotationService\n     *\n     * @description\n     * Determines whether a given class target has given annotation name defined or not\n     * @param {any} target The typescript class on which class annotation is defined\n     * @param {(args?: any) => ClassDecorator} annotation The type of the class annotation\n     * @returns {boolean} true if a given target has given annotation name. Otherwise false.\n     */\n    hasClassAnnotation(target: any, annotation: (args?: any) => ClassDecorator): boolean {\n        const annotationMap: TypedMap<any> = this.getClassAnnotations(target);\n        return (annotation as any).annotationName in annotationMap ? true : false;\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AnnotationService#hasMethodAnnotation\n     * @methodOf @smartutils.services:AnnotationService\n     *\n     * @description\n     * Determines whether a given method name has given annotation name defined or not under a given typescript class\n     * @param {any} target The typescript class object\n     * @param {string} propertyName The name of the method on which annotation is defined\n     * @param {(args?: any) => MethodDecorator} annotation The type of the method annotation\n     * @returns {boolean} true if a given method name has given annotation name. Otherwise false.\n     */\n    hasMethodAnnotation(\n        target: any,\n        propertyName: string,\n        annotation: (args?: any) => MethodDecorator\n    ): boolean {\n        const annotationMap: TypedMap<any> = this.getMethodAnnotations(target, propertyName);\n        return (annotation as any).annotationName in annotationMap ? true : false;\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AnnotationService#setClassAnnotationFactory\n     * @methodOf @smartutils.services:AnnotationService\n     *\n     * @description\n     * Registers a {@link @smartutils.object:ClassAnnotationFactory ClassAnnotationFactory} under a given name.\n     * <br/>Typically, in order for the ClassAnnotationFactory to benefit from Angular dependency injection, this method will be called within an Angular factory.\n     * @param {string} name the name of the factory.\n     * @returns {ClassAnnotationFactory} a {@link @smartutils.object:ClassAnnotationFactory ClassAnnotationFactory}\n     */\n    setClassAnnotationFactory(\n        name: string,\n        annotationFactory: ClassAnnotationFactory | null\n    ): ClassAnnotationFactory | null {\n        this.annotationFactoryMap[name] = annotationFactory;\n        return annotationFactory;\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AnnotationService#getClassAnnotationFactory\n     * @methodOf @smartutils.services:AnnotationService\n     *\n     * @description\n     * Retrieves a {@link @smartutils.object:ClassAnnotationFactory ClassAnnotationFactory}\n     * previously registered under the given name:\n     *\n     * <pre>\n     *   export const GatewayProxied = annotationService.getClassAnnotationFactory('GatewayProxied');\n     * </pre>\n     *\n     * @param {string} name The name of the factory\n     * @returns {ClassAnnotationFactory} a {@link @smartutils.object:ClassAnnotationFactory ClassAnnotationFactory}\n     */\n\n    getClassAnnotationFactory(name: string): (...args: any[]) => ClassDecorator {\n        const instance = this;\n\n        const classAnnotationFactory = function(...factoryArgument: any[]) {\n            return function(originalConstructor: any) {\n                const newConstructor = instance.functionsUtils.extendsConstructor(\n                    originalConstructor,\n                    function(...args: any[]) {\n                        const annotationFactory = instance.annotationFactoryMap[\n                            name\n                        ] as ClassAnnotationFactory;\n                        if (annotationFactory) {\n                            // Note: Before we used to bind originalConstructor.bind(this). However, it had to be left up to the caller\n                            // since that causes problems in IE; when a function is bound in IE, the browser wraps it in a function with\n                            // native code, making it impossible to retrieve its name.\n                            const result = annotationFactory(factoryArgument)(\n                                this,\n                                originalConstructor,\n                                args\n                            );\n                            if (result) {\n                                return result;\n                            }\n                        } else {\n                            throw new Error(\n                                `annotation '${name}' is used on '${\n                                    originalConstructor.name\n                                }' but its ClassAnnotationFactory may not have been added to the dependency injection`\n                            );\n                        }\n                    }\n                );\n\n                /*\n                 * enable Angular and AngularJS to inject this new constructor even though it has an empty signature\n                 * by copying $inject property and DI related Angular metatdata\n                 * For idempotency purposes we copy all properties anyways\n                 */\n                lodash.merge(newConstructor, originalConstructor);\n                /*\n                 * some properties set by Angular are not enumerable and yet contain\n                 * such information as @Inject \"metadata\" necessary for DI\n                 */\n                newConstructor.__annotations__ = originalConstructor.__annotations__;\n                newConstructor.__parameters__ = originalConstructor.__parameters__;\n                newConstructor.__prop__metadata__ = originalConstructor.__prop__metadata__;\n\n                /*\n                 * copying such metadata as design:paramtypes necessary for DI\n                 */\n                Reflect.getMetadataKeys(originalConstructor).forEach((key) => {\n                    Reflect.defineMetadata(\n                        key,\n                        Reflect.getMetadata(key, originalConstructor),\n                        newConstructor\n                    );\n                });\n\n                const rootOriginalConstructor = instance.getOriginalConstructor(\n                    originalConstructor\n                );\n\n                Reflect.defineMetadata(\n                    instance.ORIGINAL_CONSTRUCTOR_KEY,\n                    rootOriginalConstructor,\n                    newConstructor\n                );\n\n                Reflect.defineMetadata(\n                    annotationType.Class + ':' + name,\n                    factoryArgument,\n                    rootOriginalConstructor\n                );\n\n                // override original constructor\n                return newConstructor;\n            };\n        };\n        (classAnnotationFactory as any).annotationName = name;\n        return classAnnotationFactory;\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AnnotationService#setMethodAnnotationFactory\n     * @methodOf @smartutils.services:AnnotationService\n     *\n     * @description\n     * Registers a {@link @smartutils.object:MethodAnnotationFactory MethodAnnotationFactory} under a given name.\n     * <br/>Typically, in order for the MethodAnnotationFactory to benefit from Angular dependency injection, this method will be called within an Angular factory.\n     * @param {string} name The name of the factory.\n     * @returns {MethodAnnotationFactory} a {@link @smartutils.object:MethodAnnotationFactory MethodAnnotationFactory}\n     */\n    setMethodAnnotationFactory(\n        name: string,\n        annotationFactory: MethodAnnotationFactory | null\n    ): MethodAnnotationFactory | null {\n        this.annotationFactoryMap[name] = annotationFactory;\n        return annotationFactory;\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AnnotationService#getMethodAnnotationFactory\n     * @methodOf @smartutils.services:AnnotationService\n     *\n     * @description\n     * Retrieves a method level {@link @smartutils.object:MethodAnnotationFactory MethodAnnotationFactory}\n     * previously registered under the given name:\n     *\n     * <pre>\n     *   export const Cached = annotationService.getMethodAnnotationFactory('Cached');\n     * </pre>\n     *\n     * @param {string} name the name of the factory.\n     * @returns {MethodAnnotationFactory} a {@link @smartutils.object:MethodAnnotationFactory MethodAnnotationFactory}.\n     */\n    getMethodAnnotationFactory(name: string) {\n        const instance = this;\n\n        const methodAnnotationFactory = function(...factoryArgument: any[]) {\n            /*\n             * when decorating an abstract class, strangely enough target is an instance of the abstract class\n             * we need pass \"this\" instead to the annotationFactory invocation\n             */\n            return (\n                target: any,\n                propertyName: string,\n                descriptor: TypedPropertyDescriptor<(...x: any[]) => any>\n            ) => {\n                const originalMethod = descriptor.value;\n\n                descriptor.value = function() {\n                    const annotationFactory: MethodAnnotationFactory = instance\n                        .annotationFactoryMap[name] as MethodAnnotationFactory;\n\n                    if (annotationFactory) {\n                        return originalMethod\n                            ? annotationFactory(factoryArgument)(\n                                  this,\n                                  propertyName,\n                                  originalMethod.bind(this),\n                                  arguments\n                              )\n                            : undefined;\n                    } else {\n                        throw new Error(\n                            `annotation '${name}' is used but its MethodAnnotationFactory may not have been added to the dependency injection`\n                        );\n                    }\n                };\n\n                Reflect.defineMetadata(\n                    annotationType.Method + ':' + name,\n                    factoryArgument,\n                    target,\n                    propertyName\n                );\n            };\n        };\n        (methodAnnotationFactory as any).annotationName = name;\n        return methodAnnotationFactory;\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AnnotationService#getOriginalConstructor\n     * @methodOf @smartutils.services:AnnotationService\n     *\n     * @description\n     * Given a class constructor, returns the original constructor of it prior to any class level\n     * proxying by annotations declared through {@link @smartutils.services:AnnotationService AnnotationService}\n     *\n     * @param {Class} target the constructor\n     */\n    public getOriginalConstructor(target: any): Class {\n        return Reflect.getMetadata(this.ORIGINAL_CONSTRUCTOR_KEY, target) || target;\n    }\n\n    private getClassAnnotationsLogic(target: any): TypedMap<any> {\n        const originalConstructor = this.getOriginalConstructor(target);\n        const annotationMap: TypedMap<any> = {};\n\n        Reflect.getMetadataKeys(originalConstructor)\n            .filter((key: string) => key.toString().startsWith(annotationType.Class))\n            .map((key: string) => {\n                annotationMap[key.split(':')[1]] = Reflect.getMetadata(key, originalConstructor);\n            });\n        return annotationMap;\n    }\n\n    private getMethodAnnotationsLogic(target: any, propertyName: string): TypedMap<any> {\n        const annotationMap: TypedMap<any> = {};\n\n        Reflect.getMetadataKeys(target.prototype, propertyName)\n            .filter((key: string) => key.toString().startsWith(annotationType.Method))\n            .map((key: string) => {\n                annotationMap[key.split(':')[1]] = Reflect.getMetadata(\n                    key,\n                    target.prototype,\n                    propertyName\n                );\n            });\n\n        return annotationMap;\n    }\n}\n\nexport const annotationService: AnnotationService = new AnnotationService();\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { annotationService } from '../annotation.service';\nimport { CacheAction } from './cache-action';\nimport { EvictionTag } from './eviction-tag';\nimport { CacheService } from './cache.service';\nimport * as lo from 'lodash';\nimport { functionsUtils } from '../../utils';\nimport { LogService } from '../log.service';\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////// CACHE CONFIG ////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nconst cacheConfigAnnotationName = 'CacheConfig';\n\n/**\n * @ngdoc object\n * @name @smartutils.object:@CacheConfig\n * @description\n * Class level typescript {@link http://www.typescriptlang.org/docs/handbook/decorators.html decorator factory} responsible for setting\n *  class level cache configuration to be merged into method specific {@link @smartutils.object:@Cached @Cached} and\n *  {@link @smartutils.object:@InvalidateCache @InvalidateCache} configurations.\n * @param {object} cacheConfig the configuration fo this cache\n * @param {cacheAction} cacheConfig.actions the list of {@link @smartutils.object:CacheAction CacheAction} characterizing this cache.\n * @param {EvictionTag[]} cacheConfig.tags a list of {@link @smartutils.object:EvictionTag EvictionTag} to control the eviction behaviour of this cache.\n */\n\nexport const CacheConfig = annotationService.getClassAnnotationFactory(\n    cacheConfigAnnotationName\n) as (args: { actions?: CacheAction[]; tags?: EvictionTag[] }) => ClassDecorator;\n\nexport function CacheConfigAnnotationFactory(logService: LogService) {\n    'ngInject';\n    return annotationService.setClassAnnotationFactory(\n        cacheConfigAnnotationName,\n        (factoryArguments: [{ actions: CacheAction[]; tags?: EvictionTag[] }]) => {\n            return function(\n                instance: any,\n                originalConstructor: (...x: any[]) => any,\n                invocationArguments: any[]\n            ) {\n                originalConstructor.call(instance, ...invocationArguments);\n\n                instance.cacheConfig = factoryArguments[0];\n\n                logService.debug(\n                    `adding cache config ${JSON.stringify(\n                        instance.cacheConfig\n                    )} to class ${functionsUtils.getInstanceConstructorName(instance)}`,\n                    instance\n                );\n            };\n        }\n    );\n}\n\n///////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////// CACHE ////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nconst CachedAnnotationName = 'Cached';\n\n/**\n * @ngdoc object\n * @name @smartutils.object:@Cached\n * @description\n * Method level typescript {@link http://www.typescriptlang.org/docs/handbook/decorators.html decorator factory} responsible for performing\n * invocation arguments sensitive method caching.\n * <br/> This annotation must only be used on methods returning promises.\n * @param {object} cacheConfig the configuration fo this cache\n * <br/> This configuration will be merged with a class level {@link @smartutils.object:@CacheConfig @acheConfig} if any.\n * @throws if no {@link @smartutils.object:CacheAction CacheAction} is found in the resulting merge\n * @param {cacheAction} cacheConfig.actions the list of {@link @smartutils.object:CacheAction CacheAction} characterizing this cache.\n * @param {EvictionTag[]} cacheConfig.tags a list of {@link @smartutils.object:EvictionTag EvictionTag} to control the eviction behaviour of this cache.\n */\n\nexport const Cached = annotationService.getMethodAnnotationFactory(\n    CachedAnnotationName\n) as (args?: { actions: CacheAction[]; tags?: EvictionTag[] }) => MethodDecorator;\n\nexport function CachedAnnotationFactory(cacheService: CacheService) {\n    'ngInject';\n    const result = annotationService.setMethodAnnotationFactory(\n        CachedAnnotationName,\n        (factoryArguments: [{ actions: CacheAction[]; tags: EvictionTag[] }]) => {\n            return function(\n                target: any,\n                propertyName: string,\n                originalMethod: (...x: any[]) => any,\n                invocationArguments: IArguments\n            ) {\n                let actions: CacheAction[] = [];\n                let tags: EvictionTag[] = [];\n\n                if (factoryArguments[0]) {\n                    actions = factoryArguments[0].actions;\n                    tags = factoryArguments[0].tags;\n                }\n\n                if (target.cacheConfig) {\n                    if (target.cacheConfig.actions) {\n                        actions = lo.uniq(actions.concat(target.cacheConfig.actions));\n                    }\n                    if (target.cacheConfig.tags) {\n                        tags = lo.uniq(tags.concat(target.cacheConfig.tags));\n                    }\n                }\n\n                if (!actions.length) {\n                    const constructorName = functionsUtils.getInstanceConstructorName(target);\n                    throw new Error(\n                        `method ${propertyName} of ${constructorName} is @Cached annotated but no CacheAction is specified either through @Cached or through class level @CacheConfig annotation`\n                    );\n                }\n                return cacheService.handle(\n                    target,\n                    propertyName,\n                    originalMethod,\n                    Array.prototype.slice.apply(invocationArguments),\n                    actions,\n                    tags\n                );\n            };\n        }\n    );\n\n    return result;\n}\n///////////////////////////////////////////////////////////////////////////////\n////////////////////////////// INVALIDATE CACHE ///////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nconst InvalidateCacheName = 'InvalidateCache';\n/**\n * @ngdoc object\n * @name @smartutils.object:@InvalidateCache\n * @description\n * Method level typescript {@link http://www.typescriptlang.org/docs/handbook/decorators.html decorator factory} responsible for\n * invalidating all caches either directly or indirectly declaring the {@link @smartutils.object:EvictionTag eviction tag} passed as argument.\n * if no eviction tag is passed as argument, defaults to the optional eviction tags passed to the class through {@link @smartutils.object:@CacheConfig @CacheConfig}.\n *\n * @param {EvictionTag} evictionTag the {@link @smartutils.object:EvictionTag eviction tag}.\n */\n\nexport const InvalidateCache = function(tag?: EvictionTag) {\n    return annotationService.getMethodAnnotationFactory(InvalidateCacheName)(tag);\n};\n\nexport function InvalidateCacheAnnotationFactory(cacheService: CacheService) {\n    'ngInject';\n    return annotationService.setMethodAnnotationFactory(\n        InvalidateCacheName,\n        (factoryArguments: [EvictionTag]) => {\n            return function(\n                target: any,\n                propertyName: string,\n                originalMethod: (...x: any[]) => any,\n                invocationArguments: IArguments\n            ) {\n                let tags: EvictionTag[] = [];\n\n                const tag: EvictionTag = factoryArguments[0];\n                if (!tag) {\n                    if (target.cacheConfig && target.cacheConfig.tags) {\n                        tags = target.cacheConfig.tags;\n                    }\n                } else {\n                    tags = [tag];\n                }\n\n                if (!tags.length) {\n                    throw new Error(\n                        `method ${propertyName} of ${\n                            target.constructor.name\n                        } is @InvalidateCache annotated but no EvictionTag is specified either through @InvalidateCache or through class level @CacheConfig annotation`\n                    );\n                }\n\n                const returnedObject = originalMethod.apply(\n                    undefined,\n                    Array.prototype.slice.call(invocationArguments)\n                );\n                if (returnedObject && returnedObject.then) {\n                    return returnedObject.then((value: any) => {\n                        cacheService.evict(...tags);\n                        return value;\n                    });\n                } else {\n                    cacheService.evict(...tags);\n                    return returnedObject;\n                }\n            };\n        }\n    );\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/**\n * @ngdoc object\n * @name @smartutils.object:CacheAction\n * @description\n * A {@link @smartutils.object:@Cached @Cached} annotation is associated to a CacheAction.\n */\nexport class CacheAction {\n    public name: string;\n\n    constructor(name: string) {\n        this.name = name;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Injectable } from '@angular/core';\nimport { Deferred, PromiseUtils, WindowUtils } from '../../../utils';\nimport { LogService } from '../../log.service';\n\nimport { ICacheItem, ICacheTiming, IMetadata } from './interfaces';\n\n/** @internal */\nexport interface ICacheItemRegistry {\n    item: ICacheItem<any>;\n    cacheTiming: ICacheTiming;\n    completed: boolean;\n    processing: boolean;\n    defer: Deferred<any>;\n    refresh<T>(): Promise<T>;\n}\n\n/** @internal */\n@Injectable()\nexport class CacheEngine {\n    public static readonly BACKGROUND_REFRESH_INTERVAL: number = 10000;\n    private cachedItemsRegistry: ICacheItemRegistry[] = [];\n\n    constructor(\n        private windowUtils: WindowUtils,\n        private promiseUtils: PromiseUtils,\n        private logService: LogService\n    ) {\n        this.startBackgroundMonitoringJob();\n    }\n\n    public addItem(\n        item: ICacheItem<any>,\n        cacheTiming: ICacheTiming,\n        refresh: <T>() => Promise<T>\n    ): void {\n        if (this.getItemIndex(item) === -1) {\n            this.cachedItemsRegistry.push({\n                item,\n                cacheTiming,\n                refresh,\n                completed: false,\n                processing: false,\n                defer: this.promiseUtils.defer()\n            });\n        } else {\n            this.logService.warn(`CacheEngine - item already exist for id: ${item.id}`);\n        }\n    }\n\n    public getItemById(id: string): ICacheItem<any> | null {\n        const match = this.cachedItemsRegistry.find((obj) => obj.item.id === id);\n        return match ? match.item : null;\n    }\n\n    public handle<T>(item: ICacheItem<any>): Promise<T> {\n        const obj = this.cachedItemsRegistry[this.getItemIndex(item)];\n        if (obj.completed && !this.hasExpired(item)) {\n            obj.defer.resolve(item.cache);\n        } else if (!obj.processing) {\n            obj.processing = true;\n            this.refreshCache(obj);\n        }\n        return obj.defer.promise;\n    }\n\n    public evict(...tags: string[]): void {\n        tags.forEach((tag) => {\n            this.cachedItemsRegistry\n                .filter((obj) => obj.item.evictionTags.indexOf(tag) > -1)\n                .forEach((obj) => this.cachedItemsRegistry.splice(this.getItemIndex(obj.item), 1));\n        });\n    }\n\n    // regularly go though cache data and call prebound methods to refresh data when needed.\n    protected startBackgroundMonitoringJob(): void {\n        this.windowUtils.runIntervalOutsideAngular(() => {\n            return Promise.all(\n                this.cachedItemsRegistry\n                    .filter((obj) => this.needRefresh(obj.item))\n                    .map((obj) => this.refreshCache(obj))\n            );\n        }, CacheEngine.BACKGROUND_REFRESH_INTERVAL);\n    }\n\n    protected refreshCache<T>(obj: ICacheItemRegistry): Promise<T | void> {\n        return obj.refresh<IMetadata>().then(\n            (value: IMetadata) => {\n                // TODO: read value.metadata to refresh expiry/refresh ages.\n                obj.cacheTiming.setAge(obj.item);\n                obj.item.cache = value;\n                obj.item.timestamp = new Date().getTime();\n                obj.completed = true;\n                obj.processing = false;\n                obj.defer.resolve(value);\n            },\n            (e: any) => {\n                this.logService.debug(\n                    `CacheEngine - unable to refresh cache for id: ${obj.item.id}`,\n                    e\n                );\n                delete obj.item.cache;\n                obj.defer.resolve(e);\n            }\n        );\n    }\n\n    private hasExpired(item: ICacheItem<any>): boolean {\n        return item.timestamp + item.expirationAge <= new Date().getTime();\n    }\n\n    private needRefresh(item: ICacheItem<any>): boolean {\n        return item.timestamp + item.refreshAge <= new Date().getTime();\n    }\n\n    private getItemIndex(item: ICacheItem<any>): number {\n        return this.cachedItemsRegistry.findIndex((o) => o.item.id === item.id);\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { ICacheItem, ICacheTiming } from './interfaces';\n\nexport class DefaultCacheTiming implements ICacheTiming {\n    private expirationAge: number;\n    private refreshAge: number;\n\n    constructor(expirationAge: number, refreshAge: number) {\n        // The cached response is discarded if it is older than the expiration age.\n        this.expirationAge = expirationAge;\n\n        // maximum age for the cached response to be considered \"fresh.\"\n        this.refreshAge = refreshAge;\n    }\n\n    setAge(\n        _item: Pick<ICacheItem<any>, 'id' | 'timestamp' | 'evictionTags' | 'cache'>\n    ): ICacheItem<any> {\n        const item = { ..._item, expirationAge: this.expirationAge, refreshAge: this.refreshAge };\n        return item;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './cache-engine';\nexport * from './default-cache-timing';\nexport * from './interfaces';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { InjectionToken } from '@angular/core';\n\nexport const LIBRARY_NAME = '@smart/utils';\n\n/* TOKENS */\n\nexport const WHO_AM_I_RESOURCE_URI_TOKEN = `${LIBRARY_NAME}_WHO_AM_I_RESOURCE_URI`;\n\nexport const I18N_RESOURCE_URI_TOKEN = `${LIBRARY_NAME}_I18N_RESOURCE_URI`;\n\nexport const EVENT_SERVICE = `${LIBRARY_NAME}_EVENTSERVICE`;\n\n/* EVENTS */\n\nexport const REAUTH_STARTED = 'REAUTH_STARTED';\n\nexport const DEFAULT_AUTHENTICATION_ENTRY_POINT = '/authorizationserver/oauth/token';\n\n/**\n * Root resource URI of i18n API\n */\n\nexport const I18N_ROOT_RESOURCE_URI = '/smarteditwebservices/v1/i18n';\n\nexport const DEFAULT_AUTHENTICATION_CLIENT_ID = 'smartedit';\n\nexport const DEFAULT_AUTH_MAP = {\n    ['^(?!' + I18N_ROOT_RESOURCE_URI + '/.*$).*$']: DEFAULT_AUTHENTICATION_ENTRY_POINT\n};\n\nexport const DEFAULT_CREDENTIALS_MAP = {\n    [DEFAULT_AUTHENTICATION_ENTRY_POINT]: {\n        client_id: DEFAULT_AUTHENTICATION_CLIENT_ID\n    }\n};\n\nexport const LANDING_PAGE_PATH = '/';\n\nexport const SWITCH_LANGUAGE_EVENT = 'SWITCH_LANGUAGE_EVENT';\nexport const SELECTED_LANGUAGE = 'SELECTED_LANGUAGE';\n\nexport const EVENTS = {\n    AUTHORIZATION_SUCCESS: 'AUTHORIZATION_SUCCESS',\n    USER_HAS_CHANGED: 'USER_HAS_CHANGED',\n    LOGOUT: 'SE_LOGOUT_EVENT',\n    CLEAR_PERSPECTIVE_FEATURES: 'CLEAR_PERSPECTIVE_FEATURES',\n    EXPERIENCE_UPDATE: 'experienceUpdate',\n    PERMISSION_CACHE_CLEANED: 'PERMISSION_CACHE_CLEANED',\n    PAGE_CHANGE: 'PAGE_CHANGE',\n    PAGE_CREATED: 'PAGE_CREATED_EVENT',\n    PAGE_UPDATED: 'PAGE_UPDATED_EVENT',\n    PAGE_DELETED: 'PAGE_DELETED_EVENT',\n    PAGE_SELECTED: 'PAGE_SELECTED_EVENT',\n    PAGE_RESTORED: 'PAGE_RESTORED_EVENT',\n    REAUTH_STARTED: 'REAUTH_STARTED'\n};\nexport const DEFAULT_LANGUAGE_ISO = 'en';\n\nexport const LANGUAGE_SERVICE_CONSTANTS = new InjectionToken('LANGUAGE_SERVICE_CONSTANTS');\nexport const LANGUAGE_SERVICE = new InjectionToken('LANGUAGE_SERVICE');\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lodash from 'lodash';\nimport { Inject, Injectable } from '@angular/core';\nimport { Cloneable } from '../../dtos';\nimport { FunctionsUtils, StringUtils } from '../../utils';\nimport { LogService } from '../log.service';\nimport { CacheAction } from './cache-action';\nimport { EvictionTag } from './eviction-tag';\nimport { CacheEngine, DefaultCacheTiming, ICacheItem, ICacheTiming, IMetadata } from './engine';\nimport { IEventService } from '../../interfaces';\nimport { EVENT_SERVICE } from '../../constants';\n\nexport type ICachePredicate = (cacheActions: CacheAction[]) => boolean;\n\n/** @internal */\ninterface IPredicateRegistry {\n    test: ICachePredicate;\n    cacheTiming: ICacheTiming;\n}\n\n/**\n * @ngdoc service\n * @name @smartutils.services:CacheService\n * @description\n * Service to which the {@link @smartutils.object:@Cached @Cached} and {@link @smartutils.object:@InvalidateCache @InvalidateCache} annotations delegate to perform service method level caching.\n * It is not handled explicitly except for its evict method.\n */\n@Injectable()\nexport class CacheService {\n    private predicatesRegistry: IPredicateRegistry[] = [];\n    private eventListeners: string[] = [];\n\n    private defaultCacheTiming = new DefaultCacheTiming(24 * 60 * 60 * 1000, 12 * 60 * 60 * 1000);\n\n    constructor(\n        private logService: LogService,\n        private stringUtils: StringUtils,\n        private functionsUtils: FunctionsUtils,\n        @Inject(EVENT_SERVICE) private eventService: IEventService,\n        private cacheEngine: CacheEngine\n    ) {}\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:CacheService#register\n     * @methodOf @smartutils.services:CacheService\n     *\n     * @description\n     * Register a new predicate with it's associated cacheTiming.\n     * Each time the @Cache annotation is handled, the CacheService try to find a matching cacheTiming for the given cacheActions.\n     *\n     * @param {ICachePredicate} test This function takes the cacheActions {@link @smartutils.object:CacheAction CacheAction} argument, and must return a Boolean that is true if the given cacheActions match the predicate.\n     * @param {ICacheTiming} cacheTiming This function is used to call setAge(item: ICacheItem<any>) on the cached item.\n     *\n     * @return {CacheService} CacheService The CacheService instance.\n     *\n     * @example\n     * ```ts\n     * export class CustomCacheTiming implements ICacheTiming {\n     * \tprivate expirationAge: number;\n     * \tprivate refreshAge: number;\n     *  constructor(expirationAge: number, refreshAge: number) {\n     * \t\t// The cached response is discarded if it is older than the expiration age.\n     * \t\tthis.expirationAge = expirationAge;\n     * \t\t// maximum age for the cached response to be considered \"fresh.\"\n     * \t\tthis.refreshAge = refreshAge;\n     * \t}\n     * \tsetAge(item: ICacheItem<any>): void {\n     * \t\titem.expirationAge = this.expirationAge;\n     * \t\titem.refreshAge = this.refreshAge;\n     * \t}\n     * \t};\n     * \tconst customCacheTiming = new CustomCacheTiming(30 * 60000, 15 * 60000);\n     * \tconst customContentPredicate: ICachePredicate = (cacheActions: CacheAction[]) => {\n     * \t\treturn cacheActions.find((cacheAction) => cacheAction.name === 'CUSTOM_TAG') !== null;\n     * \t};\n     * this.register(customContentPredicate, customCacheTiming);\n     * ```\n     */\n    public register(test: ICachePredicate, cacheTiming: ICacheTiming): CacheService {\n        this.predicatesRegistry.unshift({\n            test,\n            cacheTiming\n        });\n        return this;\n    }\n\n    /**\n     * public method but only meant to be used by @Cache annotation\n     */\n    public handle<T extends IMetadata>(\n        service: any,\n        methodName: string,\n        preboundMethod: (...args: any[]) => Promise<T>,\n        invocationArguments: any[],\n        cacheActions: CacheAction[],\n        tags: EvictionTag[]\n    ): Promise<T> {\n        const constructorName = this.functionsUtils.getInstanceConstructorName(service);\n        const cachedItemId: string =\n            window.btoa(constructorName + methodName) +\n            this.stringUtils.encode(invocationArguments);\n\n        const _item: ICacheItem<any> | null = this.cacheEngine.getItemById(cachedItemId);\n        let item: ICacheItem<any>;\n\n        if (!_item) {\n            const partialItem: Pick<\n                ICacheItem<any>,\n                'id' | 'timestamp' | 'evictionTags' | 'cache'\n            > = _item || {\n                id: cachedItemId,\n                timestamp: new Date().getTime(),\n                evictionTags: this.collectEventNamesFromTags(tags),\n                cache: null\n            };\n\n            const cacheTiming: ICacheTiming | null = this.findCacheTimingByCacheActions(\n                cacheActions\n            );\n            if (!cacheTiming) {\n                throw new Error('CacheService::handle - No predicate match.');\n            }\n            item = cacheTiming.setAge(partialItem);\n\n            this.cacheEngine.addItem(item, cacheTiming, preboundMethod.bind(\n                undefined,\n                ...Array.prototype.slice.call(invocationArguments)\n            ) as (<G>() => Promise<G>));\n\n            this.listenForEvictionByTags(tags);\n        } else {\n            item = _item;\n        }\n\n        return this.cacheEngine.handle(item);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:CacheService#evict\n     * @methodOf  @smartutils.services:CacheService\n     * @description\n     * Will evict the entire cache of all methods of all services referencing either directly or indirectly the given {@link @smartutils.object:EvictionTag EvictionTags}\n     * @param {...EvictionTag[]} evictionTags the {@link @smartutils.object:EvictionTag EvictionTags}\n     */\n    public evict(...evictionTags: EvictionTag[]): void {\n        const tags: string[] = this.collectEventNamesFromTags(evictionTags);\n        this.cacheEngine.evict(...tags);\n        tags.forEach((tag) => this.eventService.publish(tag));\n    }\n\n    protected listenForEvictionByTags(tags: EvictionTag[]): void {\n        this.collectEventNamesFromTags(tags)\n            .filter((eventId) => {\n                return this.eventListeners.indexOf(eventId) === -1;\n            })\n            .forEach((eventId) => {\n                this.logService.debug(`registering event listener ${eventId}`);\n                this.eventListeners.push(eventId);\n                this.eventService.subscribe(eventId, (evt: string, data?: Cloneable) => {\n                    this.logService.debug(`cleaning cache on event ${eventId}`);\n                    this.cacheEngine.evict(eventId);\n                    return Promise.resolve<Cloneable>({});\n                });\n            });\n    }\n\n    protected collectEventNamesFromTags(tags: EvictionTag[]): string[] {\n        if (tags && tags.length) {\n            return lodash.union(...tags.map((t) => this.collectEventNamesFromTag(t)));\n        } else {\n            return [];\n        }\n    }\n\n    protected collectEventNamesFromTag(tag: EvictionTag): string[] {\n        return lodash.union(\n            [tag.event],\n            ...(tag.relatedTags ? tag.relatedTags.map((t) => this.collectEventNamesFromTag(t)) : [])\n        );\n    }\n\n    protected findCacheTimingByCacheActions(cacheActions: CacheAction[]): ICacheTiming | null {\n        const predicate: IPredicateRegistry | undefined = this.predicatesRegistry.find(\n            (cacheTimingPredicate) => cacheTimingPredicate.test(cacheActions)\n        );\n        return predicate ? predicate.cacheTiming : this.defaultCacheTiming;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/**\n * @ngdoc object\n * @name @smartutils.object:EvictionTag\n * @description\n * A {@link @smartutils.object:@Cached @Cached} annotation is tagged with 0 to n EvictionTag, each EvictionTag possibly referencing other evictionTags.\n * <br/>An EvictionTag enables a method cache to be evicted 2 different ways:\n * <ul>\n * <li> An event with the same name as the tag is raised.</li>\n * <li> {@link @smartutils.services:CacheService#methods_evict evict} method of {@link @smartutils.services:CacheService cacheService} is invoked with the tag.</li>\n * </ul>\n */\nexport class EvictionTag {\n    /**\n     * @ngdoc property\n     * @name name\n     * @propertyOf @smartutils.object:EvictionTag\n     * @description\n     * event upon which the cache should be cleared.\n     */\n    public event: string;\n\n    /**\n     * @ngdoc property\n     * @name relatedTags\n     * @propertyOf @smartutils.object:EvictionTag\n     * @description\n     * other EvictionTag instances grouped under this evictionTag.\n     */\n    public relatedTags?: EvictionTag[];\n\n    constructor(args: { event: string; relatedTags?: EvictionTag[] }) {\n        this.event = args.event;\n        this.relatedTags = args.relatedTags;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/** @internal */\nimport { CacheAction } from '../../../services/cache/cache-action';\n\nexport const RarelyChangingContentName: string = 'RarelyChangingContent';\n\nexport const rarelyChangingContent = new CacheAction(RarelyChangingContentName);\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './rarely-changing-content';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './cached-annotation';\nexport * from './cache-action';\nexport * from './cache.service';\nexport * from './eviction-tag';\nexport * from './engine';\nexport * from './actions';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/* tslint:disable:max-classes-per-file */\nimport * as lodash from 'lodash';\nimport { Injectable } from '@angular/core';\nimport { HttpRequest } from '@angular/common/http';\nimport { Cloneable, Payload, TypedMap } from '../../../dtos';\n\nexport type RESTMETHOD = 'GET' | 'POST' | 'PUT' | 'DELETE';\n\n/**\n * @ngdoc object\n * @name @smartutils.object:BackendRespond\n * @description\n * Mocked response of a {@link @smartutils.services:HttpBackendService HttpBackendService} invocation\n * It is either a Cloneable payload (returned automatically with 200 status code)\n * or a function returning an array of 2 arguments: the status code and the payload\n * if a function, it is invoked with:\n * @param {string=} method GET, POST, PUT or DELETE\n * @param {string=} url the full url with query string\n * @param {any=} data the payload or the request, or the POST querystring\n * @param {TypedMap<string>=} headers the outpbound request headers map\n */\nexport type BackendRespond =\n    | Payload\n    | Payload[]\n    | ((\n          method?: string,\n          url?: string,\n          data?: any,\n          headers?: TypedMap<string>\n      ) => [number, Payload | Payload[]] | PromiseLike<[number, Payload | Payload[]]>);\n\n/**\n * @ngdoc service\n * @name @smartutils.services:BackendEntry\n * @description\n * Invocations of {@link @smartutils.services:HttpBackendService} when, whenGET, whenPOST, whenPUT, whenDELETE\n * all return an instance of {@link @smartutils.services:BackendEntry BackendEntry}\n * It is used to specify the mocked response for the given conditions.\n */\nexport class BackendEntry {\n    mock?: BackendRespond;\n\n    constructor(public pattern: string | RegExp, public matchingPayload?: Cloneable) {}\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:BackendEntry#respond\n     * @methodOf @smartutils.services:BackendEntry\n     * @description\n     * @param {BackendRespond} mock the {@link @smartutils.object:BackendRespond} to return for the given conditions\n     */\n    respond(mock: BackendRespond): BackendEntry {\n        this.mock = mock;\n        return this;\n    }\n\n    passThrough(): void {\n        //\n    }\n}\n\nexport interface BackendEntryMap {\n    [index: string]: BackendEntry[];\n}\n\n/**\n * @ngdoc service\n * @name @smartutils.services:HttpBackendService\n * @description\n * Service aimed to provide mocked backend responses for given http request patterns.\n * It follows the API of {@link https://docs.angularjs.org/api/ngMockE2E/service/$httpBackend $httpBackend}\n * minus a few limitations\n */\n@Injectable()\nexport class HttpBackendService {\n    private matchLatestDefinition: boolean = false;\n\n    private backends: BackendEntryMap = {\n        GET: [],\n        POST: [],\n        PUT: [],\n        DELETE: []\n    };\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:HttpBackendService#whenGET\n     * @methodOf @smartutils.services:HttpBackendService\n     * @description\n     * method similar to {@link https://docs.angularjs.org/api/ngMockE2E/service/$httpBackend#whenGET $httpBackend#whenGET}\n     * but with only the url pattern as parameter\n     * @param {string | RegExp} pattern url end of the url pattern to match\n     * @returns {BackendEntry} the {@link @smartutils.services:BackendEntry backenEntry}\n     */\n    whenGET(pattern: string | RegExp): BackendEntry {\n        return this._whenMethod('GET', pattern);\n    }\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:HttpBackendService#whenPOST\n     * @methodOf @smartutils.services:HttpBackendService\n     * @description\n     * method similar to {@link https://docs.angularjs.org/api/ngMockE2E/service/$httpBackend#whenPOST $httpBackend#whenPOST}\n     * but with only the first 2 arguments\n     * @param {string | RegExp} pattern url end of the url pattern to match\n     * @param {Cloenable=} matchingPayload HTTP request body to be matched\n     * @returns {BackendEntry} the {@link @smartutils.services:BackendEntry backenEntry}\n     */\n    whenPOST(pattern: string | RegExp, matchingPayload?: Cloneable): BackendEntry {\n        return this._whenMethod('POST', pattern, matchingPayload);\n    }\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:HttpBackendService#whenPUT\n     * @methodOf @smartutils.services:HttpBackendService\n     * @description\n     * method similar to {@link https://docs.angularjs.org/api/ngMockE2E/service/$httpBackend#whenPUT $httpBackend#whenPUT}\n     * but with only the first 2 arguments\n     * @param {string | RegExp} pattern url end of the url pattern to match\n     * @param {Cloenable=} matchingPayload HTTP request body to be matched\n     * @returns {BackendEntry} the {@link @smartutils.services:BackendEntry backenEntry}\n     */\n    whenPUT(pattern: string | RegExp, matchingPayload?: Cloneable): BackendEntry {\n        return this._whenMethod('PUT', pattern, matchingPayload);\n    }\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:HttpBackendService#whenPUT\n     * @methodOf @smartutils.services:HttpBackendService\n     * @description\n     * method similar to {@link https://docs.angularjs.org/api/ngMockE2E/service/$httpBackend#whenPUT $httpBackend#whenPUT}\n     * but with only the url pattern as parameter\n     * @param {string | RegExp} pattern url end of the url pattern to match\n     * @returns {BackendEntry} the {@link @smartutils.services:BackendEntry backenEntry}\n     */\n    whenDELETE(pattern: string | RegExp): BackendEntry {\n        return this._whenMethod('DELETE', pattern);\n    }\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:HttpBackendService#when\n     * @methodOf @smartutils.services:HttpBackendService\n     * @description\n     * method similar to {@link https://docs.angularjs.org/api/ngMockE2E/service/$httpBackend#when $httpBackend#when}\n     * @param {string} method GET, POST, PUT, or DELETE\n     * @param {string | RegExp} pattern url end of the url pattern to match\n     * @param {Cloenable=} matchingPayload HTTP request body to be matched\n     * @returns {BackendEntry} the {@link @smartutils.services:BackendEntry backenEntry}\n     */\n    when(method: RESTMETHOD, pattern: string | RegExp, matchingPayload?: Cloneable): BackendEntry {\n        return this._whenMethod(method, pattern, matchingPayload);\n    }\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:HttpBackendService#whenAsync\n     * @methodOf @smartutils.services:HttpBackendService\n     * @description\n     * method similar to legacy $httpBackend#whenAsync, use {@link @smartutils.services:HttpBackendService#when HttpBackendService#when} instead\n     * @param {string} method GET, POST, PUT, or DELETE\n     * @param {string | RegExp} pattern url end of the url pattern to match\n     * @param {Cloenable=} matchingPayload HTTP request body to be matched\n     * @returns {BackendEntry} the {@link @smartutils.services:BackendEntry backenEntry}\n     */\n    whenAsync(\n        method: RESTMETHOD,\n        pattern: string | RegExp,\n        matchingPayload?: Cloneable\n    ): BackendEntry {\n        return this._whenMethod(method, pattern, matchingPayload);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:HttpBackendService#matchLatestDefinitionEnabled\n     * @methodOf @smartutils.services:HttpBackendService\n     * @description\n     * method similar to {@link https://docs.angularjs.org/api/ngMockE2E/service/$httpBackend#matchLatestDefinitionEnabled $httpBackend#matchLatestDefinitionEnabled}\n     * @param {boolean=false} matchLatestDefinitionEnabled if true, the last matching pattern will be picked. Otherwise the first is picked\n     */\n    matchLatestDefinitionEnabled(matchLatestDefinitionEnabled: boolean) {\n        this.matchLatestDefinition = matchLatestDefinitionEnabled;\n    }\n\n    // whenAsync\n    ////////////////////////////////////\n\n    findMatchingMock(request: HttpRequest<any>): BackendRespond | undefined {\n        const backendEntry = (this.matchLatestDefinition\n            ? this.backends[request.method].slice().reverse()\n            : this.backends[request.method]\n        ).find((entry) => {\n            if (typeof entry.pattern === 'string') {\n                return (\n                    request.urlWithParams.endsWith(entry.pattern) &&\n                    this.matchingPayloadRestriction(entry, request)\n                );\n            } else {\n                const test =\n                    entry.pattern.test(request.urlWithParams) &&\n                    this.matchingPayloadRestriction(entry, request);\n                entry.pattern.lastIndex = 0;\n                return test;\n            }\n        });\n\n        return backendEntry ? backendEntry.mock : undefined;\n    }\n\n    private _whenMethod(\n        method: RESTMETHOD,\n        pattern: string | RegExp,\n        matchingPayload?: Cloneable\n    ): BackendEntry {\n        const entry = new BackendEntry(pattern, matchingPayload);\n        this.backends[method].push(entry);\n        return entry;\n    }\n\n    private matchingPayloadRestriction(entry: BackendEntry, request: HttpRequest<any>): boolean {\n        return entry.matchingPayload ? lodash.isEqual(entry.matchingPayload, request.body) : true;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lodash from 'lodash';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Payload, TypedMap } from '../../../dtos';\nimport { HttpUtils, UrlUtils } from '../../../utils';\nimport { LogService } from '../../../services/log.service';\nimport { HttpBackendService } from './http-backend.service';\n\n/*\n * This is the place where the entries through HttpBackenService invocations are being used.\n * All outbound http requests are funneled through here, when a match from HttpBackenService entries\n * is found, the request is intercepted and the specified mock is returned with especified status code.\n * If no match is found, the http request is effectively sent over the wire\n */\n@Injectable()\nexport class BackendInterceptor implements HttpInterceptor {\n    constructor(\n        private httpBackendService: HttpBackendService,\n        private httpUtils: HttpUtils,\n        private urlUtils: UrlUtils,\n        private logService: LogService\n    ) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const backendMockRespond = this.httpBackendService.findMatchingMock(request);\n\n        if (!backendMockRespond) {\n            return next.handle(request);\n        }\n\n        let response: [number, Payload | Payload[]] | PromiseLike<[number, Payload | Payload[]]>;\n\n        if (typeof backendMockRespond === 'object') {\n            response = [200, lodash.cloneDeep(backendMockRespond)];\n        } else {\n            // if (typeof backendMockRespond === 'function')\n            let data: string | null = null;\n            if (request.method === 'GET') {\n                data = decodeURIComponent(\n                    this.urlUtils.getQueryString(\n                        this.httpUtils.copyHttpParamsOrHeaders(request.params)\n                    )\n                );\n            } else if (\n                request.headers.get('Content-Type') === 'application/x-www-form-urlencoded'\n            ) {\n                data = request.body; // it is a query string\n            } else if (request.method === 'POST' || request.method === 'PUT') {\n                data = JSON.stringify(request.body);\n            }\n            const headers = this.httpUtils.copyHttpParamsOrHeaders(request.headers) as TypedMap<\n                string\n            >;\n\n            response = backendMockRespond(\n                request.method,\n                decodeURIComponent(request.urlWithParams),\n                data,\n                headers\n            );\n        }\n        this.logService.debug(`backend ${status} response for ${request.url}: `);\n\n        return this.httpUtils.buildHttpResponse(request, response).pipe(take(1));\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './backend.interceptor';\nexport * from './http-backend.service';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Injectable } from '@angular/core';\nimport {\n    HttpEvent,\n    HttpHandler,\n    HttpInterceptor,\n    HttpRequest,\n    HttpResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpUtils } from '../../../utils';\nimport { LogService } from '../../../services/log.service';\n\nexport type Predicate = (request: HttpRequest<any>) => boolean;\nexport type RequestHandler = (request: HttpRequest<any>) => HttpRequest<any>;\nexport type ResponseHandler = (event: HttpResponse<any>) => HttpResponse<any>;\n\n/*\n * interceptor that will inject flaw into outbound and inbound http calls.\n * It is mainly used to validate reliability and consitency of test frameworks\n */\n/** @internal */\n@Injectable()\nexport class FlawInjectionInterceptor implements HttpInterceptor {\n    static registerRequestFlaw(mutation: { test: Predicate; mutate: RequestHandler }) {\n        this.requestMutations.push(mutation);\n    }\n\n    static registerResponseFlaw(mutation: { test: Predicate; mutate: ResponseHandler }) {\n        this.responseMutations.push(mutation);\n    }\n\n    private static requestMutations: { test: Predicate; mutate: RequestHandler }[] = [];\n    private static responseMutations: { test: Predicate; mutate: ResponseHandler }[] = [];\n\n    /*\n     * probability of flaw occurrence ranging from 0 to 1\n     */\n    private static PROBABILITY = 0;\n\n    private flawWindow: any;\n\n    constructor(private httpUtils: HttpUtils, private logService: LogService) {\n        this.flawWindow = window;\n        this.flawWindow.allRequests = 0;\n        this.flawWindow.flawedRequests = 0;\n        this.flawWindow.allResponses = 0;\n        this.flawWindow.flawedResponses = 0;\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        let result: Observable<HttpEvent<any>>;\n\n        if (\n            FlawInjectionInterceptor.PROBABILITY !== 0 &&\n            this.httpUtils.isCRUDRequest(request) &&\n            !this._isGET(request)\n        ) {\n            this.flawWindow.allRequests++;\n            if (this._activateWithProbability(FlawInjectionInterceptor.PROBABILITY)) {\n                this.flawWindow.flawedRequests++;\n\n                const requestMutation = FlawInjectionInterceptor.requestMutations.find((mutation) =>\n                    mutation.test(request)\n                );\n                if (requestMutation) {\n                    this.logService.error(`FLAWED REQUEST-\"${request.url}`);\n                    result = next.handle(requestMutation.mutate(request));\n                }\n            }\n\n            result = next.handle(request);\n\n            return result.pipe(\n                map((event: HttpEvent<any>) => {\n                    if (\n                        event instanceof HttpResponse &&\n                        this._activateWithProbability(FlawInjectionInterceptor.PROBABILITY)\n                    ) {\n                        this.flawWindow.flawedResponses++;\n\n                        const responseMutation = FlawInjectionInterceptor.responseMutations.find(\n                            (mutation) => mutation.test(request)\n                        );\n                        if (responseMutation && event instanceof HttpResponse) {\n                            this.logService.error(`FLAWED RESPONSE-\"${request.url}`);\n                            return responseMutation.mutate(event);\n                        }\n                    }\n\n                    return event;\n                })\n            );\n        } else {\n            return next.handle(request);\n        }\n    }\n\n    private _isGET(config: angular.IRequestConfig) {\n        return config.method === 'GET';\n    }\n\n    private _activateWithProbability(probabilityTrue: number) {\n        return Math.random() >= 1.0 - probabilityTrue;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/* forbiddenNameSpaces useClass:false */\nimport { APP_INITIALIZER, ComponentRef, NgModule } from '@angular/core';\nimport { HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FlawInjectionInterceptor } from './flaw-injection.interceptor';\n\n/** @internal */\n@NgModule({\n    imports: [],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: FlawInjectionInterceptor,\n            multi: true\n        },\n        {\n            provide: APP_INITIALIZER,\n            useFactory() {\n                FlawInjectionInterceptor.registerRequestFlaw({\n                    test: (request: HttpRequest<any>) => /sites\\/[\\w-]+\\//.test(request.url),\n                    mutate: (request: HttpRequest<any>) => {\n                        return request.clone({\n                            url: request.url.replace(\n                                /sites\\/([\\w-]+)\\//,\n                                'sites/' + Math.random() + '/'\n                            )\n                        });\n                    }\n                });\n\n                return (component: ComponentRef<any>) => {\n                    // an initializer useFactory must return a function\n                };\n            },\n            multi: true\n        }\n    ]\n})\nexport class FlawInjectionInterceptorModule {}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './flaw-injection-interceptor.Module';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { AlertConfig as FundamentalAlertConfig } from '@fundamental-ngx/core';\nimport { TypedMap } from '../dtos';\nimport { Type } from '@angular/core';\n\nexport interface IAlertConfig extends FundamentalAlertConfig {\n    component?: Type<any>;\n    message?: string;\n    messagePlaceholders?: TypedMap<string>;\n}\n\nexport enum IAlertServiceType {\n    INFO = 'information',\n    SUCCESS = 'success',\n    WARNING = 'warning',\n    DANGER = 'error'\n}\n\nexport abstract class IAlertService {\n    showAlert(alertConf: IAlertConfig | string): void {\n        'proxyFunction';\n        return;\n    }\n\n    showInfo(alertConf: IAlertConfig | string): void {\n        'proxyFunction';\n        return;\n    }\n\n    showDanger(alertConf: IAlertConfig | string): void {\n        'proxyFunction';\n        return;\n    }\n\n    showWarning(alertConf: IAlertConfig | string): void {\n        'proxyFunction';\n        return;\n    }\n\n    showSuccess(alertConf: IAlertConfig | string): void {\n        'proxyFunction';\n        return;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/**\n * @ngdoc service\n * @name @smartutils.services:authenticationService\n *\n * @description\n * The authenticationService is used to authenticate and logout from SmartEdit.\n * It also allows the management of entry points used to authenticate the different resources in the application.\n *\n */\nexport abstract class IAuthenticationService {\n    protected reauthInProgress: IReAuthInProgress = {};\n    protected initialized: boolean = false;\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:authenticationService#authenticate\n     * @methodOf @smartutils.services:authenticationService\n     *\n     * @description\n     * Authenticates the current SmartEdit user against the entry point assigned to the requested resource. If no\n     * suitable entry point is found, the resource will be authenticated against the\n     * {@link resourceLocationsModule.object:DEFAULT_AUTHENTICATION_ENTRY_POINT DEFAULT_AUTHENTICATION_ENTRY_POINT}\n     *\n     * @param {String} resource The URI identifying the resource to access.\n     * @returns {Promise} A promise that resolves if the authentication is successful.\n     */\n    authenticate(resource: string): Promise<void> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:authenticationService#logout\n     * @methodOf @smartutils.services:authenticationService\n     *\n     * @description\n     * The logout method removes all stored authentication tokens and redirects to the\n     * landing page.\n     *\n     */\n    logout(): Promise<void> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n\n    // abstract onLogout(_onLogout: () => void): void;\n\n    // abstract onUserHasChanged(_onUserHasChanged: () => void): void;\n\n    isReAuthInProgress(entryPoint: string): Promise<boolean> {\n        'proxyFunction';\n        return Promise.resolve(false);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:authenticationService#setReAuthInProgress\n     * @methodOf @smartutils.services:authenticationService\n     *\n     * @description\n     * Used to indicate that the user is currently within a re-authentication flow for the given entry point.\n     * This flow is entered by default through authentication token expiry.\n     *\n     * @param {String} entryPoint The entry point which the user must be re-authenticated against.\n     *\n     */\n    setReAuthInProgress(entryPoint: string): Promise<void> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:authenticationService#filterEntryPoints\n     * @methodOf @smartutils.services:authenticationService\n     *\n     * @description\n     * Will retrieve all relevant authentication entry points for a given resource.\n     * A relevant entry point is an entry value of the authenticationMap found in {@link @smartutils.sharedDataService sharedDataService}.The key used in that map is a regular expression matching the resource.\n     * When no entry point is found, the method returns the {@link resourceLocationsModule.object:DEFAULT_AUTHENTICATION_ENTRY_POINT DEFAULT_AUTHENTICATION_ENTRY_POINT}\n     * @param {string} resource The URL for which a relevant authentication entry point must be found.\n     */\n    filterEntryPoints(resource: string): Promise<string[]> {\n        'proxyFunction';\n        return Promise.resolve([]);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:authenticationService##isAuthEntryPoint\n     * @methodOf @smartutils.services:authenticationService\n     *\n     * @description\n     * Indicates if the resource URI provided is one of the registered authentication entry points.\n     *\n     * @param {String} resource The URI to compare\n     * @returns {Boolean} Flag that will be true if the resource URI provided is an authentication entry point.\n     */\n    isAuthEntryPoint(resource: string): Promise<boolean> {\n        'proxyFunction';\n        return Promise.resolve(false);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:authenticationService##isAuthenticated\n     * @methodOf @smartutils.services:authenticationService\n     *\n     * @description\n     * Indicates if the resource URI provided maps to a registered authentication entry point and the associated entry point has an authentication token.\n     *\n     * @param {String} resource The URI to compare\n     * @returns {Boolean} Flag that will be true if the resource URI provided maps to an authentication entry point which has an authentication token.\n     */\n    isAuthenticated(url: string): Promise<boolean> {\n        'proxyFunction';\n        return Promise.resolve(false);\n    }\n}\n\nexport interface IReAuthInProgress {\n    [endPoint: string]: boolean;\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/**\n * @ngdoc interface\n * @name @smartutils.interfaces:IAuthToken\n * @description\n * Interface for Auth token\n */\nexport interface IAuthToken {\n    access_token: string;\n    expires_in?: number;\n    refresh_token?: string;\n    scope?: string;\n    token_type: string;\n}\n\n/**\n * @ngdoc interface\n * @name @smartutils.interfaces:IStorageService\n * @description\n * Interface for StorageService\n */\nexport abstract class IStorageService {\n    /**\n     * @ngdoc method\n     * @name @smartutils.interfaces:IStorageService#isInitialized\n     * @methodOf @smartutils.interfaces:IStorageService\n     *\n     * @description\n     * This method is used to determine if the storage service has been initialized properly. It\n     * makes sure that the smartedit-sessions cookie is available in the browser.\n     *\n     * @returns {Boolean} Indicates if the storage service was properly initialized.\n     */\n    isInitialized(): Promise<boolean> {\n        'proxyFunction';\n        return Promise.resolve(false);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.interfaces:IStorageService#storeAuthToken\n     * @methodOf @smartutils.interfaces:IStorageService\n     *\n     * @description\n     * This method creates and stores a new key/value entry. It associates an authentication token with a\n     * URI.\n     *\n     * @param {String} authURI The URI that identifies the resource(s) to be authenticated with the authToken. Will be used as a key.\n     * @param {String} auth The token to be used to authenticate the user in the provided URI.\n     */\n    storeAuthToken(authURI: string, auth: IAuthToken): Promise<void> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.interfaces:IStorageService#getAuthToken\n     * @methodOf @smartutils.interfaces:IStorageService\n     *\n     * @description\n     * This method is used to retrieve the authToken associated with the provided URI.\n     *\n     * @param {String} authURI The URI for which the associated authToken is to be retrieved.\n     * @returns {String} The authToken used to authenticate the current user in the provided URI.\n     */\n    getAuthToken(authURI: string): Promise<IAuthToken | undefined> {\n        'proxyFunction';\n        return Promise.resolve(undefined);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.interfaces:IStorageService#removeAuthToken\n     * @methodOf @smartutils.interfaces:IStorageService\n     *\n     * @description\n     * Removes the authToken associated with the provided URI.\n     *\n     * @param {String} authURI The URI for which its authToken is to be removed.\n     */\n    removeAuthToken(authURI: string): Promise<void> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.interfaces:IStorageService#removeAllAuthTokens\n     * @methodOf @smartutils.interfaces:IStorageService\n     *\n     * @description\n     * This method removes all authURI/authToken key/pairs from the storage service.\n     */\n    removeAllAuthTokens(): Promise<void> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.interfaces:IStorageService#getValueFromLocalStorage\n     * @methodOf @smartutils.interfaces:IStorageService\n     *\n     * @description\n     * Retrieves the value stored in the cookie identified by the provided name.\n     */\n    getValueFromLocalStorage(cookieName: string, isEncoded: boolean): Promise<any> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n\n    setValueInLocalStorage(cookieName: string, value: any, encode: boolean): Promise<void> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.interfaces:IStorageService#setItem\n     * @methodOf @smartutils.interfaces:IStorageService\n     *\n     * @description\n     * This method is used to store the item.\n     *\n     * @param {String} key The key of the item.\n     * @param {any} value The value of the item.\n     */\n    setItem(key: string, value: any): Promise<void> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.interfaces:IStorageService#getItem\n     * @methodOf @smartutils.interfaces:IStorageService\n     *\n     * @description\n     * Retrieves the value for a given key.\n     *\n     * @param {String} key The key of the item.\n     *\n     * @returns {Promise<any>} A promise that resolves to the item value.\n     */\n    getItem(key: string): Promise<any> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n\nimport { LIBRARY_NAME } from '../constants';\n\nexport const TESTMODESERVICE = `${LIBRARY_NAME}_TESTMODESERVICE`;\n\n/**\n * @ngdoc service\n * @name @smartutils.services:TestModeService\n *\n * @description\n * Used to determine whether smartedit is running in a e2e (test) mode\n */\n/** @internal */\nexport interface ITestModeService {\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:TestModeService#isE2EMode\n     * @methodOf @smartutils.services:TestModeService\n     *\n     * @description\n     * returns true if smartedit is running in e2e (test) mode\n     *\n     * @returns {Boolean} true/false\n     */\n    isE2EMode(): boolean;\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nimport { Observable } from 'rxjs';\n\nexport enum FundamentalModalButtonStyle {\n    Default = 'light',\n    Primary = 'emphasized'\n}\n\nexport enum FundamentalModalButtonAction {\n    Close = 'close',\n    Dismiss = 'dismiss',\n    None = 'none'\n}\n\nexport interface IFundamentalModalButtonOptions {\n    id: string;\n    label: string;\n    callback?: () => Observable<any>;\n    action?: FundamentalModalButtonAction;\n    style?: FundamentalModalButtonStyle;\n    compact?: boolean;\n    disabled?: boolean;\n    disabledFn?: () => boolean;\n}\n\n/**\n * @ngdoc object\n * @name modalServiceModule.object:ModalButtonActions\n * @description\n * An enum type representing buttons available actions.\n */\n\nexport enum ModalButtonActions {\n    /**\n     * @ngdoc property\n     * @name None\n     * @propertyOf modalServiceModule.object:ModalButtonActions\n     * @description none\n     *\n     */\n\n    None = 'none',\n\n    /**\n     * @ngdoc property\n     * @name Close\n     * @propertyOf modalServiceModule.object:ModalButtonActions\n     * @description close\n     *\n     */\n\n    Close = 'close',\n\n    /**\n     * @ngdoc property\n     * @name Dismiss\n     * @propertyOf modalServiceModule.object:ModalButtonActions\n     * @description dismiss\n     *\n     */\n\n    Dismiss = 'dismiss'\n}\n\n/**\n * @ngdoc object\n * @name modalServiceModule.object:ModalButtonStyles\n * @description\n * An enum type representing buttons available styles.\n */\n\nexport enum ModalButtonStyles {\n    /**\n     * @ngdoc property\n     * @name Default\n     * @propertyOf modalServiceModule.object:ModalButtonStyles\n     * @description default\n     */\n\n    Default = 'default',\n\n    /**\n     * @ngdoc property\n     * @name Primary\n     * @propertyOf modalServiceModule.object:ModalButtonStyles\n     * @description primary\n     */\n\n    Primary = 'primary'\n}\n\n/**\n * @ngdoc interface\n * @name modalServiceModule.interface:IModalButtonOptions\n *\n * @description\n * Interface for IModalButtonOptions\n */\n\nexport interface IModalButtonOptions {\n    /**\n     * @ngdoc property\n     * @name id\n     * @propertyOf modalServiceModule.interface:IModalButtonOptions\n     * @description\n     * id: String\n     *\n     * The key used to identify button\n     */\n    id: string;\n\n    /**\n     * @ngdoc property\n     * @name label\n     * @propertyOf modalServiceModule.interface:IModalButtonOptions\n     * @description\n     * label: String\n     *\n     * Translation key\n     */\n\n    label: string;\n    /**\n     * @ngdoc property\n     * @name action\n     * @propertyOf modalServiceModule.interface:IModalButtonOptions\n     * @description\n     * action: {@link modalServiceModule.object:ModalButtonActions ModalButtonActions}\n     *\n     * Used to define what action button should perform after click\n     */\n    action?: ModalButtonActions;\n    /**\n     * @ngdoc property\n     * @name style\n     * @propertyOf modalServiceModule.interface:IModalButtonOptions\n     * @description\n     * style: {@link modalServiceModule.object:ModalButtonStyles ModalButtonStyles}\n     *\n     * Property used to style the button\n     */\n    style?: ModalButtonStyles;\n    /**\n     * @ngdoc property\n     * @name disabled\n     * @propertyOf modalServiceModule.interface:IModalButtonOptions\n     * @description\n     * disabled: Boolean\n     *\n     * Decides whether button is disabled or not\n     */\n    disabled?: boolean;\n\n    /**\n     * @ngdoc method\n     * @name callback\n     * @propertyOf modalServiceModule.interface:IModalButtonOptions\n     * @description\n     * callback: () => void || Promise<any>\n     *\n     * Method triggered when button is pressed\n     */\n    callback?: () => void | Promise<any>;\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\nimport { Cloneable } from '../dtos';\n\n/**\n * @ngdoc interface\n * @name smarteditServicesModule.interface:ISharedDataService\n *\n * @description\n * Provides an abstract extensible shared data service. Used to store any data to be used either the SmartEdit\n * application or the SmartEdit container.\n *\n * This class serves as an interface and should be extended, not instantiated.\n */\nexport abstract class ISharedDataService {\n    /**\n     * @ngdoc method\n     * @name smarteditServicesModule.interface:ISharedDataService#get\n     * @methodOf smarteditServicesModule.interface:ISharedDataService\n     *\n     * @description\n     * Get the data for the given key.\n     *\n     * @param {String} key The key of the data to fetch\n     */\n    get(key: string): Promise<Cloneable> {\n        'proxyFunction';\n        return Promise.resolve({});\n    }\n\n    /**\n     * @ngdoc method\n     * @name smarteditServicesModule.interface:ISharedDataService#set\n     * @methodOf smarteditServicesModule.interface:ISharedDataService\n     *\n     * @description\n     * Set data for the given key.\n     *\n     * @param {String} key The key of the data to set\n     * @param {object} value The value of the data to set\n     */\n    set(key: string, value: Cloneable): Promise<void> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n\n    /**\n     * @ngdoc method\n     * @name smarteditServicesModule.interface:ISharedDataService#update\n     * @methodOf smarteditServicesModule.interface:ISharedDataService\n     *\n     * @description\n     * Convenience method to retrieve and modify on the fly the content stored under a given key\n     *\n     * @param {String} key The key of the data to store\n     * @param {Function} modifyingCallback callback fed with the value stored under the given key. The callback must return the new value of the object to update.\n     */\n    update(key: string, modifyingCallback: (oldValue: any) => any): Promise<void> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n\n    /**\n     * @ngdoc method\n     * @name smarteditServicesModule.interface:ISharedDataService#remove\n     * @methodOf smarteditServicesModule.interface:ISharedDataService\n     *\n     * @description\n     * Remove the entry for the given key.\n     *\n     * @param {String} key The key of the data to remove.\n     * @returns {Promise<Cloneable>} A promise which resolves to the removed data for the given key.\n     */\n    remove(key: string): Promise<Cloneable> {\n        'proxyFunction';\n        return Promise.resolve({});\n    }\n\n    /**\n     * @ngdoc method\n     * @name smarteditServicesModule.interface:ISharedDataService#containsKey\n     * @methodOf smarteditServicesModule.interface:ISharedDataService\n     *\n     * @description\n     * Checks the given key exists or not.\n     *\n     * @param {String} key The key of the data to check.\n     * @returns {Promise<boolean>} A promise which resolves to true if the given key is found. Otherwise false.\n     */\n    containsKey(key: string): Promise<boolean> {\n        'proxyFunction';\n        return Promise.resolve(true);\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { TypedMap } from '../dtos';\n\nexport abstract class ISettingsService {\n    load(): Promise<TypedMap<string | boolean>> {\n        'proxyFunction';\n        return Promise.resolve({ key: '' });\n    }\n\n    get(key: string): Promise<string> {\n        'proxyFunction';\n        return Promise.resolve('');\n    }\n\n    getBoolean(key: string): Promise<boolean> {\n        'proxyFunction';\n        return Promise.resolve(true);\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { IFundamentalModalConfig } from '../services/modal';\nimport { ModalRef } from '@fundamental-ngx/core';\nimport { IModalConfig } from './i-modal-config';\n\nexport abstract class IModalService {\n    public dismissAll(): void {\n        'proxyFunction';\n    }\n\n    public open<T>(conf: IFundamentalModalConfig<T>): ModalRef;\n    public open(conf: IModalConfig): angular.IPromise<any>;\n    public open<T = {}>(\n        conf: IFundamentalModalConfig<T> | IModalConfig\n    ): ModalRef | angular.IPromise<any> {\n        'proxyFunction';\n        return {} as ModalRef;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\nimport { User } from '../dtos';\n\n/**\n * @ngdoc interface\n * @name smarteditServicesModule.interface:ISessionService\n * @description\n * The ISessionService provides information related to the current session\n * and the authenticated user (including a user readable and writeable languages).\n */\nexport abstract class ISessionService {\n    /**\n     * @ngdoc method\n     * @name smarteditServicesModule.interface:ISessionService#getCurrentUsername\n     * @methodOf smarteditServicesModule.interface:ISessionService\n     *\n     * @description\n     * Returns the username, previously mentioned as \"principalUID\",\n     * associated to the authenticated user.\n     *\n     * @returns {Promise<string>} A promise resolving to the username,\n     * previously mentioned as \"principalUID\", associated to the\n     * authenticated user.\n     */\n    getCurrentUsername(): Promise<string> {\n        'proxyFunction';\n        return Promise.resolve('');\n    }\n\n    /**\n     * @ngdoc method\n     * @name smarteditServicesModule.interface:ISessionService#getCurrentUserDisplayName\n     * @methodOf smarteditServicesModule.interface:ISessionService\n     *\n     * @description\n     * Returns the displayed name associated to the authenticated user.\n     *\n     * @returns {Promise<string>} A promise resolving to the displayed name\n     * associated to the authenticated user.\n     */\n    getCurrentUserDisplayName(): Promise<string> {\n        'proxyFunction';\n        return Promise.resolve('');\n    }\n\n    /**\n     * @ngdoc method\n     * @name smarteditServicesModule.interface:ISessionService#getCurrentUser\n     * @methodOf smarteditServicesModule.interface:ISessionService\n     *\n     * @description\n     * Returns the data of the current authenticated user.\n     * Also note that as part of the User object returned by this method contains\n     * the list of readable and writeable languages available to the user.\n     *\n     * @returns {Promise<User>} A promise resolving to the data of the current\n     * authenticated user.\n     */\n    getCurrentUser(): Promise<User> {\n        'proxyFunction';\n        return Promise.resolve({} as User);\n    }\n\n    /**\n     * @ngdoc method\n     * @name smarteditServicesModule.interface:ISessionService#hasUserChanged\n     * @methodOf smarteditServicesModule.interface:ISessionService\n     *\n     * @description\n     * Returns boolean indicating whether the current user is different from\n     * the last authenticated one.\n     *\n     * @returns {Promise<boolean>} Boolean indicating whether the current user is\n     * different from the last authenticated one.\n     */\n    hasUserChanged(): Promise<boolean> {\n        'proxyFunction';\n        return Promise.resolve(true);\n    }\n\n    /**\n     * @ngdoc method\n     * @name smarteditServicesModule.interface:ISessionService#resetCurrentUserData\n     * @methodOf smarteditServicesModule.interface:ISessionService\n     *\n     * @description\n     * Reset all data associated to the authenticated user.\n     * to the authenticated user.\n     *\n     * @return {Promise<void>} returns an empty promise.\n     */\n    resetCurrentUserData(): Promise<void> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n\n    /**\n     * @ngdoc method\n     * @name smarteditServicesModule.interface:ISessionService#setCurrentUsername\n     * @methodOf smarteditServicesModule.interface:ISessionService\n     *\n     * @description\n     * Set the username, previously mentioned as \"principalUID\", associated\n     * to the authenticated user.\n     *\n     * @return {Promise<void>} returns an empty promise.\n     */\n    setCurrentUsername(): Promise<void> {\n        'proxyFunction';\n        return Promise.resolve();\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport abstract class IAuthenticationManagerService {\n    abstract onLogout(): void;\n    abstract onUserHasChanged(): void;\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lodash from 'lodash';\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { booleanUtils } from '../../../../../utils';\nconst SERVER_ERROR_PREDICATE_HTTP_STATUSES = [500, 502, 503, 504];\nconst CLIENT_ERROR_PREDICATE_HTTP_STATUSES = [429];\nconst TIMEOUT_ERROR_PREDICATE_HTTP_STATUSES = [408];\n\nexport function serverErrorPredicate(request: HttpRequest<any>, response: HttpErrorResponse) {\n    return response && lodash.includes(SERVER_ERROR_PREDICATE_HTTP_STATUSES, response.status);\n}\nexport function clientErrorPredicate(request: HttpRequest<any>, response: HttpErrorResponse) {\n    return response && lodash.includes(CLIENT_ERROR_PREDICATE_HTTP_STATUSES, response.status);\n}\nexport function timeoutErrorPredicate(request: HttpRequest<any>, response: HttpErrorResponse) {\n    return response && lodash.includes(TIMEOUT_ERROR_PREDICATE_HTTP_STATUSES, response.status);\n}\nexport function retriableErrorPredicate(request: HttpRequest<any>, response: HttpErrorResponse) {\n    return (\n        response &&\n        booleanUtils.isAnyTruthy(serverErrorPredicate, clientErrorPredicate, timeoutErrorPredicate)(\n            request,\n            response\n        )\n    );\n}\nexport function noInternetConnectionErrorPredicate(\n    request: HttpRequest<any>,\n    response: HttpErrorResponse\n) {\n    return response && response.status === 0;\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lodash from 'lodash';\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nexport const HTTP_METHODS_UPDATE = ['PUT', 'POST', 'DELETE', 'PATCH'];\nexport const HTTP_METHODS_READ = ['GET', 'OPTIONS', 'HEAD'];\n\nexport function updatePredicate(request: HttpRequest<any>, response: HttpErrorResponse) {\n    return lodash.includes(HTTP_METHODS_UPDATE, request.method);\n}\nexport function readPredicate(request: HttpRequest<any>, response: HttpErrorResponse) {\n    return lodash.includes(HTTP_METHODS_READ, request.method);\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './http-error.predicates';\nexport * from './http-method.predicates';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { IRetry } from './i-retry';\n\n/**\n * @ngdoc object\n * @name @smartutils.object:EXPONENTIAL_RETRY_DEFAULT_SETTING\n *\n * @description\n * The setting object to be used as default values for retry.\n */\nexport const EXPONENTIAL_RETRY_DEFAULT_SETTING = {\n    MAX_BACKOFF: 64000,\n    MAX_ATTEMPT: 5,\n    MIN_BACKOFF: 0\n};\n\n/**\n * @ngdoc service\n * @name @smartutils.services:exponentialRetry\n * @description\n * When used by a retry strategy, this service could provide an exponential delay time to be used by the strategy before the next request is sent. The service also provides functionality to check if it is possible to perform a next retry.\n */\nexport class ExponentialRetry implements IRetry {\n    calculateNextDelay(attemptCount: number, maxBackoff?: number, minBackoff?: number): number {\n        maxBackoff = maxBackoff || EXPONENTIAL_RETRY_DEFAULT_SETTING.MAX_BACKOFF;\n        minBackoff = minBackoff || EXPONENTIAL_RETRY_DEFAULT_SETTING.MIN_BACKOFF;\n\n        const waveShield = minBackoff + Math.random();\n\n        return Math.min(Math.pow(2, attemptCount) * 1000 + waveShield, maxBackoff);\n    }\n\n    canRetry(attemptCount: number, maxAttempt?: number): boolean {\n        maxAttempt = maxAttempt || EXPONENTIAL_RETRY_DEFAULT_SETTING.MAX_ATTEMPT;\n        return attemptCount <= maxAttempt;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { IRetry } from './i-retry';\n/**\n * @ngdoc object\n * @name @smartutils.object:LINEAR_RETRY_DEFAULT_SETTING\n *\n * @description\n * The setting object to be used as default values for retry.\n */\nexport const LINEAR_RETRY_DEFAULT_SETTING = {\n    MAX_ATTEMPT: 5,\n    MAX_BACKOFF: 32000,\n    MIN_BACKOFF: 0,\n    RETRY_INTERVAL: 500\n};\n\n/**\n * @ngdoc service\n * @name @smartutils.services:linearRetry\n * @description\n * When used by a retry strategy, this service could provide a linear delay time to be used by the strategy before the next request is sent. The service also provides functionality to check if it is possible to perform a next retry.\n */\nexport class LinearRetry implements IRetry {\n    calculateNextDelay(\n        attemptCount: number,\n        retryInterval?: number,\n        maxBackoff?: number,\n        minBackoff?: number\n    ): number {\n        maxBackoff = maxBackoff || LINEAR_RETRY_DEFAULT_SETTING.MAX_BACKOFF;\n        minBackoff = minBackoff || LINEAR_RETRY_DEFAULT_SETTING.MIN_BACKOFF;\n        retryInterval = retryInterval || LINEAR_RETRY_DEFAULT_SETTING.RETRY_INTERVAL;\n\n        const waveShield = minBackoff + Math.random();\n        return Math.min(attemptCount * retryInterval + waveShield, maxBackoff);\n    }\n\n    canRetry(attemptCount: number, maxAttempt?: number): boolean {\n        maxAttempt = maxAttempt || LINEAR_RETRY_DEFAULT_SETTING.MAX_ATTEMPT;\n        return attemptCount <= maxAttempt;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { IRetry } from './i-retry';\n/**\n * @ngdoc object\n * @name @smartutils.object:SIMPLE_RETRY_DEFAULT_SETTING\n *\n * @description\n * The setting object to be used as default values for retry.\n */\nexport const SIMPLE_RETRY_DEFAULT_SETTING = {\n    MAX_ATTEMPT: 5,\n    MIN_BACKOFF: 0,\n    RETRY_INTERVAL: 500\n};\n\n/**\n * @ngdoc service\n * @name @smartutils.services:simpleRetry\n * @description\n * When used by a retry strategy, this service could provide a simple fixed delay time to be used by the strategy before the next request is sent. The service also provides functionality to check if it is possible to perform a next retry.\n */\nexport class SimpleRetry implements IRetry {\n    calculateNextDelay(retryInterval?: number, minBackoff?: number): number {\n        minBackoff = minBackoff || SIMPLE_RETRY_DEFAULT_SETTING.MIN_BACKOFF;\n        retryInterval = retryInterval || SIMPLE_RETRY_DEFAULT_SETTING.RETRY_INTERVAL;\n\n        const waveShield = minBackoff + Math.random();\n        return retryInterval + waveShield;\n    }\n\n    canRetry(attemptCount: number, _maxAttempt?: number): boolean {\n        const maxAttempt = _maxAttempt || SIMPLE_RETRY_DEFAULT_SETTING.MAX_ATTEMPT;\n        return attemptCount <= maxAttempt;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './exponential-retry';\nexport * from './linear-retry';\nexport * from './simple-retry';\nexport * from './i-retry';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { InjectionToken } from '@angular/core';\nimport { Class } from '../../../../../types';\nimport { SimpleRetry } from '../retryPolicies';\nimport { IRetryStrategy } from './i-retry-strategy';\n\nexport const DefaultRetryStrategy = new InjectionToken<string>('DefaultRetryStrategy');\n\nexport function defaultRetryStrategyFactory(simpleRetry: SimpleRetry): Class<IRetryStrategy> {\n    return class implements IRetryStrategy {\n        public firstFastRetry = true;\n        public attemptCount: number = 0;\n\n        canRetry() {\n            return simpleRetry.canRetry(this.attemptCount);\n        }\n\n        calculateNextDelay() {\n            return simpleRetry.calculateNextDelay();\n        }\n    };\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { InjectionToken } from '@angular/core';\nimport { Class } from '../../../../../types';\nimport { ExponentialRetry } from '../retryPolicies';\nimport { IRetryStrategy } from './i-retry-strategy';\n\nexport const ExponentialRetryStrategy = new InjectionToken<string>('ExponentialRetryStrategy');\n\nexport function exponentialRetryStrategyFactory(\n    exponentialRetry: ExponentialRetry\n): Class<IRetryStrategy> {\n    return class implements IRetryStrategy {\n        public firstFastRetry = true;\n        public attemptCount: number = 0;\n\n        canRetry() {\n            return exponentialRetry.canRetry(this.attemptCount);\n        }\n\n        calculateNextDelay() {\n            return exponentialRetry.calculateNextDelay(this.attemptCount);\n        }\n    };\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { InjectionToken } from '@angular/core';\nimport { Class } from '../../../../../types';\nimport { LinearRetry } from '../retryPolicies';\nimport { IRetryStrategy } from './i-retry-strategy';\n\nexport const LinearRetryStrategy = new InjectionToken<string>('LinearRetryStrategy');\n\nexport function linearRetryStrategyFactory(linearRetry: LinearRetry): Class<IRetryStrategy> {\n    return class implements IRetryStrategy {\n        public firstFastRetry = true;\n        public attemptCount: number = 0;\n\n        canRetry() {\n            return linearRetry.canRetry(this.attemptCount);\n        }\n\n        calculateNextDelay() {\n            return linearRetry.calculateNextDelay(this.attemptCount);\n        }\n    };\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lodash from 'lodash';\nimport { Injectable } from '@angular/core';\n\n/** @internal */\ninterface Store {\n    urlRegex: RegExp;\n    operationContext: string;\n}\n\n/**\n * @ngdoc service\n * @name @smartutils.services:OperationContextService\n * @description\n * This service provides the functionality to register a url with its associated operation contexts and also finds operation context given an url.\n */\n@Injectable()\nexport class OperationContextService {\n    private store: Store[];\n    constructor() {\n        this.store = [];\n    }\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:OperationContextService#register\n     * @methodOf @smartutils.services:OperationContextService\n     *\n     * @description\n     * Register a new url with it's associated operationContext.\n     *\n     * @param {String} url The url that is associated to the operation context.\n     * @param {String} operationContext The operation context name that is associated to the given url.\n     *\n     * @return {Object} operationContextService The operationContextService service\n     */\n    register(url: string, operationContext: string): this {\n        if (typeof url !== 'string' || lodash.isEmpty(url)) {\n            throw new Error('operationContextService.register error: url is invalid');\n        }\n        if (typeof operationContext !== 'string' || lodash.isEmpty(operationContext)) {\n            throw new Error('operationContextService.register error: operationContext is invalid');\n        }\n        const regexIndex = this.store.findIndex(\n            (store) =>\n                store.urlRegex.test(url) === true && store.operationContext === operationContext\n        );\n\n        if (regexIndex !== -1) {\n            return this;\n        }\n        const urlRegex = new RegExp(url.replace(/\\/:[^\\/]*/g, '/.*'));\n        this.store.push({\n            urlRegex,\n            operationContext\n        });\n        return this;\n    }\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:OperationContextService#findOperationContext\n     * @methodOf @smartutils.services:OperationContextService\n     *\n     * @description\n     * Find the first matching operation context for the given url.\n     *\n     * @param {String} url The request url.\n     *\n     * @return {String} operationContext\n     */\n    findOperationContext(url: string): string | null {\n        const regexIndex = this.store.findIndex((store) => store.urlRegex.test(url) === true);\n        return ~regexIndex ? this.store[regexIndex].operationContext : null;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Injector } from '@angular/core';\nimport { TypedMap } from '../../../../dtos';\nimport { annotationService, ClassAnnotationFactory } from '../../../annotation.service';\nimport { OperationContextService } from './operation-context.service';\n\nconst operationContextName = 'OperationContextRegistered';\n\n/**\n * @ngdoc object\n * @name @smartutils.object:@OperationContextRegistered\n * @description\n * Class level typescript {@link http://www.typescriptlang.org/docs/handbook/decorators.html decorator factory} is delegated to\n * {@link @smartutils.services:OperationContextService OperationContextService.register} and it provides the functionality\n * to register an url with  operation context(s).\n *\n * For example:\n * 1. @OperationContextRegistered('apiUrl', ['CMS', 'INTERACTIVE'])\n * 2. @OperationContextRegistered('apiUrl', 'TOOLING')\n *\n * @param {string} url\n * @param {string | string[]} operationContext\n */\nexport const OperationContextRegistered = annotationService.getClassAnnotationFactory(\n    operationContextName\n) as (url: string, operationContext: string | string[]) => ClassDecorator;\n\nexport function OperationContextAnnotationFactory(\n    injector: Injector,\n    operationContextService: OperationContextService,\n    OPERATION_CONTEXT: TypedMap<string>\n): ClassAnnotationFactory | null {\n    'ngInject';\n    return annotationService.setClassAnnotationFactory(operationContextName, function(\n        factoryArguments: any[]\n    ) {\n        return function(\n            instance: any,\n            originalConstructor: (...x: any[]) => any,\n            invocationArguments: any[]\n        ) {\n            originalConstructor.call(instance, ...invocationArguments);\n\n            const url: string = injector.get<string>(factoryArguments[0], factoryArguments[0]);\n\n            if (typeof factoryArguments[1] === 'string') {\n                const operationContext: string = (OPERATION_CONTEXT as any)[factoryArguments[1]];\n                operationContextService.register(url, operationContext);\n            } else if (Array.isArray(factoryArguments[1]) && factoryArguments[1].length > 0) {\n                factoryArguments[1].forEach((element: string) => {\n                    operationContextService.register(url, (OPERATION_CONTEXT as any)[element]);\n                });\n            }\n        };\n    });\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './predicates';\nexport * from './retryPolicies';\nexport * from './retryStrategies';\nexport * from './operation-context.service';\nexport * from './operation-context.annotation';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IAlertService } from '../../../interfaces';\nimport { BooleanUtils } from '../../../utils';\nimport { TypedMap } from '../../../dtos';\nimport { Class } from '../../../types';\nimport {\n    clientErrorPredicate,\n    noInternetConnectionErrorPredicate,\n    readPredicate,\n    retriableErrorPredicate,\n    serverErrorPredicate,\n    timeoutErrorPredicate,\n    DefaultRetryStrategy,\n    ExponentialRetryStrategy,\n    IRetryStrategy,\n    LinearRetryStrategy,\n    OperationContextService\n} from './retries';\nimport { IHttpErrorInterceptor } from '../i-http-error.interceptor';\n\nexport type RetryPredicate = (\n    request: HttpRequest<any>,\n    response: HttpErrorResponse,\n    operationContext?: string\n) => boolean;\n\nimport { LIBRARY_NAME } from '../../../constants';\n\nexport const OPERATION_CONTEXT_TOKEN = `${LIBRARY_NAME}_OPERATION_CONTEXT`;\n\n/**\n * @ngdoc service\n * @name @smartutils.services:retryInterceptor\n *\n * @description\n * The retryInterceptor provides the functionality to register a set of predicates with their associated retry strategies.\n * Each time an HTTP request fails, the service try to find a matching retry strategy for the given response.\n */\n@Injectable()\nexport class RetryInterceptor<T = any> implements IHttpErrorInterceptor<T> {\n    private TRANSLATE_NAMESPACE = 'se.gracefuldegradation.';\n\n    private predicatesRegistry: {\n        predicate: RetryPredicate;\n        retryStrategy: Class<IRetryStrategy>;\n    }[] = [];\n\n    private requestToRetryTegistry: TypedMap<IRetryStrategy> = {};\n\n    constructor(\n        private httpClient: HttpClient,\n        private translate: TranslateService,\n        private operationContextService: OperationContextService,\n        private alertService: IAlertService,\n        booleanUtils: BooleanUtils,\n        @Inject(DefaultRetryStrategy) defaultRetryStrategy: Class<IRetryStrategy>,\n        @Inject(ExponentialRetryStrategy) exponentialRetryStrategy: Class<IRetryStrategy>,\n        @Inject(LinearRetryStrategy) linearRetryStrategy: Class<IRetryStrategy>,\n        @Inject(OPERATION_CONTEXT_TOKEN) private OPERATION_CONTEXT: TypedMap<string>\n    ) {\n        this.register(noInternetConnectionErrorPredicate, exponentialRetryStrategy)\n            .register(\n                booleanUtils.isAnyTruthy(clientErrorPredicate, timeoutErrorPredicate),\n                defaultRetryStrategy\n            )\n            .register(\n                booleanUtils.areAllTruthy(readPredicate, retriableErrorPredicate),\n                defaultRetryStrategy\n            )\n            .register(serverErrorPredicate, exponentialRetryStrategy);\n    }\n\n    predicate(request: HttpRequest<T>, response: HttpErrorResponse) {\n        return this.findMatchingStrategy(request, response) !== null;\n    }\n\n    responseError(request: HttpRequest<T>, response: HttpErrorResponse): Promise<any> {\n        let retryStrategy = this.retrieveRetryStrategy(request);\n        if (!retryStrategy) {\n            const StrategyHolder = this.findMatchingStrategy(request, response);\n            if (StrategyHolder) {\n                this.alertService.showWarning({\n                    message: this.translate.instant(this.TRANSLATE_NAMESPACE + 'stillworking')\n                });\n                retryStrategy = new StrategyHolder();\n                retryStrategy.attemptCount = 0;\n                this.storeRetryStrategy(request, retryStrategy);\n            } else {\n                return Promise.reject(response);\n            }\n        }\n        return this.handleRetry(retryStrategy, request, response);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:retryInterceptor#register\n     * @methodOf @smartutils.services:retryInterceptor\n     *\n     * @description\n     * Register a new predicate with it's associated strategyHolder.\n     *\n     * @param {Function} predicate This function takes the 'response' {Object} argument and an (optional) operationContext {String}. This function must return a Boolean that is true if the given response match the predicate.\n     * @param {Function} retryStrategy This function will be instanciated at run-time. See {@link @smartutils.services:IRetryStrategy IRetryStrategy}.\n     *\n     * @return {Object} retryInterceptor The retryInterceptor service.\n     *\n     * @example\n     * ```js\n     *      var customPredicate = function(request, response, operationContext) {\n     *          return response.status === 500 && operationContext === OPERATION_CONTEXT.TOOLING;\n     *      };\n     *      var StrategyHolder = function() {\n     *          // set the firstFastRetry value to true for the retry made immediately only for the very first retry (subsequent retries will remain subject to the calculateNextDelay response)\n     *          this.firstFastRetry = true;\n     *      };\n     *      StrategyHolder.prototype.canRetry = function() {\n     *          // this function must return a {Boolean} if the given request must be retried.\n     *          // use this.attemptCount value to determine if the function should return true or false\n     *      };\n     *      StrategyHolder.prototype.calculateNextDelay = function() {\n     *          // this function must return the next delay time {Number}\n     *          // use this.attemptCount value to determine the next delay value\n     *      };\n     *      retryInterceptor.register(customPredicate, StrategyHolder);\n     * ```\n     */\n    register(predicate: RetryPredicate, retryStrategy: Class<IRetryStrategy>): RetryInterceptor<T> {\n        if (typeof predicate !== 'function') {\n            throw new Error('retryInterceptor.register error: predicate must be a function');\n        }\n        if (typeof retryStrategy !== 'function') {\n            throw new Error('retryInterceptor.register error: retryStrategy must be a function');\n        }\n        this.predicatesRegistry.unshift({\n            predicate,\n            retryStrategy\n        });\n        return this;\n    }\n\n    /**\n     * Find a matching strategy for the given response and (optional) operationContext\n     * If not provided, the default operationContext is OPERATION_CONTEXT.INTERACTIVE\n     *\n     * @param {Object} response The http response object\n     *\n     * @return {Function} The matching retryStrategy\n     */\n    private findMatchingStrategy(\n        request: HttpRequest<any>,\n        response: HttpErrorResponse\n    ): Class<IRetryStrategy> | null {\n        const operationContext =\n            this.operationContextService.findOperationContext(request.url) ||\n            this.OPERATION_CONTEXT.INTERACTIVE;\n        const matchStrategy = this.predicatesRegistry.find((predicateObj) => {\n            return predicateObj.predicate(request, response, operationContext);\n        });\n        return matchStrategy ? matchStrategy.retryStrategy : null;\n    }\n\n    private handleRetry(\n        retryStrategy: IRetryStrategy,\n        request: HttpRequest<any>,\n        response: HttpErrorResponse\n    ): Promise<any> {\n        retryStrategy.attemptCount++;\n        if (retryStrategy.canRetry()) {\n            const delay = retryStrategy.firstFastRetry ? 0 : retryStrategy.calculateNextDelay();\n            retryStrategy.firstFastRetry = false;\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.httpClient\n                        .request(request)\n                        .toPromise()\n                        .then(\n                            (result: any) => {\n                                this.removeRetryStrategy(request);\n                                return resolve(result);\n                            },\n                            (error: any) => reject(error)\n                        );\n                }, delay);\n            });\n        } else {\n            this.alertService.showDanger({\n                message: this.translate.instant(this.TRANSLATE_NAMESPACE + 'somethingwrong')\n            });\n            return Promise.reject(response);\n        }\n    }\n\n    private storeRetryStrategy(request: HttpRequest<any>, retryStrategy: IRetryStrategy): void {\n        this.requestToRetryTegistry[this.getRequestUUID(request)] = retryStrategy;\n    }\n    private removeRetryStrategy(request: HttpRequest<any>): void {\n        delete this.requestToRetryTegistry[this.getRequestUUID(request)];\n    }\n\n    private retrieveRetryStrategy(request: HttpRequest<any>): IRetryStrategy {\n        return this.requestToRetryTegistry[this.getRequestUUID(request)];\n    }\n\n    private getRequestUUID(request: HttpRequest<any>): string {\n        return request.clone().toString();\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { IAlertService } from '../../../interfaces';\nimport { BackendError, IHttpErrorInterceptor } from '../i-http-error.interceptor';\n/**\n * @ngdoc service\n * @name permissionErrorInterceptorModule.service:permissionErrorInterceptor\n * @description\n * Used for HTTP error code 403. Displays the alert message for permission error.\n */\n@Injectable()\nexport class PermissionErrorInterceptor<T = any> implements IHttpErrorInterceptor<T> {\n    constructor(private alertService: IAlertService) {}\n    predicate(request: HttpRequest<T>, response: HttpErrorResponse) {\n        return response.status === 403;\n    }\n    responseError(request: HttpRequest<T>, response: HttpErrorResponse) {\n        if (response.error && response.error.errors) {\n            response.error.errors\n                .filter((error: BackendError) => {\n                    return error.type === 'TypePermissionError';\n                })\n                .forEach((error: BackendError) => {\n                    this.alertService.showDanger({\n                        message: error.message,\n                        duration: 10000\n                    });\n                });\n        }\n        return Promise.reject(response);\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Inject, Injectable, Injector } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpEvent, HttpRequest } from '@angular/common/http';\nimport { IAuthenticationService, IEventService } from '../../../interfaces';\nimport { Deferred, HttpUtils, PromiseUtils } from '../../../utils';\nimport { TypedMap } from '../../../dtos';\nimport { IHttpErrorInterceptor } from '../i-http-error.interceptor';\nimport { EVENT_SERVICE, REAUTH_STARTED, WHO_AM_I_RESOURCE_URI_TOKEN } from '../../../constants';\n\n// map used by HttpAuthInterceptor to avoid replay identical requests being held because of 401\nexport const GET_REQUESTS_ON_HOLD_MAP: TypedMap<Promise<HttpEvent<any>>> = {};\n\n/**\n * @ngdoc service\n * @name @smartutils.services:unauthorizedErrorInterceptor\n * @description\n * Used for HTTP error code 401 (Forbidden). It will display the login modal.\n */\n@Injectable()\nexport class UnauthorizedErrorInterceptor<T = any> implements IHttpErrorInterceptor<T> {\n    private promisesToResolve: TypedMap<\n        { requestIdentifier: string; deferred: Deferred<T> }[]\n    > = {}; // key: auth entry point, value: array of deferred\n    private rejectedUrls: (string | RegExp)[] = [/authenticate/];\n\n    constructor(\n        private httpClient: HttpClient,\n        private authenticationService: IAuthenticationService,\n        private promiseUtils: PromiseUtils,\n        private httpUtils: HttpUtils,\n        @Inject(WHO_AM_I_RESOURCE_URI_TOKEN) WHO_AM_I_RESOURCE_URI: string,\n        @Inject(EVENT_SERVICE) private eventService: IEventService\n    ) {\n        this.rejectedUrls.push(WHO_AM_I_RESOURCE_URI);\n    }\n\n    predicate(request: HttpRequest<T>, response: HttpErrorResponse) {\n        return (\n            response.status === 401 &&\n            (request.url\n                ? this.httpUtils.isCRUDRequest(request, response) &&\n                  this.isUrlNotRejected(request.url)\n                : true)\n        );\n    }\n    responseError(request: HttpRequest<T>, response: HttpErrorResponse): Promise<any> {\n        const deferred = this.promiseUtils.defer<T>();\n\n        const deferredPromise = deferred.promise.then(() => {\n            return this.httpClient.request(request).toPromise();\n        });\n\n        this.authenticationService.isAuthEntryPoint(request.url).then((isAuthEntryPoint) => {\n            if (!isAuthEntryPoint) {\n                this.authenticationService\n                    .filterEntryPoints(request.url)\n                    .then((entryPoints: string[]) => {\n                        const entryPoint = entryPoints[0];\n                        this.promisesToResolve[entryPoint] =\n                            this.promisesToResolve[entryPoint] || [];\n                        this.promisesToResolve[entryPoint].push({\n                            requestIdentifier: request.url,\n                            deferred\n                        });\n                        if (this.httpUtils.isGET(request)) {\n                            GET_REQUESTS_ON_HOLD_MAP[request.url] = deferredPromise;\n                        }\n                        this.authenticationService\n                            .isReAuthInProgress(entryPoint)\n                            .then((isReAuthInProgress) => {\n                                if (!isReAuthInProgress) {\n                                    this.authenticationService\n                                        .setReAuthInProgress(entryPoint)\n                                        .then(() => {\n                                            const promisesToResolve = this.promisesToResolve;\n                                            this.eventService.publish(REAUTH_STARTED);\n                                            this.authenticationService\n                                                .authenticate(request.url)\n                                                .then(\n                                                    function() {\n                                                        promisesToResolve[this].forEach(\n                                                            (record) => {\n                                                                delete GET_REQUESTS_ON_HOLD_MAP[\n                                                                    record.requestIdentifier\n                                                                ];\n                                                                record.deferred.resolve();\n                                                            }\n                                                        );\n                                                        promisesToResolve[this] = [];\n                                                    }.bind(entryPoint),\n                                                    function() {\n                                                        promisesToResolve[this].forEach(\n                                                            (record) => {\n                                                                delete GET_REQUESTS_ON_HOLD_MAP[\n                                                                    record.requestIdentifier\n                                                                ];\n                                                                record.deferred.reject();\n                                                            }\n                                                        );\n                                                        promisesToResolve[this] = [];\n                                                    }.bind(entryPoint)\n                                                );\n                                        });\n                                }\n                            });\n                    });\n            } else {\n                deferred.reject(response);\n            }\n        });\n\n        return deferredPromise;\n    }\n\n    private isUrlNotRejected(url: string): boolean {\n        return !this.rejectedUrls.some((rejectedUrl) => {\n            return typeof rejectedUrl === 'string'\n                ? url.indexOf(rejectedUrl) === 0\n                : rejectedUrl.test(url);\n        });\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './retry.interceptor';\nexport * from './permission-error.interceptor';\nexport * from './unauthorized-error.interceptor';\nexport * from './retries';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Inject, Injectable, Injector } from '@angular/core';\nimport {\n    HttpEvent,\n    HttpHandler,\n    HttpInterceptor,\n    HttpRequest,\n    HttpResponse\n} from '@angular/common/http';\nimport { from, Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { HttpUtils } from '../../utils';\nimport { IAuthenticationService, IAuthToken, IStorageService } from '../../interfaces';\nimport { GET_REQUESTS_ON_HOLD_MAP } from './errors/unauthorized-error.interceptor';\nimport { I18N_RESOURCE_URI_TOKEN } from '../../constants';\n\n/**\n * @ngdoc service\n * @name @smartutils.httpAuthInterceptor\n *\n * @description\n * Makes it possible to perform global authentication by intercepting requests before they are forwarded to the server\n * and responses before they are forwarded to the application code.\n *\n */\n@Injectable()\nexport class HttpAuthInterceptor implements HttpInterceptor {\n    constructor(\n        private authenticationService: IAuthenticationService,\n        private injector: Injector,\n        private httpUtils: HttpUtils,\n        @Inject(I18N_RESOURCE_URI_TOKEN) private I18N_RESOURCE_URI: string\n    ) {}\n    /**\n     * @ngdoc method\n     * @name @smartutils.httpAuthInterceptor#request\n     * @methodOf @smartutils.httpAuthInterceptor\n     *\n     * @description\n     * Interceptor method which gets called with a http config object, intercepts any request made using httpClient service.\n     * A call to any REST resource will be intercepted by this method, which then adds an authentication token to the request\n     * and then forwards it to the REST resource.\n     *\n     */\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (\n            !request.url.includes(this.I18N_RESOURCE_URI) &&\n            this.httpUtils.isCRUDRequest(request)\n        ) {\n            if (this.httpUtils.isGET(request) && GET_REQUESTS_ON_HOLD_MAP[request.url]) {\n                return new Observable((obj) => {\n                    GET_REQUESTS_ON_HOLD_MAP[request.url].then((body) => {\n                        obj.next(new HttpResponse<any>({ status: 200, body }));\n                    });\n                });\n            }\n            return from(this.authenticationService.filterEntryPoints(request.url)).pipe(\n                switchMap<string[], Observable<HttpEvent<any>>>((entryPoints: string[]) => {\n                    if (entryPoints && entryPoints.length) {\n                        return from<Observable<IAuthToken>>(\n                            this.injector.get(IStorageService).getAuthToken(entryPoints[0])\n                        ).pipe(\n                            switchMap<IAuthToken, Observable<HttpEvent<any>>>(\n                                (authToken: IAuthToken) => {\n                                    if (authToken) {\n                                        const authReq = request.clone({\n                                            headers: request.headers.set(\n                                                'Authorization',\n                                                authToken.token_type + ' ' + authToken.access_token\n                                            )\n                                        });\n                                        return next.handle(authReq);\n                                    } else {\n                                        return next.handle(request);\n                                    }\n                                }\n                            )\n                        );\n                    } else {\n                        return next.handle(request);\n                    }\n                })\n            );\n        } else {\n            return next.handle(request);\n        }\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { HttpErrorResponse, HttpEvent, HttpRequest } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport * as lodash from 'lodash';\nimport { from, Observable } from 'rxjs';\nimport { Deferred, PromiseUtils } from '../../utils';\nimport { Class } from '../../types';\nimport { IHttpErrorInterceptor } from './i-http-error.interceptor';\n\n/**\n * @ngdoc service\n * @name @smartutils.services:httpErrorInterceptorService\n *\n * @description\n * The httpErrorInterceptorService provides the functionality to add custom HTTP error interceptors.\n * An interceptor can be an {Object} or an Angular Factory and must be represented by a pair of functions:\n * - predicate(request, response) {Function} that must return true if the response is associated to the interceptor. Important: The predicate must be designed to fulfill a specific function. It must not be defined for generic use.\n * - responseError(request, response) {Function} function called if the current response error matches the predicate. It must return a {Promise} with the resolved or rejected response.\n *\n * Each time an HTTP request fails, the service iterates through all registered interceptors. It sequentially calls the responseError function for all interceptors that have a predicate returning true for the current response error. If an interceptor modifies the response, the next interceptor that is called will have the modified response.\n * The last interceptor added to the service will be the first interceptor called. This makes it possible to override default interceptors.\n * If an interceptor resolves the response, the service service stops the iteration.\n */\n@Injectable()\nexport class HttpErrorInterceptorService {\n    private _errorInterceptors: IHttpErrorInterceptor[] = [];\n\n    constructor(private injector: Injector, private promiseUtils: PromiseUtils) {}\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:httpErrorInterceptorService#addInterceptor\n     * @methodOf @smartutils.services:httpErrorInterceptorService\n     *\n     * @description\n     * Add a new error interceptor\n     *\n     * @param {Object|String} interceptor The interceptor {Object} or angular Factory\n     *\n     * @returns {Function} Function to call to unregister the interceptor from the service\n     *\n     * @example\n     * ```js\n     *      // Add a new interceptor with an instance of IHttpErrorInterceptor:\n     *      var unregisterCustomInterceptor = httpErrorInterceptorService.addInterceptor({\n     *          predicate: function(request, response) {\n     *              return response.status === 400;\n     *          },\n     *          responseError: function(request, response) {\n     *              alertService.showDanger({\n     *                  message: response.message\n     *              });\n     *              return Promise.reject(response);// FIXME: update doc\n     *          }\n     *      });\n     *\n     *      // Add an interceptor with a class of IHttpErrorInterceptor:\n     *      var unregisterCustomInterceptor = httpErrorInterceptorService.addInterceptor(CustomErrorInterceptor);\n     *\n     *      // Unregister the interceptor:\n     *      unregisterCustomInterceptor();\n     * ```\n     */\n\n    addInterceptors(\n        interceptorClasses: (Class<IHttpErrorInterceptor> | IHttpErrorInterceptor)[]\n    ): void {\n        interceptorClasses.forEach((InterceptorClass) => {\n            this.addInterceptor(InterceptorClass);\n        });\n    }\n\n    addInterceptor(_interceptor: Class<IHttpErrorInterceptor> | IHttpErrorInterceptor): () => void {\n        let interceptor: IHttpErrorInterceptor;\n        if (\n            (_interceptor as IHttpErrorInterceptor).predicate ||\n            (_interceptor as IHttpErrorInterceptor).responseError\n        ) {\n            interceptor = _interceptor as IHttpErrorInterceptor;\n        } else {\n            interceptor = this.injector.get(_interceptor);\n        }\n        this._validateInterceptor(interceptor);\n        this._errorInterceptors.unshift(interceptor);\n\n        return () => {\n            this._errorInterceptors.splice(this._errorInterceptors.indexOf(interceptor), 1);\n        };\n    }\n\n    responseError<T>(\n        request: HttpRequest<T>,\n        response: HttpErrorResponse\n    ): Observable<HttpEvent<T>> {\n        const matchingErrorInterceptors = this._errorInterceptors.filter(\n            (errorInterceptor) => errorInterceptor.predicate(request, response) === true\n        );\n        const _interceptorsDeferred: Deferred<any> = this.promiseUtils.defer<any>();\n        if (matchingErrorInterceptors.length) {\n            this._iterateErrorInterceptors<T>(\n                request.clone(),\n                lodash.cloneDeep(response),\n                matchingErrorInterceptors,\n                _interceptorsDeferred\n            );\n        } else {\n            _interceptorsDeferred.reject(response);\n        }\n        return from(_interceptorsDeferred.promise);\n    }\n\n    private _iterateErrorInterceptors<T>(\n        request: HttpRequest<T>,\n        response: HttpErrorResponse,\n        interceptors: IHttpErrorInterceptor[],\n        _interceptorsDeferred: Deferred<any>,\n        idx: number = 0\n    ): void {\n        if (idx === interceptors.length) {\n            _interceptorsDeferred.reject(response);\n        } else {\n            const iterateFn = this._iterateErrorInterceptors.bind(this);\n            // FIXME: fully convert this part to Observable chaining\n            Promise.resolve(interceptors[idx].responseError(request, response)).then(\n                (interceptedResponse) => {\n                    _interceptorsDeferred.resolve(interceptedResponse);\n                },\n                (interceptedResponse) => {\n                    iterateFn(\n                        request,\n                        interceptedResponse,\n                        interceptors,\n                        _interceptorsDeferred,\n                        ++idx\n                    );\n                }\n            );\n        }\n    }\n\n    /**\n     * @ignore\n     * Validate if the provided interceptor respects the Interface (predicate and responseError functions are mandatory).\n     * @param {Object|String} interceptor The interceptor {Object} or angular Factory\n     */\n    private _validateInterceptor(interceptor: IHttpErrorInterceptor) {\n        if (!interceptor.predicate || typeof interceptor.predicate !== 'function') {\n            throw new Error(\n                'httpErrorInterceptorService.addInterceptor.error.interceptor.has.no.predicate'\n            );\n        }\n        if (!interceptor.responseError || typeof interceptor.responseError !== 'function') {\n            throw new Error(\n                'httpErrorInterceptorService.addInterceptor.error.interceptor.has.no.responseError'\n            );\n        }\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport {\n    HttpErrorResponse,\n    HttpEvent,\n    HttpHandler,\n    HttpInterceptor,\n    HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { HttpUtils } from '../../utils';\nimport { HttpErrorInterceptorService } from './http-error-interceptor.service';\n\n/**\n * @ngdoc overview\n * @name httpErrorInterceptorServiceModule\n *\n * @description\n * This module provides the functionality to add custom HTTP error interceptors.\n * Interceptors are used to execute code each time an HTTP request fails.\n */\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n    constructor(\n        private httpErrorInterceptorService: HttpErrorInterceptorService,\n        private httpUtils: HttpUtils\n    ) {}\n\n    intercept<T>(request: HttpRequest<T>, next: HttpHandler): Observable<HttpEvent<T>> {\n        return next.handle(request).pipe(\n            catchError((error: HttpErrorResponse, caught: Observable<HttpEvent<T>>) => {\n                if (!this.httpUtils.isHTMLRequest(request, error)) {\n                    return this.httpErrorInterceptorService.responseError(request, error);\n                } else {\n                    return throwError(error);\n                }\n            })\n        );\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { APP_BOOTSTRAP_LISTENER, ComponentRef, ModuleWithProviders, NgModule } from '@angular/core';\nimport { Class } from '../../types';\nimport {\n    defaultRetryStrategyFactory,\n    exponentialRetryStrategyFactory,\n    linearRetryStrategyFactory,\n    DefaultRetryStrategy,\n    ExponentialRetry,\n    ExponentialRetryStrategy,\n    LinearRetry,\n    LinearRetryStrategy,\n    SimpleRetry\n} from './errors';\nimport { BackendInterceptor, HttpBackendService } from './backend';\nimport { FlawInjectionInterceptorModule } from './flaws';\nimport { HttpAuthInterceptor } from './http-auth.interceptor';\nimport { HttpErrorInterceptorService } from './http-error-interceptor.service';\nimport { HttpErrorInterceptor } from './http-error.interceptor';\nimport { IHttpErrorInterceptor } from './i-http-error.interceptor';\n\n/**\n * @ngdoc overview\n * @name httpInterceptorModule\n *\n * @description\n * This module provides the functionality to add custom HTTP error interceptors.\n * Interceptors are used to execute code each time an HTTP request fails.\n *\n */\n@NgModule({\n    imports: [FlawInjectionInterceptorModule],\n    providers: [\n        SimpleRetry,\n        LinearRetry,\n        ExponentialRetry,\n        {\n            provide: DefaultRetryStrategy,\n            useFactory: defaultRetryStrategyFactory,\n            deps: [SimpleRetry]\n        },\n        {\n            provide: ExponentialRetryStrategy,\n            useFactory: exponentialRetryStrategyFactory,\n            deps: [ExponentialRetry]\n        },\n        {\n            provide: LinearRetryStrategy,\n            useFactory: linearRetryStrategyFactory,\n            deps: [SimpleRetry]\n        },\n        HttpErrorInterceptorService,\n        HttpBackendService\n    ]\n})\nexport class HttpInterceptorModule {\n    static forRoot(\n        ...HttpErrorInterceptorClasses: Class<IHttpErrorInterceptor>[]\n    ): ModuleWithProviders {\n        return {\n            ngModule: HttpInterceptorModule,\n            providers: [\n                ...HttpErrorInterceptorClasses,\n                {\n                    provide: HTTP_INTERCEPTORS,\n                    useClass: HttpAuthInterceptor,\n                    multi: true\n                },\n                {\n                    provide: HTTP_INTERCEPTORS,\n                    useClass: HttpErrorInterceptor,\n                    multi: true\n                },\n                {\n                    provide: HTTP_INTERCEPTORS,\n                    useClass: BackendInterceptor,\n                    multi: true\n                },\n                {\n                    provide: APP_BOOTSTRAP_LISTENER,\n                    useFactory(httpErrorInterceptorService: HttpErrorInterceptorService) {\n                        httpErrorInterceptorService.addInterceptors(HttpErrorInterceptorClasses);\n\n                        return (component: ComponentRef<any>) => {\n                            // an initializer useFactory must return a function\n                        };\n                    },\n                    deps: [HttpErrorInterceptorService],\n                    multi: true\n                }\n            ]\n        };\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { HttpErrorResponse, HttpEvent, HttpRequest } from '@angular/common/http';\n\nexport interface BackendError {\n    message: string;\n    type: string;\n}\n\nexport enum StatusText {\n    UNKNOW_ERROR = 'Unknown Error'\n}\n\nexport interface IHttpErrorInterceptor<T = any> {\n    predicate(request: HttpRequest<T>, response: HttpErrorResponse): boolean;\n    responseError(\n        request: HttpRequest<T>,\n        response: HttpErrorResponse\n    ): Promise<HttpEvent<T> | HttpErrorResponse>;\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { HttpEvent, HttpResponse } from '@angular/common/http';\n\nexport class HttpPaginationResponseAdapter {\n    public static transform(ev: HttpEvent<any>): HttpEvent<any> {\n        const event = ev as HttpResponse<any>;\n        const isAdaptable: boolean = event && event.body && event.body.pagination;\n\n        if (!isAdaptable) {\n            return event;\n        }\n\n        const foundKey: string = Object.keys(event.body).find(\n            (key: string) => key !== 'pagination' && Array.isArray(event.body[key])\n        ) as string;\n\n        return foundKey\n            ? event.clone({ body: { ...event.body, results: event.body[foundKey] } })\n            : event;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HttpPaginationResponseAdapter } from '../../utils/http-pagination-response-adapter';\n\n/**\n * @ngdoc service\n * @name @smartutils.services:responseAdapterInterceptor\n *\n * @description\n *\n * Interceptor used to normalize the response of paginated resources. Some API consumers select data with 'result' and 'response' key.\n * This interceptor purpose is to adapt such payload.\n */\n\n@Injectable()\nexport class ResponseAdapterInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(map(HttpPaginationResponseAdapter.transform));\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './backend';\nexport * from './flaws';\nexport * from './errors';\nexport * from './http-interceptor.module';\nexport * from './i-http-error.interceptor';\nexport * from './http-error-interceptor.service';\nexport * from './response-adapter-interceptor.service';\n","/**\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lodash from 'lodash';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Page, Pageable, Payload, TypedMap } from '../../dtos';\nimport { URIBuilder } from '../../utils';\nimport { IRestOptions, IRestService, SearchParams } from './i-rest-service';\n\nexport type ObjectWithHeaders<T> = T & { headers?: HttpHeaders };\n\n/** @internal */\nexport class RestClient<T> implements IRestService<T> {\n    private readonly DEFAULT_HEADERS: TypedMap<string> = { 'x-requested-with': 'Angular' };\n    private readonly DEFAULT_OPTIONS: IRestOptions = { headers: {} };\n    // will activate response headers appending\n    private metadataActivated = false;\n\n    constructor(\n        private httpClient: HttpClient,\n        public readonly url: string,\n        private identifierName: string\n    ) {}\n\n    getById<S extends T = T>(\n        identifier: string,\n        options: IRestOptions = this.DEFAULT_OPTIONS\n    ): Promise<ObjectWithHeaders<S> | null> {\n        return this.addHeadersToBody(\n            this.httpClient.get<S>(`${this.url}/${identifier}`, {\n                headers: this.buildRequestHeaders(options.headers || {}),\n                observe: 'response'\n            })\n        ).toPromise();\n    }\n    get<S extends T = T>(\n        searchParams: SearchParams,\n        options: IRestOptions = this.DEFAULT_OPTIONS\n    ): Promise<ObjectWithHeaders<S> | null> {\n        const params = this.convertToTypeMapOfString(searchParams);\n        return this.addHeadersToBody(\n            this.httpClient.get<S>(this.interpolateParamsInURL(this.url, params), {\n                params: this.formatQueryString(\n                    this.determineTrueQueryStringParams(this.url, searchParams)\n                ),\n                headers: this.buildRequestHeaders(options.headers || {}),\n                observe: 'response'\n            })\n        ).toPromise();\n    }\n    query<S extends T = T>(\n        searchParams?: SearchParams,\n        options: IRestOptions = this.DEFAULT_OPTIONS\n    ): Promise<ObjectWithHeaders<S[]>> {\n        const params = searchParams ? this.convertToTypeMapOfString(searchParams) : searchParams;\n        return this.addHeadersToBody(\n            this.httpClient.get<S[]>(this.interpolateParamsInURL(this.url, params), {\n                params: this.formatQueryString(\n                    this.determineTrueQueryStringParams(this.url, searchParams)\n                ),\n                headers: this.buildRequestHeaders(options.headers || {}),\n                observe: 'response'\n            })\n        )\n            .pipe(map((arr: S[] | null) => arr || []))\n            .toPromise();\n    }\n    page<S extends T = T>(\n        pageable: Pageable,\n        options: IRestOptions = this.DEFAULT_OPTIONS\n    ): Promise<ObjectWithHeaders<Page<S>>> {\n        return (\n            this.addHeadersToBody(\n                this.httpClient.get<Page<S>>(this.interpolateParamsInURL(this.url, pageable), {\n                    params: this.formatQueryString(\n                        this.determineTrueQueryStringParams(this.url, pageable)\n                    ),\n                    headers: this.buildRequestHeaders(options.headers || {}),\n                    observe: 'response'\n                })\n            )\n                // force typing to accept the fact that a page is never null\n                .pipe(map((arr: Page<S> | null) => (arr as any) as Page<S>))\n                .toPromise()\n        );\n    }\n    update<S extends T = T>(\n        payload: Payload,\n        options: IRestOptions = this.DEFAULT_OPTIONS\n    ): Promise<S> {\n        return this.performIdentifierCheck(payload)\n            .then(() => this.buildUrlWithIdentifier(payload))\n            .then((url: string) =>\n                this.httpClient\n                    .put<S>(url, payload, {\n                        headers: this.buildRequestHeaders(options.headers || {})\n                    })\n                    .toPromise()\n            );\n    }\n    save<S extends T = T>(\n        payload: Payload,\n        options: IRestOptions = this.DEFAULT_OPTIONS\n    ): Promise<S> {\n        return this.httpClient\n            .post<S>(this.interpolateParamsInURL(this.url, payload), payload, {\n                headers: this.buildRequestHeaders(options.headers || {})\n            })\n            .toPromise();\n    }\n\n    patch<S extends T = T>(\n        payload: Payload,\n        options: IRestOptions = this.DEFAULT_OPTIONS\n    ): Promise<S> {\n        return this.performIdentifierCheck(payload)\n            .then(() => this.buildUrlWithIdentifier(payload))\n            .then((url: string) =>\n                this.httpClient\n                    .patch<S>(url, payload, {\n                        headers: this.buildRequestHeaders(options.headers || {})\n                    })\n                    .toPromise()\n            );\n    }\n\n    remove(payload: string | Payload, options: IRestOptions = this.DEFAULT_OPTIONS): Promise<any> {\n        return this.performIdentifierCheck(payload)\n            .then(() => this.buildUrlWithIdentifier(payload))\n            .then((url: string) =>\n                this.httpClient\n                    .delete(url, { headers: this.buildRequestHeaders(options.headers || {}) })\n                    .toPromise()\n            );\n    }\n\n    ///////////////////////////////////////////\n    /// INTERNAL METHODS NEEDED FOR GATEWAY ///\n    ///////////////////////////////////////////\n\n    getMethodForSingleInstance = (\n        name: 'getById' | 'get' | 'update' | 'save' | 'remove' | 'patch'\n    ): ((params: any) => Promise<any>) => {\n        switch (name) {\n            case 'getById':\n                return (id: string, options: IRestOptions = this.DEFAULT_OPTIONS) =>\n                    this.getById(id, options);\n            case 'get':\n                return (searchParams: SearchParams, options: IRestOptions = this.DEFAULT_OPTIONS) =>\n                    this.get(searchParams, options);\n            case 'update':\n                return (payload: Payload, options: IRestOptions = this.DEFAULT_OPTIONS) =>\n                    this.update(payload, options);\n            case 'save':\n                return (payload: Payload, options: IRestOptions = this.DEFAULT_OPTIONS) =>\n                    this.save(payload, options);\n            case 'patch':\n                return (payload: Payload, options: IRestOptions = this.DEFAULT_OPTIONS) =>\n                    this.patch(payload, options);\n            case 'remove':\n                return (payload: string | Payload, options: IRestOptions = this.DEFAULT_OPTIONS) =>\n                    this.remove(payload, options);\n        }\n    };\n    getMethodForArray = (name: 'query'): ((params: SearchParams) => Promise<T[] | null>) => {\n        switch (name) {\n            case 'query':\n                return (params: SearchParams, options: IRestOptions = this.DEFAULT_OPTIONS) =>\n                    this.query(params, options);\n        }\n    };\n    activateMetadata(): void {\n        this.metadataActivated = true;\n    }\n\n    private convertToTypeMapOfString(searchParams: SearchParams): TypedMap<string> {\n        return lodash.mapValues(searchParams, (val: any) => String(val));\n    }\n\n    private formatQueryString(\n        _params: SearchParams | Pageable\n    ): {\n        [param: string]: string | string[];\n    } {\n        return this.sortByKeys(_params);\n    }\n    private addHeadersToBody<BodyType>(\n        observable: Observable<HttpResponse<BodyType>>\n    ): Observable<ObjectWithHeaders<BodyType> | null> {\n        return observable.pipe(\n            map((response: HttpResponse<ObjectWithHeaders<BodyType>>) => {\n                const data = response.body;\n\n                if (this.metadataActivated && data) {\n                    // used by @Cached annotation\n                    data.headers = response.headers;\n                }\n                return data;\n            })\n        );\n    }\n\n    /*\n     * interpolation URL placeholders interpolation with potential matches in queryString\n     */\n    private interpolateParamsInURL(_url: string, payload?: string | TypedMap<any>): string {\n        // only keep params to be found in the URI or query params\n        if (payload && typeof payload !== 'string') {\n            return new URIBuilder(_url)\n                .replaceParams(payload)\n                .sanitize()\n                .build();\n        } else {\n            return _url;\n        }\n    }\n\n    /*\n     * remove from queryString any param needed for URL placeholders interpolation\n     */\n    private determineTrueQueryStringParams(\n        url: string,\n        payload?: string | TypedMap<any>\n    ): TypedMap<any> {\n        return typeof payload === 'object'\n            ? Object.keys(payload).reduce((prev: Payload, next: string) => {\n                  if (\n                      !new RegExp(':' + next + '/').test(url) &&\n                      !new RegExp(':' + next + '$').test(url) &&\n                      !new RegExp(':' + next + '&').test(url) &&\n                      !lodash.isNil(payload[next])\n                  ) {\n                      prev[next] = payload[next];\n                  }\n                  return prev;\n              }, {})\n            : {};\n    }\n\n    private sortByKeys(obj: TypedMap<any>) {\n        const keys = lodash.sortBy(lodash.keys(obj), (key: string) => {\n            return key;\n        });\n\n        return lodash.zipObject(\n            keys,\n            lodash.map(keys, (key: string) => {\n                return obj[key];\n            })\n        );\n    }\n\n    private performIdentifierCheck(payload: string | Payload): Promise<void> {\n        const identifier = typeof payload === 'string' ? payload : payload[this.identifierName];\n\n        if (!identifier) {\n            return Promise.reject(\n                'no data was found under the ' +\n                    identifier +\n                    ' field of object ' +\n                    JSON.stringify(payload) +\n                    ', it is necessary for update and remove operations'\n            );\n        }\n\n        return Promise.resolve();\n    }\n\n    private buildUrlWithIdentifier(payload: string | Payload): Promise<string> {\n        const identifier = typeof payload === 'string' ? payload : payload[this.identifierName];\n        let url = this.interpolateParamsInURL(`${this.url}`, payload);\n\n        url =\n            url.includes('?') || this.url.includes(':' + this.identifierName)\n                ? url\n                : `${url}/${identifier}`;\n\n        return Promise.resolve(url);\n    }\n\n    private buildRequestHeaders(headers: TypedMap<string>): HttpHeaders {\n        return new HttpHeaders({ ...this.DEFAULT_HEADERS, ...headers });\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lodash from 'lodash';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IRestServiceFactory } from './i-rest-service.factory';\nimport { IRestService } from './i-rest-service';\nimport { RestClient } from './rest-client';\nimport { LogService } from '../log.service';\n\n/** @internal */\n@Injectable()\nexport class RestServiceFactory implements IRestServiceFactory {\n    static setGlobalBasePath(globalBasePath: string): void {\n        if (!RestServiceFactory.globalBasePath) {\n            RestServiceFactory.globalBasePath = globalBasePath;\n        } else {\n            RestServiceFactory.logService.warn(\n                'The value of a global base path was already set. ' +\n                    'Update is not possible, the value remained unchanged!'\n            );\n        }\n    }\n\n    static getGlobalBasePath(): string {\n        return RestServiceFactory.globalBasePath ? RestServiceFactory.globalBasePath : '';\n    }\n\n    private static globalBasePath: string | null = null;\n    private static logService: LogService = new LogService();\n    private map = new Map();\n    private basePath: string | null = null;\n    private DOMAIN: string | null = null;\n    private IDENTIFIER: string = 'identifier';\n\n    constructor(private httpClient: HttpClient) {}\n\n    setDomain(DOMAIN: string): void {\n        this.DOMAIN = DOMAIN;\n    }\n\n    setBasePath(basePath: string): void {\n        this.basePath = basePath;\n    }\n\n    get<T>(uri: string, identifier: string = this.IDENTIFIER): IRestService<T> {\n        if (this.map.has(uri + identifier)) {\n            return this.map.get(uri + identifier);\n        }\n\n        if (!/^https?\\:\\/\\//.test(uri)) {\n            const newBasePath: string | null = this.getNewBasePath();\n            const basePathURI: string = lodash.isEmpty(newBasePath)\n                ? uri\n                : newBasePath + (/^\\//.test(uri) ? uri : `/${uri}`);\n\n            uri = this.shouldAppendDomain(uri) ? `${this.DOMAIN}/${uri}` : basePathURI;\n        }\n\n        const restClient: RestClient<T> = new RestClient<T>(this.httpClient, uri, identifier);\n        this.map.set(uri + identifier, restClient);\n        return restClient;\n    }\n\n    private shouldAppendDomain(uri: string): boolean {\n        return !!this.DOMAIN && !/^\\//.test(uri);\n    }\n\n    private getNewBasePath(): string | null {\n        return this.basePath ? this.basePath : RestServiceFactory.globalBasePath;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Page, Pageable, Payload } from '../../dtos';\nimport { Cached, InvalidateCache } from '../cache';\nimport { IRestOptions, IRestService, IRestServiceFactory, SearchParams } from '.';\n\n/**\n * @ngdoc service\n * @name @smartutils.service:AbstractCachedRestService\n *\n * @description\n * Base class to implement Cache enabled {@link @smartutils.interfaces:IRestService IRestServices}.\n * <br/>Implementing classes just need declare a class level {@link @smartutils.object:@CacheConfig @CacheConfig} annotation\n * with at least one {@link @smartutils.object:CacheAction CacheAction} and one {@link @smartutils.object:EvictionTag EvictionTag}.\n * <br/>Cache policies called by the set of {@link @smartutils.object:CacheAction CacheActions} will have access to\n * REST call response headers being added to the response under \"headers\" property.\n * <br/>Those headers are then stripped from the response.\n *\n * <h2>Usage</h2>\n * <pre>\n * &#64;CacheConfig({actions: [rarelyChangingContent], tags: [userEvictionTag]})\n * &#64;SeInjectable()\n * export class ProductCatalogRestService extends AbstractCachedRestService<IBaseCatalogs> {\n * \tconstructor(restServiceFactory: IRestServiceFactory) {\n * \t\tsuper(restServiceFactory, '/productcatalogs');\n * \t}\n * }\n * </pre>\n */\nexport abstract class AbstractCachedRestService<T> implements IRestService<T> {\n    protected innerRestService: IRestService<T>;\n\n    constructor(restServiceFactory: IRestServiceFactory, uri: string, identifier?: string) {\n        this.innerRestService = restServiceFactory.get(uri, identifier);\n        this.innerRestService.activateMetadata && this.innerRestService.activateMetadata();\n    }\n\n    @StripResponseHeaders\n    @Cached()\n    getById<S extends T = T>(identifier: string, options?: IRestOptions): Promise<S | null> {\n        return this.innerRestService.getById<S>(identifier, options);\n    }\n\n    @StripResponseHeaders\n    @Cached()\n    get<S extends T = T>(searchParams?: SearchParams, options?: IRestOptions): Promise<S | null> {\n        return this.innerRestService.get(searchParams, options);\n    }\n\n    @StripResponseHeaders\n    @Cached()\n    query<S extends T = T>(searchParams: SearchParams, options?: IRestOptions): Promise<S[]> {\n        return this.innerRestService.query(searchParams, options);\n    }\n\n    @StripResponseHeaders\n    @Cached()\n    page<S extends T = T>(searchParams: Pageable, options?: IRestOptions): Promise<Page<S>> {\n        return this.innerRestService.page(searchParams, options);\n    }\n\n    @StripResponseHeaders\n    @InvalidateCache()\n    update<S extends T = T>(payload: Payload, options?: IRestOptions): Promise<S> {\n        return this.innerRestService.update(payload, options);\n    }\n\n    @StripResponseHeaders\n    @InvalidateCache()\n    patch<S extends T = T>(payload: Payload, options?: IRestOptions): Promise<S> {\n        return this.innerRestService.patch(payload, options);\n    }\n\n    @InvalidateCache()\n    remove<S extends T = T>(payload: Payload, options?: IRestOptions): Promise<void> {\n        return this.innerRestService.remove(payload, options);\n    }\n\n    @StripResponseHeaders\n    save<S extends T = T>(payload: Payload, options?: IRestOptions): Promise<S> {\n        return this.innerRestService.save(payload, options);\n    }\n}\n\nexport function StripResponseHeaders(\n    target: any,\n    propertyName: string,\n    descriptor: TypedPropertyDescriptor<(...x: any[]) => any>\n) {\n    const originalMethod = descriptor.value;\n\n    if (originalMethod) {\n        descriptor.value = function() {\n            return originalMethod\n                .apply(this, Array.prototype.slice.call(arguments))\n                .then((response: any) => {\n                    delete response.headers;\n                    return response;\n                });\n        };\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Injectable, Injector } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { IAuthToken } from '../../interfaces';\nimport { Deferred, PromiseUtils, WindowUtils } from '../../utils';\n\nconst SSO_DIALOG_MARKER = 'sso';\n\nenum SSO_PROPERTIES {\n    SSO_CLIENT_ID = 'SSO_CLIENT_ID',\n    SSO_AUTHENTICATION_ENTRY_POINT = 'SSO_AUTHENTICATION_ENTRY_POINT',\n    SSO_LOGOUT_ENTRY_POINT = 'SSO_LOGOUT_ENTRY_POINT',\n    SSO_OAUTH2_AUTHENTICATION_ENTRY_POINT = 'SSO_OAUTH2_AUTHENTICATION_ENTRY_POINT'\n}\n\nconst CHILD_SMARTEDIT_SENDING_AUTHTOKEN = 'ssoAuthenticate';\nconst CHILD_SMARTEDIT_SENDING_AUTH_ERROR = 'ssoAuthenticateError';\n\nconst SSODIALOG_WINDOW = 'SSODIALOG_WINDOW';\n/*\n * Helper to initiate a SAML /SSO autentication sequence through a pop-up\n * (because the sequence involves auto-submiting html form at some point that causes a redirect and hence would\n * loose app context if not executed in a different window)\n * that ultimately loads the app again which in turn will detect its context and do the following:\n * - will not continue loading\n * - wil post the loginToken to the /authenticate end point to retrieve oAuth access\n * - will send back to parent (through postMessage) the retrieved oAuth access\n * - will close;\n */\n@Injectable()\nexport class SSOAuthenticationHelper {\n    // static in order to be shared by multiple instances\n    private static lastAuthenticatedWithSSO = false;\n\n    private readonly logoutIframeId = 'logoutIframe';\n\n    private deferred: Deferred<IAuthToken> | null = null;\n\n    constructor(\n        private windowUtils: WindowUtils,\n        private promiseUtils: PromiseUtils,\n        private httpClient: HttpClient,\n        private injector: Injector\n    ) {\n        this.listenForAuthTokenBeingSentBack();\n    }\n\n    /*\n     * Initiates the SSO dialog through a pop-up\n     */\n    launchSSODialog(): Promise<IAuthToken> {\n        this.deferred = this.promiseUtils.defer<IAuthToken>();\n\n        const ssoAuthenticationEntryPoint =\n            this.injector.get(SSO_PROPERTIES.SSO_AUTHENTICATION_ENTRY_POINT) +\n            this.getSSOContextPath();\n        this.window.open(\n            ssoAuthenticationEntryPoint,\n            SSODIALOG_WINDOW,\n            'toolbar=no,scrollbars=no,resizable=no,top=200,left=200,width=1000,height=800'\n        );\n\n        return this.deferred.promise;\n    }\n\n    /*\n     * SSO happen in a popup window launched by AuthenticationHelper#launchSSODialog().\n     * Once SSO is successful, a 'LoginToken' cookie is present, this is a pre-requisite for doing a POST to the /authenticate\n     * endpoint that will return the Authorization bearer token.\n     * This bearer is then sent with postMessage to the opener window, i.e. the SmartEdit application that will resume the pending 401 request.\n     */\n    completeDialog(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.httpClient\n                .post<IAuthToken>(\n                    this.injector.get(SSO_PROPERTIES.SSO_OAUTH2_AUTHENTICATION_ENTRY_POINT),\n                    { client_id: this.injector.get(SSO_PROPERTIES.SSO_CLIENT_ID) }\n                )\n                .subscribe(\n                    (authToken) => {\n                        this.window.opener.postMessage(\n                            {\n                                eventId: CHILD_SMARTEDIT_SENDING_AUTHTOKEN,\n                                authToken\n                            },\n                            this.document.location.origin\n                        );\n                        this.window.close();\n                        resolve();\n                    },\n                    (httpErrorResponse: HttpErrorResponse) => {\n                        const clonableHttpErrorResponse = {\n                            error: httpErrorResponse.error,\n                            status: httpErrorResponse.status\n                        };\n                        this.window.opener.postMessage(\n                            {\n                                eventId: CHILD_SMARTEDIT_SENDING_AUTH_ERROR,\n                                error: clonableHttpErrorResponse\n                            },\n                            this.document.location.origin\n                        );\n                        this.window.close();\n                        reject();\n                    }\n                );\n        });\n    }\n\n    /*\n     * case of the App being a popup only meant for authentication and spun up buy the main app\n     */\n    isSSODialog(): boolean {\n        return (\n            this.window.name === SSODIALOG_WINDOW &&\n            new RegExp(`[?&]${SSO_DIALOG_MARKER}`).test(location.search)\n        );\n    }\n\n    /*\n     * case of:\n     * - the App called from another app in an SSO context and that should therefore auto-authenticate with SSO\n     * - last manual authentication was with SSO\n     */\n    isAutoSSOMain(): boolean {\n        return (\n            SSOAuthenticationHelper.lastAuthenticatedWithSSO ||\n            (this.window.name !== SSODIALOG_WINDOW &&\n                new RegExp(`[?&]${SSO_DIALOG_MARKER}`).test(location.search))\n        );\n    }\n\n    logout(): any {\n        let logoutIframe = this.logoutIframe;\n        if (!logoutIframe) {\n            logoutIframe = this.document.createElement('iframe');\n            logoutIframe.id = this.logoutIframeId;\n            logoutIframe.style.display = 'none';\n            this.document.body.appendChild(logoutIframe);\n        }\n        logoutIframe.src = this.injector.get(SSO_PROPERTIES.SSO_LOGOUT_ENTRY_POINT);\n\n        SSOAuthenticationHelper.lastAuthenticatedWithSSO = false;\n        this.document.location.href = this.document.location.href.replace(\n            this.getSSOContextPath(),\n            this.document.location.pathname\n        );\n    }\n\n    // context path of app in an SSO mode\n    private getSSOContextPath() {\n        return `${this.document.location.pathname}?${SSO_DIALOG_MARKER}`;\n    }\n\n    private listenForAuthTokenBeingSentBack(): void {\n        this.window.addEventListener(\n            'message',\n            (event: MessageEvent) => {\n                if (event.origin !== document.location.origin) {\n                    return;\n                }\n\n                this.logoutIframe && this.logoutIframe.remove();\n\n                if (event.data.eventId === CHILD_SMARTEDIT_SENDING_AUTHTOKEN) {\n                    SSOAuthenticationHelper.lastAuthenticatedWithSSO = true;\n                    this.deferred && this.deferred.resolve(event.data.authToken);\n                } else if (event.data.eventId === CHILD_SMARTEDIT_SENDING_AUTH_ERROR) {\n                    this.deferred && this.deferred.reject(event.data.error);\n                }\n            },\n            false\n        );\n    }\n\n    private get window() {\n        return this.windowUtils.getWindow();\n    }\n\n    private get document(): Document {\n        return this.window.document;\n    }\n\n    private get logoutIframe(): HTMLIFrameElement | null {\n        return this.document.querySelector<HTMLIFrameElement>(`iframe#${this.logoutIframeId}`);\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { TypedMap } from '../../dtos';\n\nexport type TranslationMap = TypedMap<string>;\n\n/**\n * @module blabla\n */\nexport abstract class ITranslationsFetchService {\n    abstract get(lang: string): Promise<TranslationMap>;\n\n    abstract isReady(): Promise<boolean>;\n\n    abstract waitToBeReady(): Promise<void>;\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n\nexport enum SUPPORTED_BROWSERS {\n    IE,\n    CHROME,\n    FIREFOX,\n    EDGE,\n    SAFARI,\n    UNKNOWN\n}\nexport class BrowserService {\n    getCurrentBrowser(): SUPPORTED_BROWSERS {\n        /* forbiddenNameSpaces window as any:false */\n        const anyWindow = window as any;\n        let browser = SUPPORTED_BROWSERS.UNKNOWN;\n        if (typeof anyWindow.InstallTrigger !== 'undefined') {\n            browser = SUPPORTED_BROWSERS.FIREFOX;\n        } else if (/*@cc_on!@*/ false || !!(document as any).documentMode) {\n            browser = SUPPORTED_BROWSERS.IE;\n        } else if (!!anyWindow.StyleMedia) {\n            browser = SUPPORTED_BROWSERS.EDGE;\n        } else if (!!anyWindow.chrome && !!anyWindow.chrome.webstore) {\n            browser = SUPPORTED_BROWSERS.CHROME;\n        } else if (this._isSafari()) {\n            browser = SUPPORTED_BROWSERS.SAFARI;\n        }\n\n        return browser;\n    }\n\n    /*\n\t\tIt is always better to detect a browser via features. Unfortunately, it's becoming really hard to identify \n\t\tSafari, since newer versions do not match the previous ones. Thus, we have to rely on User Agent as the last\n\t\toption. \n\t*/\n    _isSafari = () => {\n        // return this.getCurrentBrowser() === SUPPORTED_BROWSERS.SAFARI;\n        const userAgent = window.navigator.userAgent;\n        const vendor = window.navigator.vendor;\n\n        const testFeature = /constructor/i.test(\n            function HTMLElementConstructor() {\n                //\n            }.toString()\n        );\n        const testUserAgent =\n            vendor && vendor.indexOf('Apple') > -1 && userAgent && !userAgent.match('CriOS');\n\n        return testFeature || testUserAgent;\n    };\n\n    isIE = () => {\n        return this.getCurrentBrowser() === SUPPORTED_BROWSERS.IE;\n    };\n\n    isFF = () => {\n        return this.getCurrentBrowser() === SUPPORTED_BROWSERS.FIREFOX;\n    };\n\n    isSafari = () => {\n        return this.getCurrentBrowser() === SUPPORTED_BROWSERS.SAFARI;\n    };\n\n    getBrowserLocale(): string {\n        const locale = window.navigator.language.split('-');\n        return locale.length === 1 ? locale[0] : locale[0] + '_' + locale[1].toUpperCase();\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { stringUtils } from '../../utils';\n/** @internal */\nexport class FingerPrintingService {\n    private readonly _fingerprint: string = stringUtils.encode(\n        this.getUserAgent() +\n            this.getPlugins() +\n            this.hasJava() +\n            this.hasFlash() +\n            this.hasLocalStorage() +\n            this.hasSessionStorage() +\n            this.hasCookie() +\n            this.getTimeZone() +\n            this.getLanguage() +\n            this.getSystemLanguage() +\n            this.hasCanvas()\n    );\n\n    /**\n     * Get unique browser fingerprint information encoded in Base64.\n     */\n    getFingerprint(): string {\n        return this._fingerprint;\n    }\n\n    private getUserAgent(): string {\n        return navigator.userAgent;\n    }\n\n    private getPlugins(): string {\n        const plugins = [];\n        for (let i = 0, l = navigator.plugins.length; i < l; i++) {\n            if (navigator.plugins[i]) {\n                plugins.push(navigator.plugins[i].name);\n            }\n        }\n        return plugins.join(',');\n    }\n\n    private hasJava(): boolean {\n        return navigator.javaEnabled();\n    }\n\n    private hasFlash(): boolean {\n        return !!navigator.plugins.namedItem('Shockwave Flash');\n    }\n\n    private hasLocalStorage(): boolean {\n        try {\n            const hasLs = 'test-has-ls';\n            localStorage.setItem(hasLs, hasLs);\n            localStorage.removeItem(hasLs);\n            return true;\n        } catch (exception) {\n            return false;\n        }\n    }\n\n    private hasSessionStorage(): boolean {\n        try {\n            const hasSs = 'test-has-ss';\n            sessionStorage.setItem(hasSs, hasSs);\n            sessionStorage.removeItem(hasSs);\n            return true;\n        } catch (exception) {\n            return false;\n        }\n    }\n\n    private hasCookie(): boolean {\n        return navigator.cookieEnabled;\n    }\n\n    private getTimeZone(): string {\n        return String(String(new Date()).split('(')[1]).split(')')[0];\n    }\n\n    private getLanguage(): string {\n        return navigator.language;\n    }\n\n    private getSystemLanguage(): string {\n        return window.navigator.language;\n    }\n\n    private hasCanvas(): boolean {\n        try {\n            const elem = document.createElement('canvas');\n            return !!(elem.getContext && elem.getContext('2d'));\n        } catch (e) {\n            return false;\n        }\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './BrowserService';\nexport * from './FingerPrintingService';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Injectable } from '@angular/core';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { from, Observable } from 'rxjs';\nimport { TypedMap } from '../../dtos';\nimport { ITranslationsFetchService } from './i-translations-fetch.service';\n\n/* @internal */\n@Injectable()\nexport class TranslateHttpLoader implements TranslateLoader {\n    constructor(private translationsFetchService: ITranslationsFetchService) {}\n\n    /**\n     * Gets the translations from the server\n     */\n    public getTranslation(lang: string): Observable<TypedMap<string>> {\n        return from(this.translationsFetchService.get(lang));\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { APP_INITIALIZER, ComponentRef, ModuleWithProviders, NgModule } from '@angular/core';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { moduleUtils } from '../../utils';\nimport { BrowserService } from '../../services/browser';\nimport { IStorageService } from '../../interfaces';\nimport { ITranslationsFetchService } from './i-translations-fetch.service';\nimport { TranslateHttpLoader } from './translate-http.loader';\n\n@NgModule({\n    imports: [\n        TranslateModule.forRoot({\n            isolate: false,\n            loader: {\n                provide: TranslateLoader,\n                useClass: TranslateHttpLoader\n            }\n        })\n    ],\n    exports: [TranslateModule]\n})\nexport class TranslationModule {\n    static forChild() {\n        return TranslateModule.forChild({\n            isolate: false,\n            loader: {\n                provide: TranslateLoader,\n                useClass: TranslateHttpLoader\n            }\n        });\n    }\n\n    static forRoot(\n        TranslationsFetchServiceClass: new (...args: any[]) => ITranslationsFetchService\n    ): ModuleWithProviders {\n        return {\n            ngModule: TranslationModule,\n            providers: [\n                {\n                    provide: ITranslationsFetchService,\n                    useClass: TranslationsFetchServiceClass\n                },\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory(\n                        translate: TranslateService,\n                        storageService: IStorageService,\n                        browserService: BrowserService\n                    ) {\n                        storageService\n                            .getValueFromLocalStorage('SELECTED_LANGUAGE', false)\n                            .then(\n                                (lang: { name: string; isoCode: string }) => {\n                                    return lang ? lang.isoCode : browserService.getBrowserLocale();\n                                },\n                                () => {\n                                    return browserService.getBrowserLocale();\n                                }\n                            )\n                            .then((lang: string) => {\n                                translate.setDefaultLang(lang);\n                                translate.use(lang);\n                            });\n\n                        return (component: ComponentRef<any>) => {\n                            // an initializer useFactory must return a function\n                        };\n                    },\n                    deps: [TranslateService, IStorageService, BrowserService],\n                    multi: true\n                }\n            ]\n        };\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './i-translations-fetch.service';\nexport * from './translation.module';\n","/**\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { InjectionToken } from '@angular/core';\n\nexport interface LoginDialogResource {\n    topLogoURL: string;\n    bottomLogoURL: string;\n}\n\nexport const LoginDialogResourceProvider: InjectionToken<LoginDialogResource> = new InjectionToken(\n    'LoginDialogResourceProvider'\n);\n","/**\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Component, HostBinding, Inject, OnInit, Optional } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { ModalRef } from '@fundamental-ngx/core';\n\nimport { StringUtils, UrlUtils } from '../../utils';\nimport { LogService } from '../../services/log.service';\nimport {\n    IAuthToken,\n    ILoginData,\n    ILoginModalFeedback,\n    ISessionService,\n    IStorageService\n} from '../../interfaces';\nimport { SSOAuthenticationHelper } from '../../services/authentication/sso-authentication.helper';\nimport { DEFAULT_AUTHENTICATION_ENTRY_POINT } from '../../constants';\nimport { LoginDialogResource, LoginDialogResourceProvider } from './login-dialog-resource-provider';\n\ninterface IRequestPayload {\n    username: string;\n    password: string;\n    grant_type: string;\n}\n\n@Component({\n    selector: 'su-login-dialog',\n    styleUrls: ['./login-dialog.component.scss'],\n    templateUrl: './login-dialog.component.html'\n})\nexport class LoginDialogComponent implements OnInit {\n    @HostBinding('class.su-login-dialog') hostClass: boolean = true;\n\n    public data: ILoginData = (null as unknown) as ILoginData;\n    public authURIKey: string = '';\n    public authURI: string = '';\n    public isFullScreen: boolean = false;\n    public ssoEnabled: boolean = false;\n    public form: FormGroup = new FormGroup({\n        username: new FormControl('', Validators.required),\n        password: new FormControl('', Validators.required)\n    });\n\n    constructor(\n        private modalRef: ModalRef,\n        private logService: LogService,\n        private httpClient: HttpClient,\n        private sessionService: ISessionService,\n        private storageService: IStorageService,\n        private stringUtils: StringUtils,\n        private urlUtils: UrlUtils,\n        private ssoAuthenticationHelper: SSOAuthenticationHelper,\n        @Optional() @Inject(LoginDialogResourceProvider) public resource: LoginDialogResource\n    ) {}\n\n    ngOnInit() {\n        this.data = this.modalRef.data || {};\n\n        this.authURI = this.data.authURI;\n\n        this.isFullScreen = this.data.isFullScreen as boolean;\n        this.ssoEnabled = (this.data.ssoEnabled as boolean) && this.isMainEndPoint();\n\n        this.storageService.removeAuthToken(this.authURI);\n\n        this.authURIKey = btoa(this.authURI).replace(/=/g, '');\n\n        if (this.ssoAuthenticationHelper.isAutoSSOMain()) {\n            this.signinWithSSO();\n        }\n    }\n\n    public signinWithSSO = (): Promise<ILoginModalFeedback> => {\n        this.form.setErrors(null);\n\n        return this.ssoAuthenticationHelper\n            .launchSSODialog()\n            .then(\n                (data: IAuthToken) => this.storeAccessToken(data),\n                (error: HttpErrorResponse) => this.APIAuthenticationFailureReportFactory(error)\n            )\n            .then((userHasChanged: boolean) => this.acceptUser(userHasChanged));\n    };\n\n    public signinWithCredentials(): Promise<ILoginModalFeedback> {\n        this.form.setErrors(null);\n\n        if (this.hasRequiredCredentialsError()) {\n            this.form.setErrors({\n                credentialsRequiredError: 'se.logindialogform.username.and.password.required'\n            });\n\n            return Promise.reject();\n        }\n\n        const payload = {\n            ...(this.data.clientCredentials || {}),\n            username: (this.form.get('username') as FormControl).value,\n            password: (this.form.get('password') as FormControl).value,\n            grant_type: 'password'\n        } as IRequestPayload;\n\n        return this.sendCredentials(payload)\n            .then(\n                (response: HttpResponse<IAuthToken> | IAuthToken) =>\n                    this.storeAccessToken(response),\n                (error) => this.APIAuthenticationFailureReportFactory(error)\n            )\n            .then((hasUserChanged: boolean) => this.acceptUser(hasUserChanged));\n    }\n\n    private isMainEndPoint(): boolean {\n        return DEFAULT_AUTHENTICATION_ENTRY_POINT === this.authURI;\n    }\n\n    private storeAccessToken(\n        response: HttpResponse<IAuthToken> | IAuthToken\n    ): PromiseLike<boolean> {\n        const token = response instanceof HttpResponse ? response.body : response;\n        this.storageService.storeAuthToken(this.authURI, token as IAuthToken);\n        this.logService.debug(`API Authentication Success: ${this.authURI}`);\n        return this.isMainEndPoint()\n            ? this.sessionService.hasUserChanged()\n            : Promise.resolve(false);\n    }\n\n    private sendCredentials = (payload: IRequestPayload): Promise<HttpResponse<IAuthToken>> => {\n        return this.httpClient\n            .request<IAuthToken>('POST', this.authURI, {\n                headers: new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded'),\n                body: this.urlUtils.getQueryString(payload).replace('?', ''),\n                observe: 'response'\n            })\n            .toPromise();\n    };\n\n    private APIAuthenticationFailureReportFactory(error: HttpErrorResponse): Promise<never> {\n        this.logService.debug(\n            `API Authentication Failure: ${this.authURI} status: ${error.status}`\n        );\n\n        this.form.setErrors({\n            asyncValidationError:\n                (error.error && this.stringUtils.sanitize(error.error.error_description)) ||\n                'se.logindialogform.oauth.error.default'\n        });\n\n        return Promise.reject(error);\n    }\n\n    private acceptUser(userHasChanged: boolean): Promise<ILoginModalFeedback> {\n        this.modalRef.close({\n            userHasChanged\n        });\n        if (this.isMainEndPoint()) {\n            this.sessionService.setCurrentUsername();\n        }\n        return Promise.resolve({ userHasChanged });\n    }\n\n    private hasRequiredCredentialsError(): boolean {\n        const username: AbstractControl = this.form.get('username') as AbstractControl;\n        const password: AbstractControl = this.form.get('password') as AbstractControl;\n\n        return (\n            (username.errors && username.errors.required) ||\n            (password.errors && password.errors.required)\n        );\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n\nimport { ISelectItem } from '../../interfaces/i-select-item';\nimport { ISelectAdapter } from '../select/i-select-adapter';\nimport { IToolingLanguage } from '../../services';\n\nexport class LanguageDropdownAdapter implements ISelectAdapter {\n    static transform(item: IToolingLanguage, id: number): ISelectItem<IToolingLanguage> {\n        return {\n            id,\n            label: item.name,\n            value: item\n        };\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n\nimport { TranslateService } from '@ngx-translate/core';\nimport { Inject, Injectable, Injector } from '@angular/core';\nimport {\n    EVENT_SERVICE,\n    LANGUAGE_SERVICE_CONSTANTS,\n    SELECTED_LANGUAGE,\n    SWITCH_LANGUAGE_EVENT\n} from '../constants';\nimport { Payload } from '../dtos';\nimport { IEventService, ILanguageServiceConstants, IStorageService } from '../interfaces';\nimport { BrowserService } from './browser';\nimport { rarelyChangingContent, Cached } from './cache';\nimport { LogService } from './log.service';\nimport { IRestService, IRestServiceFactory, RestServiceFactory } from './rest';\nimport { PromiseUtils } from '../utils';\n\n/**\n * @ngdoc interface\n * @name @smartutils.interfaces:ILanguage\n * @description\n * Interface for language information\n */\nexport interface ILanguage extends Payload {\n    active: boolean;\n    isocode: string;\n    name: string;\n    nativeName: string;\n    required: boolean;\n}\n\nexport interface IToolingLanguage extends Payload {\n    isoCode: string;\n    name: string;\n}\n\n/**\n * @ngdoc object\n * @name resourceLocationsModule.object:LANGUAGE_RESOURCE_URI\n *\n * @description\n * Resource URI of the languages REST service.\n */\n\n/**\n * @ngdoc service\n * @name @smartutils.services:LanguageService\n */\n\n@Injectable()\nexport class LanguageService {\n    constructor(\n        protected logService: LogService,\n        protected translateService: TranslateService,\n        protected promiseUtils: PromiseUtils,\n        @Inject(EVENT_SERVICE) protected eventService: IEventService,\n        protected browserService: BrowserService,\n        protected storageService: IStorageService,\n        protected injector: Injector,\n        @Inject(LANGUAGE_SERVICE_CONSTANTS)\n        protected languageServiceConstants: ILanguageServiceConstants\n    ) {}\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:LanguageService#getBrowserLanguageIsoCode\n     * @methodOf @smartutils.services:LanguageService\n     *\n     * @deprecated since 1808\n     *\n     * @description\n     * Uses the browser's current locale to determine the selected language ISO code.\n     *\n     * @returns {String} The language ISO code of the browser's currently selected locale.\n     */\n    getBrowserLanguageIsoCode(): string {\n        return window.navigator.language.split('-')[0];\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:LanguageService#getBrowserLocale\n     * @methodOf @smartutils.services:LanguageService\n     *\n     * @deprecated since 1808 - use browserService instead.\n     *\n     * @description\n     * determines the browser locale in the format en_US\n     *\n     * @returns {string} the browser locale\n     */\n    getBrowserLocale(): string {\n        return this.browserService.getBrowserLocale();\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:LanguageService#getResolveLocale\n     * @methodOf @smartutils.services:LanguageService\n     *\n     * @description\n     * Resolve the user preference tooling locale. It determines in the\n     * following order:\n     *\n     * 1. Check if the user has previously selected the language\n     * 2. Check if the user browser locale is supported in the system\n     *\n     * @returns {Promise<string>} the locale\n     */\n    getResolveLocale(): Promise<string> {\n        return this._getDefaultLanguage();\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:LanguageService#getResolveLocaleIsoCode\n     * @methodOf @smartutils.services:LanguageService\n     *\n     * @description\n     * Resolve the user preference tooling locale ISO code. i.e.: If the selected tooling language is 'en_US',\n     * the resolved value will be 'en'.\n     *\n     * @returns {Promise<string>} A promise that resolves to the isocode of the tooling language.\n     */\n    getResolveLocaleIsoCode(): Promise<string> {\n        return this.getResolveLocale().then((resolveLocale: string) => {\n            return this.convertBCP47TagToJavaTag(resolveLocale).split('_')[0];\n        });\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:LanguageService#getToolingLanguages\n     * @methodOf @smartutils.services:LanguageService\n     *\n     * @description\n     * Retrieves a list of language descriptors using REST calls to the i18n API.\n     *\n     * @returns {Promise<IToolingLanguage[]>} A promise that resolves to an array of IToolingLanguage.\n     */\n    @Cached({ actions: [rarelyChangingContent] })\n    getToolingLanguages(): Promise<IToolingLanguage[]> {\n        return this.i18nLanguageRestService\n            .get({})\n            .then((response) => {\n                return response!.languages;\n            })\n            .catch((error: any) => {\n                this.logService.error(\n                    'LanguageService.getToolingLanguages() - Error loading tooling languages'\n                );\n                return Promise.reject(error);\n            });\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:LanguageService#setSelectedToolingLanguage\n     * @methodOf @smartutils.services:LanguageService\n     *\n     * @description\n     * Set the user preference language in the storage service\n     *\n     * @param {IToolingLanguage} language the language object to be saved.\n     */\n    setSelectedToolingLanguage(language: IToolingLanguage): void {\n        this.storageService.setValueInLocalStorage(SELECTED_LANGUAGE, language, false);\n        this.translateService.use(language.isoCode);\n        this.setApplicationTitle();\n        this.eventService.publish(SWITCH_LANGUAGE_EVENT, {\n            isoCode: language.isoCode\n        });\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:LanguageService#registerSwitchLanguage\n     * @methodOf @smartutils.services:LanguageService\n     *\n     * @description\n     * Register a callback function to the gateway in order to switch the tooling language\n     */\n    registerSwitchLanguage(): void {\n        this.eventService.subscribe<IToolingLanguage>(\n            SWITCH_LANGUAGE_EVENT,\n            (eventId: string, language?: IToolingLanguage) => {\n                if (this.translateService.currentLang !== language!.isoCode) {\n                    this.translateService.use(language!.isoCode);\n                }\n            }\n        );\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:LanguageService#convertBCP47TagToJavaTag\n     * @methodOf @smartutils.services:LanguageService\n     *\n     * @description\n     * Method converts the BCP47 language tag representing the locale to the default java representation.\n     * For example, method converts \"en-US\" to \"en_US\".\n     *\n     * @param {string} languageTag the language tag to be converted.\n     *\n     * @returns {string} the languageTag in java representation\n     */\n    convertBCP47TagToJavaTag(languageTag: string): string {\n        return !!languageTag ? languageTag.replace(/-/g, '_') : languageTag;\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:LanguageService#convertJavaTagToBCP47Tag\n     * @methodOf @smartutils.services:LanguageService\n     *\n     * @description\n     * Method converts the default java language tag representing the locale to the BCP47 representation.\n     * For example, method converts \"en_US\" to \"en-US\".\n     *\n     * @param {string} languageTag the language tag to be converted.\n     *\n     * @returns {string} the languageTag in BCP47 representation\n     */\n    convertJavaTagToBCP47Tag(languageTag: string): string {\n        return !!languageTag ? languageTag.replace(/_/g, '-') : languageTag;\n    }\n\n    protected _getDefaultLanguage(): Promise<string> {\n        return this.storageService.getValueFromLocalStorage(SELECTED_LANGUAGE, false).then(\n            (lang: { name: string; isoCode: string }) => {\n                return lang ? lang.isoCode : this.browserService.getBrowserLocale();\n            },\n            () => {\n                return this.browserService.getBrowserLocale();\n            }\n        );\n    }\n\n    protected setApplicationTitle() {\n        this.translateService.get('se.application.name').subscribe((pageTitle: string) => {\n            document.title = pageTitle;\n        });\n    }\n\n    protected get i18nLanguageRestService(): IRestService<{ languages: IToolingLanguage[] }> {\n        return this.injector\n            .get<IRestServiceFactory>(RestServiceFactory)\n            .get<{ languages: IToolingLanguage[] }>(\n                this.languageServiceConstants.I18N_LANGUAGES_RESOURCE_URI\n            );\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n\nimport { ISelectItem } from '../../interfaces';\nimport { IToolingLanguage } from '../../services';\n\nexport enum LanguageSortStrategy {\n    Default = 'default',\n    None = 'none'\n}\nexport interface ILanguageSortConfig {\n    strategy: LanguageSortStrategy;\n}\n\n// @dynamic\nexport class LanguageDropdownHelper {\n    static findSelectLanguageWithIsoCodePredicate(\n        isoCode: string\n    ): (item: ISelectItem<IToolingLanguage>) => boolean {\n        return (item: ISelectItem<IToolingLanguage>) => item.value.isoCode === isoCode;\n    }\n\n    /**\n     * Finds the language with a specified isoCode.\n     *\n     * @param {string} isoCode\n     * @param {IToolingLanguage[]} languages\n     * @returns {IToolingLanguage}\n     */\n    static findLanguageWithIsoCode(\n        isoCode: string,\n        languages: IToolingLanguage[]\n    ): IToolingLanguage {\n        return languages.find((language) => language.isoCode === isoCode) as IToolingLanguage;\n    }\n\n    /**\n     * Returns an ordered language array by name and sets the selected language at the beginning.\n     *\n     * @param {IToolingLanguage} selectedLanguage\n     * @param {IToolingLanguage[]} languages\n     * @param {ILanguageSortConfig} config\n     * @returns {IToolingLanguage[]}\n     */\n\n    static order(\n        selectedLanguage: IToolingLanguage,\n        languages: IToolingLanguage[],\n        config: ILanguageSortConfig = { strategy: LanguageSortStrategy.Default }\n    ): IToolingLanguage[] {\n        switch (config.strategy) {\n            case LanguageSortStrategy.Default:\n                const orderedLanguages = languages\n                    .filter((language) => language.isoCode !== selectedLanguage.isoCode)\n                    .sort((a, b) => {\n                        return a.isoCode.localeCompare(b.isoCode);\n                    });\n\n                return [selectedLanguage, ...orderedLanguages];\n\n            case LanguageSortStrategy.None:\n                return languages;\n        }\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n\nimport { Input } from '@angular/core';\nimport { ISelectItem } from '../../interfaces/i-select-item';\nimport { IEventService } from '../../interfaces/i-event.service';\nimport { IToolingLanguage, LanguageService } from '../../services/language.service';\nimport { DEFAULT_LANGUAGE_ISO, SWITCH_LANGUAGE_EVENT } from '../../constants';\nimport { LanguageDropdownHelper, LanguageSortStrategy } from './language-dropdown-helper';\nimport { LanguageDropdownAdapter } from './language-dropdown-adapter';\n\nexport class LanguageDropdown {\n    @Input() languageSortStrategy: LanguageSortStrategy = LanguageSortStrategy.Default;\n\n    public selectedLanguage: IToolingLanguage = (null as unknown) as IToolingLanguage;\n    public items: ISelectItem<IToolingLanguage>[] = [];\n    public initialLanguage: ISelectItem<IToolingLanguage> = (null as unknown) as ISelectItem<\n        IToolingLanguage\n    >;\n\n    private languages: IToolingLanguage[] = [];\n    private unRegisterEventService: () => void = (null as unknown) as () => void;\n\n    constructor(public languageService: LanguageService, public eventService: IEventService) {}\n\n    ngOnInit(): void {\n        Promise.all([\n            this.languageService.getResolveLocale(),\n            this.languageService.getToolingLanguages()\n        ]).then(([isoCode, languages]: [string, IToolingLanguage[]]) => {\n            this.items = languages.map(LanguageDropdownAdapter.transform);\n            this.languages = languages;\n\n            this.setSelectedLanguage(isoCode);\n            this.setInitialLanguage(isoCode);\n        });\n\n        this.unRegisterEventService = this.eventService.subscribe(SWITCH_LANGUAGE_EVENT, () =>\n            this.handleLanguageChange()\n        );\n    }\n\n    ngOnDestroy(): void {\n        this.unRegisterEventService();\n    }\n\n    /**\n     * Triggered when an user selects a language.\n     * @param {IToolingLanguage} language\n     */\n    onSelectedLanguage(item: ISelectItem<IToolingLanguage>) {\n        this.languageService.setSelectedToolingLanguage(item.value);\n    }\n\n    /**\n     * Set initial language to be displayed in dropdown\n     *\n     * @param {string} isoCode\n     */\n\n    private setInitialLanguage(isoCode: string): void {\n        this.initialLanguage =\n            (this.items.find(\n                LanguageDropdownHelper.findSelectLanguageWithIsoCodePredicate(isoCode)\n            ) as ISelectItem<IToolingLanguage>) ||\n            this.items.find(\n                LanguageDropdownHelper.findSelectLanguageWithIsoCodePredicate(DEFAULT_LANGUAGE_ISO)\n            );\n    }\n    /**\n     * Triggered onInit and when language service sets a new language.\n     *\n     * @param {IToolingLanguage[]} languages\n     * @param {string} isoCode\n     */\n    private setSelectedLanguage(isoCode: string): void {\n        this.selectedLanguage = LanguageDropdownHelper.findLanguageWithIsoCode(\n            isoCode,\n            this.languages\n        );\n\n        if (this.selectedLanguage) {\n            const sortedLanguages = LanguageDropdownHelper.order(\n                this.selectedLanguage,\n                this.languages,\n                { strategy: this.languageSortStrategy }\n            );\n\n            this.items = sortedLanguages.map(LanguageDropdownAdapter.transform);\n            return;\n        }\n\n        // In case the iso code is too specific, it will use the more generic iso code to set the language.\n        this.languageService.getResolveLocaleIsoCode().then((code: string) => {\n            this.selectedLanguage = LanguageDropdownHelper.findLanguageWithIsoCode(\n                code,\n                this.languages\n            );\n            const sortedLanguages = LanguageDropdownHelper.order(\n                this.selectedLanguage,\n                this.languages,\n                { strategy: this.languageSortStrategy }\n            );\n            this.items = sortedLanguages.map(LanguageDropdownAdapter.transform);\n        });\n    }\n\n    /**\n     * Callback for setting the selected language.\n     */\n    private handleLanguageChange(): void {\n        this.languageService.getResolveLocale().then((isoCode: string) => {\n            this.setSelectedLanguage(isoCode);\n        });\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n\nimport { Component, Inject } from '@angular/core';\nimport { LanguageService } from '../../services/language.service';\nimport { EVENT_SERVICE, LANGUAGE_SERVICE } from '../../constants';\nimport { IEventService } from '../../interfaces';\n\nimport { LanguageDropdown } from './language-dropdown';\n\n/**\n * @ngdoc component\n * @name  @smartutils.components:LanguageDropdownComponent\n *\n * @description\n * A component responsible for displaying and selecting application language. Uses {@link @smartutils.components:SelectComponent SelectComponent} to show language items\n *\n */\n\n@Component({\n    selector: 'su-language-dropdown',\n    template: `\n        <su-select\n            class=\"su-language-selector\"\n            [items]=\"items\"\n            [initialValue]=\"initialLanguage\"\n            (onItemSelected)=\"onSelectedLanguage($event)\"\n        >\n        </su-select>\n    `\n})\nexport class LanguageDropdownComponent extends LanguageDropdown {\n    constructor(\n        @Inject(LANGUAGE_SERVICE) languageService: LanguageService,\n        @Inject(EVENT_SERVICE) public eventService: IEventService\n    ) {\n        super(languageService, eventService);\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n\nimport { ISelectItem } from '../../interfaces/i-select-item';\n\nexport abstract class ISelectAdapter {\n    static transform<T>(item: T, id: number): ISelectItem<T> {\n        return {} as ISelectItem<T>;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n\nimport {\n    forwardRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { BaseValueAccessor } from '../../utils/base-value-accessor';\nimport { ISelectItem } from '../../interfaces/i-select-item';\n\n/**\n * @ngdoc component\n * @name  @smartutils.components:SelectComponent\n *\n * @description\n * Dropdown component allowing to select item from dropdown\n *\n * @param {ISelectItem<T>[]} items Items to displayed in dropdown\n * @param {ISelectItem<T>} initialValue Value dropdown should be initialized with\n * @param {string} placeholder String to be displayed when value is not selected\n * @param {Boolean} isKeyboardControlEnabled Flag enabling dropdown items selection with arrow keys\n * @param {Boolean} hasCustomTrigger If set true the trigger opening the dropdown will be set by user\n */\n\n@Component({\n    selector: 'su-select',\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true }\n    ],\n    styleUrls: ['./select.component.scss'],\n    template: `\n        <fd-popover #popover fillControlMode=\"equal\" class=\"su-select\">\n            <fd-popover-control class=\"su-select__popover-control\">\n                <button\n                    class=\"fd-dropdown__control fd-button\"\n                    type=\"button\"\n                    *ngIf=\"!hasCustomTrigger; else customTrigger\"\n                >\n                    {{ (value && value.label) || placeholder | translate }}\n                </button>\n\n                <ng-template #customTrigger>\n                    <ng-content select=\"[su-select-custom-trigger]\"></ng-content>\n                </ng-template>\n            </fd-popover-control>\n            <fd-popover-body>\n                <fd-menu class=\"su-select__menu\">\n                    <ul\n                        fd-menu-list\n                        suListKeyboardControl\n                        [suListKeyboardControlEnabled]=\"isKeyboardControlEnabled && popover.isOpen\"\n                        (suListKeyboardControlEnterKeydown)=\"selectItem($event)\"\n                    >\n                        <li\n                            fd-menu-item\n                            suListItemKeyboardControl\n                            [ngClass]=\"item.listItemClassName\"\n                            *ngFor=\"let item of items\"\n                            (click)=\"selectItem(item.id)\"\n                            [attr.tabindex]=\"-1\"\n                            [attr.data-select-id]=\"item.id\"\n                        >\n                            {{ item.label | translate }}\n                        </li>\n                    </ul>\n                </fd-menu>\n            </fd-popover-body>\n        </fd-popover>\n    `\n})\nexport class SelectComponent<T> extends BaseValueAccessor<ISelectItem<T>> implements OnChanges {\n    @Input() items: ISelectItem<T>[] = [];\n    @Input() initialValue: ISelectItem<T> = (null as unknown) as ISelectItem<T>;\n    @Input() placeholder: string = '';\n    @Input() isKeyboardControlEnabled: boolean = true;\n    @Input() hasCustomTrigger: boolean = false;\n    @Output() onItemSelected: EventEmitter<ISelectItem<T>> = new EventEmitter();\n\n    @ViewChild('popover', { static: false }) popover: any; // PopoverComponent\n\n    selectItem(id: number): void {\n        const item: ISelectItem<T> = this.items.find(\n            (selected) => selected.id === id\n        ) as ISelectItem<T>;\n\n        this.setValue(item);\n        this.popover.close();\n        this.onItemSelected.emit(item);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.initialValue && changes.initialValue.currentValue && !this.value) {\n            this.setInitialValue(changes.initialValue.currentValue);\n        }\n    }\n\n    private setInitialValue(value: ISelectItem<T> | number): void {\n        if (typeof value === 'number') {\n            this.setValueById(value);\n        } else {\n            this.setValue(value);\n        }\n    }\n\n    private setValue(item: ISelectItem<T>): void {\n        this.writeValue(item);\n        this.onChange(item);\n    }\n\n    private setValueById(id: number): void {\n        this.setValue(this.items.find((item) => item.id === id) as ISelectItem<T>);\n    }\n}\n","import { Directive, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\n/**\n * Directive for marking list item for 'ListKeyboardControlDirective' to allow for navigating with keyboard.\n */\n@Directive({\n    selector: '[suListItemKeyboardControl]'\n})\nexport class ListItemKeyboardControlDirective implements OnInit {\n    /** @internal */\n    private readonly activeClassName = 'is-active';\n\n    constructor(private hostElement: ElementRef, private renderer: Renderer2) {}\n\n    /** @internal */\n    ngOnInit() {\n        this.setTabIndex();\n    }\n\n    public getElement(): HTMLElement {\n        return this.hostElement.nativeElement;\n    }\n\n    public setActive(): void {\n        const elm = this.getElement();\n        this.renderer.addClass(elm, this.activeClassName);\n\n        elm.scrollIntoView({ block: 'nearest' });\n    }\n\n    public setInactive(): void {\n        this.renderer.removeClass(this.getElement(), this.activeClassName);\n    }\n\n    /** @internal */\n    private setTabIndex(): void {\n        this.renderer.setAttribute(this.getElement(), 'tabindex', '-1');\n    }\n}\n","import {\n    AfterContentInit,\n    ContentChildren,\n    Directive,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    Output,\n    QueryList,\n    SimpleChanges\n} from '@angular/core';\n\nimport { ListItemKeyboardControlDirective } from './list-item-keyboard-control.directive';\n\nexport enum KeyboardKey {\n    ArrowDown = 'ArrowDown',\n    ArrowUp = 'ArrowUp',\n    Enter = 'Enter',\n    Esc = 'Escape'\n}\n\nexport type ListKeyboardControlDisabledPredicate = (\n    item: ListItemKeyboardControlDirective,\n    index: number\n) => boolean;\n\n/**\n * Directive that manages the active option in a list of items based on keyboard interaction.\n * For disabled options, a predicate must be passed with `suListKeyboardControlDisabledPredicate`\n * which will prevent that option from navigating with arrow up / down key.\n *\n * Note: It will include only direct children having the `suListItemKeyboardControl` directive.\n *\n * @example\n * ```\n * items = [\n *   {\n *     id: 1,\n *     label: 'item 1'\n *   },\n *   {\n *     id: 2,\n *     label: 'item 2'\n *   },\n *   {\n *     id: 3,\n *     label: 'item 3'\n *   }\n * ]\n * <ul suListKeyboardControl>\n *   <li suListItemKeyboardControl *ngFor=\"let item of items\">\n *     {{ item.label }}\n *   </li>\n * </ul>\n * ```\n */\n@Directive({\n    selector: '[suListKeyboardControl]'\n})\nexport class ListKeyboardControlDirective implements OnChanges, AfterContentInit {\n    /** Whether the keyboard interaction is enabled */\n    @Input() suListKeyboardControlEnabled = true;\n    /** Predicate called for each item. If true, the item will be excluded from keyboard navigation */\n    @Input() suListKeyboardControlDisabledPredicate?: ListKeyboardControlDisabledPredicate;\n    @Output() suListKeyboardControlEnterKeydown = new EventEmitter<number | null>();\n    @Output() suListKeyboardControlEscKeydown = new EventEmitter<void>();\n\n    /** @internal */\n    @ContentChildren(ListItemKeyboardControlDirective) items!: QueryList<\n        ListItemKeyboardControlDirective\n    >;\n\n    /** @internal */\n    private didNgAfterContentInit = false;\n    /** @internal */\n    private shouldSetActiveAfterContentInit = false;\n    /** @internal */\n    private activeItem: ListItemKeyboardControlDirective | null = null;\n    /** @internal */\n    private activeItemIndex: number | null = null;\n\n    /** @internal */\n    ngAfterContentInit() {\n        this.items.changes.subscribe(() => {\n            // handler for changes in content\n            if (this.items.length === 0) {\n                this.clearActiveItem();\n                return;\n            }\n\n            if (this.suListKeyboardControlEnabled) {\n                this.setActiveItemByIndex(0, 1);\n            } else {\n                this.clearActiveItem();\n            }\n        });\n\n        if (this.shouldSetActiveAfterContentInit && this.items.length > 0) {\n            this.setActiveItemByIndex(0, 1);\n        }\n        this.didNgAfterContentInit = true;\n    }\n\n    /** @internal */\n    @HostListener('document:keydown', ['$event']) onKeyDown(event: KeyboardEvent): void {\n        if (!this.suListKeyboardControlEnabled || this.items.length === 0) {\n            return;\n        }\n\n        // For ArrowDown and ArrowUp prevent from scrolling the container.\n        // Focus event is called when setting an active item so it will also scroll if needed.\n        switch (event.key) {\n            case KeyboardKey.ArrowDown:\n                event.preventDefault();\n                this.handleArrowDown();\n                return;\n            case KeyboardKey.ArrowUp:\n                event.preventDefault();\n                this.handleArrowUp();\n                return;\n            case KeyboardKey.Enter:\n                event.preventDefault();\n                this.handleEnter();\n                return;\n            case KeyboardKey.Esc:\n                this.handleEsc();\n                return;\n        }\n    }\n\n    /** @internal */\n    ngOnInit() {\n        this.shouldSetActiveAfterContentInit = this.suListKeyboardControlEnabled;\n    }\n\n    /** @internal */\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.didNgAfterContentInit) {\n            return;\n        }\n\n        const enabledChange = changes.suListKeyboardControlEnabled;\n        const predicateChange = changes.suListKeyboardControlDisabledPredicate;\n\n        const shouldSetActive =\n            enabledChange && enabledChange.currentValue && !enabledChange.previousValue;\n\n        const shouldUnsetActive =\n            enabledChange && !enabledChange.currentValue && enabledChange.previousValue;\n\n        const shouldSetActiveForPredicate =\n            predicateChange && predicateChange.currentValue && !!this.suListKeyboardControlEnabled;\n        const shouldUnsetActiveForPredicate =\n            predicateChange &&\n            !predicateChange.currentValue &&\n            predicateChange.previousValue &&\n            !!this.suListKeyboardControlEnabled;\n\n        if (this.items.length === 0) {\n            return;\n        }\n\n        if (shouldSetActive || shouldSetActiveForPredicate) {\n            this.setFirstItemActive();\n        }\n\n        if (shouldUnsetActive || shouldUnsetActiveForPredicate) {\n            this.unsetActiveItem();\n        }\n    }\n\n    /** @internal */\n    private handleArrowUp(): void {\n        this.setPreviousItemActive();\n    }\n\n    /** @internal */\n    private handleArrowDown(): void {\n        this.setNextItemActive();\n    }\n\n    /** @internal */\n    private handleEnter(): void {\n        this.suListKeyboardControlEnterKeydown.emit(this.activeItemIndex);\n    }\n\n    /** @internal */\n    private handleEsc(): void {\n        this.suListKeyboardControlEscKeydown.emit();\n    }\n\n    /** @internal */\n    private getItemByIndex(index: number): ListItemKeyboardControlDirective {\n        const items = this.getItemsArray();\n        return items[index];\n    }\n\n    /** @internal */\n    private getItemsArray(): ListItemKeyboardControlDirective[] {\n        return this.items.toArray();\n    }\n\n    /** @internal */\n    private setActiveItemByIndex(index: number, delta: -1 | 1): void {\n        const items = this.getItemsArray();\n\n        if (this.suListKeyboardControlDisabledPredicate) {\n            while (this.suListKeyboardControlDisabledPredicate(items[index], index)) {\n                index += delta;\n\n                if (!items[index]) {\n                    return;\n                }\n            }\n        }\n\n        const item = this.getItemByIndex(index);\n        this.setActiveItem(item);\n    }\n\n    /** @internal */\n    private setActiveItem(item: ListItemKeyboardControlDirective): void {\n        const items = this.getItemsArray();\n        const index = items.indexOf(item);\n\n        if (this.activeItem) {\n            this.activeItem.setInactive();\n        }\n\n        if (items.length > 0) {\n            this.activeItem = items[index];\n            this.activeItem.setActive();\n            this.activeItemIndex = index;\n        }\n    }\n\n    /** @internal */\n    private unsetActiveItem(): void {\n        if (!this.activeItem) {\n            return;\n        }\n\n        this.activeItem.setInactive();\n        this.activeItemIndex = null;\n    }\n\n    /** @internal */\n    private setFirstItemActive(): void {\n        this.setActiveItemByIndex(0, 1);\n    }\n\n    /** @internal */\n    private setNextItemActive(): void {\n        if (this.activeItemIndex === null) {\n            this.setFirstItemActive();\n            return;\n        }\n\n        if (this.activeItemIndex < this.items.length - 1) {\n            this.setActiveItemByIndex(this.activeItemIndex + 1, 1);\n        }\n    }\n\n    /** @internal */\n    private setPreviousItemActive(): void {\n        if (this.activeItemIndex === null) {\n            this.setFirstItemActive();\n            return;\n        }\n\n        if (this.activeItemIndex > 0) {\n            this.setActiveItemByIndex(this.activeItemIndex - 1, -1);\n        }\n    }\n\n    /** @internal */\n    private clearActiveItem(): void {\n        this.activeItem = null;\n        this.activeItemIndex = null;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { ListKeyboardControlDirective } from './list-keyboard-control.directive';\nimport { ListItemKeyboardControlDirective } from './list-item-keyboard-control.directive';\n\n@NgModule({\n    declarations: [ListKeyboardControlDirective, ListItemKeyboardControlDirective],\n    exports: [ListKeyboardControlDirective, ListItemKeyboardControlDirective]\n})\nexport class ListKeyboardControlModule {}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FundamentalNgxCoreModule } from '@fundamental-ngx/core';\nimport { SelectComponent } from './select.component';\nimport { ListKeyboardControlModule } from '../../directives';\nimport { TranslationModule } from '../../services/translations';\n\n@NgModule({\n    imports: [\n        FundamentalNgxCoreModule,\n        CommonModule,\n        ListKeyboardControlModule,\n        TranslationModule.forChild()\n    ],\n    declarations: [SelectComponent],\n    entryComponents: [SelectComponent],\n    exports: [SelectComponent]\n})\nexport class SelectModule {}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './i-select-adapter';\nexport * from './select.module';\nexport * from './select.component';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { LanguageDropdownComponent } from './language-dropdown.component';\nimport { SelectModule } from '../select';\n\n@NgModule({\n    imports: [CommonModule, SelectModule],\n    declarations: [LanguageDropdownComponent],\n    entryComponents: [LanguageDropdownComponent],\n    exports: [LanguageDropdownComponent]\n})\nexport class LanguageDropdownModule {}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n\nexport { LanguageDropdownAdapter } from './language-dropdown-adapter';\nexport { LanguageDropdownComponent } from './language-dropdown.component';\nexport { LanguageDropdownHelper } from './language-dropdown-helper';\nexport { LanguageDropdownModule } from './language-dropdown.module';\nexport { LanguageDropdown } from './language-dropdown';\n","/**\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertModule, ButtonModule, FormModule } from '@fundamental-ngx/core';\n\nimport { LanguageDropdownModule } from '../language-dropdown';\nimport { LoginDialogComponent } from './login-dialog.component';\nimport { TranslationModule } from '../../services/translations';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LanguageDropdownModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AlertModule,\n        TranslationModule.forChild(),\n        ButtonModule,\n        FormModule\n    ],\n    declarations: [LoginDialogComponent],\n    entryComponents: [LoginDialogComponent],\n    exports: [LanguageDropdownModule]\n})\nexport class LoginDialogModule {}\n","/**\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './login-dialog-resource-provider';\nexport * from './login-dialog.component';\nexport * from './login-dialog.module';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\n\nimport { Inject, Optional } from '@angular/core';\nimport * as lodash from 'lodash';\n\nimport { functionsUtils } from '../../utils';\nimport {\n    IAuthenticationManagerService,\n    IAuthenticationService,\n    IAuthToken,\n    ICredentialsMapRecord,\n    IEventService,\n    ILoginData,\n    ILoginModalFeedback,\n    IModalService,\n    ISettingsService,\n    ISharedDataService,\n    IStorageService\n} from '../../interfaces';\nimport { ITranslationsFetchService } from '../translations';\nimport {\n    DEFAULT_AUTH_MAP,\n    DEFAULT_AUTHENTICATION_ENTRY_POINT,\n    DEFAULT_CREDENTIALS_MAP,\n    EVENT_SERVICE,\n    EVENTS\n} from '../../constants';\nimport { SSOAuthenticationHelper } from './sso-authentication.helper';\nimport { Cloneable } from '../../dtos';\nimport { LoginDialogComponent } from '../../components/login-dialog';\n\nexport interface ICredentialsMap {\n    [entryPoint: string]: ICredentialsMapRecord;\n}\n\nexport interface IAuthMap {\n    [entryPoint: string]: string;\n}\n\ninterface IAuthenticationMapEntry {\n    key: string;\n    value: string;\n}\n\nexport class AuthenticationService extends IAuthenticationService {\n    constructor(\n        protected translationsFetchService: ITranslationsFetchService,\n        protected modalService: IModalService,\n        protected sharedDataService: ISharedDataService,\n        protected storageService: IStorageService,\n        @Inject(EVENT_SERVICE) protected eventService: IEventService,\n        protected ssoAuthenticationHelper: SSOAuthenticationHelper,\n        protected settingsService: ISettingsService,\n        @Optional() protected authenticationManager: IAuthenticationManagerService\n    ) {\n        super();\n    }\n\n    filterEntryPoints(resource: string): Promise<string[]> {\n        return this.sharedDataService.get('authenticationMap').then((authenticationMap) => {\n            return functionsUtils\n                .convertToArray<string>({\n                    ...(((authenticationMap as unknown) as IAuthenticationMapEntry) || {}),\n                    ...DEFAULT_AUTH_MAP\n                })\n                .filter((entry: IAuthenticationMapEntry) =>\n                    new RegExp(entry.key, 'g').test(resource)\n                )\n                .map((element: IAuthenticationMapEntry) => element.value);\n        });\n    }\n\n    isAuthEntryPoint(resource: string): Promise<boolean> {\n        return this.sharedDataService.get('authenticationMap').then((authenticationMap) => {\n            const authEntryPoints = functionsUtils\n                .convertToArray<string>(((authenticationMap as unknown) as IAuthMap) || {})\n                .map((element: IAuthenticationMapEntry) => element.value);\n            return (\n                authEntryPoints.indexOf(resource) > -1 ||\n                resource === DEFAULT_AUTHENTICATION_ENTRY_POINT\n            );\n        });\n    }\n\n    authenticate(resource: string): Promise<void> {\n        return this._findLoginData(resource).then((loginData: ILoginData) => {\n            return this._launchAuth(loginData).then((modalFeedback: ILoginModalFeedback) => {\n                Promise.resolve(\n                    this.eventService.publish(EVENTS.AUTHORIZATION_SUCCESS, {\n                        userHasChanged: modalFeedback.userHasChanged\n                    })\n                ).then(() => {\n                    if (modalFeedback.userHasChanged) {\n                        this.eventService.publish(EVENTS.USER_HAS_CHANGED);\n                    }\n                    /**\n                     * We only need to reload when the user has changed and all authentication forms were closed.\n                     * There can be many authentication forms if some modules use different (from default one) end points.\n                     */\n                    const reauthInProcess = lodash\n                        .values(this.reauthInProgress)\n                        .some((inProcess: boolean) => inProcess);\n\n                    if (\n                        modalFeedback.userHasChanged &&\n                        !reauthInProcess &&\n                        this.authenticationManager &&\n                        this.authenticationManager.onUserHasChanged\n                    ) {\n                        this.authenticationManager.onUserHasChanged();\n                    }\n                });\n                this.reauthInProgress[loginData.authURI] = false;\n            });\n        });\n    }\n\n    logout(): Promise<void> {\n        // First, indicate the services that SmartEdit is logging out. This should give them the opportunity to clean up.\n        // NOTE: This is not synchronous since some clean-up might be lengthy, and logging out should be fast.\n        return this.eventService.publish(EVENTS.LOGOUT).then(() => {\n            this.storageService.removeAllAuthTokens();\n            if (this.ssoAuthenticationHelper.isAutoSSOMain()) {\n                this.ssoAuthenticationHelper.logout();\n            } else if (this.authenticationManager && this.authenticationManager.onLogout) {\n                this.authenticationManager.onLogout();\n            }\n        });\n    }\n\n    isReAuthInProgress(entryPoint: string): Promise<boolean> {\n        return Promise.resolve(this.reauthInProgress[entryPoint] === true);\n    }\n\n    setReAuthInProgress(entryPoint: string): Promise<void> {\n        this.reauthInProgress[entryPoint] = true;\n        return Promise.resolve();\n    }\n\n    isAuthenticated(url: string): Promise<boolean> {\n        return this.filterEntryPoints(url).then((entryPoints: string[]) => {\n            const authURI = entryPoints && entryPoints[0];\n            return Promise.resolve((this.storageService.getAuthToken(\n                authURI\n            ) as unknown) as IAuthToken).then((authToken: IAuthToken) => {\n                return !!authToken;\n            });\n        });\n    }\n\n    /*\n     * will try determine first relevant authentication entry point from authenticationMap and retrieve potential client credentials to be added on top of user credentials\n     */\n    protected _findLoginData(resource: string): Promise<ILoginData> {\n        return this.filterEntryPoints(resource).then((entryPoints: string[]) => {\n            return Promise.resolve(\n                this.sharedDataService.get('credentialsMap').then((credentialsMap: Cloneable) => {\n                    const map: ICredentialsMap = {\n                        ...(((credentialsMap as unknown) as ICredentialsMap) || {}),\n                        ...DEFAULT_CREDENTIALS_MAP\n                    };\n                    const authURI = entryPoints[0];\n                    return {\n                        authURI,\n                        clientCredentials: map[authURI]\n                    };\n                })\n            );\n        });\n    }\n\n    protected _launchAuth(loginData: ILoginData): Promise<any> {\n        return this.translationsFetchService\n            .waitToBeReady()\n            .then(() =>\n                Promise.all([\n                    this.storageService.isInitialized(),\n                    this.settingsService.getBoolean('smartedit.sso.enabled')\n                ])\n            )\n            .then(([isFullScreen, ssoEnabled]: [boolean, boolean]) => {\n                const modalRef = this.modalService.open<ILoginData>({\n                    component: LoginDialogComponent,\n                    data: {\n                        ...loginData,\n                        isFullScreen,\n                        ssoEnabled\n                    },\n                    config: {\n                        modalPanelClass: 'su-login-dialog-container',\n                        hasBackdrop: false\n                    }\n                });\n\n                return new Promise((resolve, reject) => {\n                    modalRef.afterClosed.subscribe(resolve, reject);\n                });\n            });\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './sso-authentication.helper';\nexport * from './authentication.service';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nimport * as lodash from 'lodash';\nimport { Injectable, Type } from '@angular/core';\nimport { of, BehaviorSubject, Observable } from 'rxjs';\nimport { ModalRef } from '@fundamental-ngx/core';\nimport { FundamentalModalButtonAction, IFundamentalModalButtonOptions } from '../../interfaces';\n\n@Injectable()\nexport class FundamentalModalManagerService {\n    private title: BehaviorSubject<string> = new BehaviorSubject<string>('');\n    private titleSuffix: BehaviorSubject<string> = new BehaviorSubject<string>('');\n    private modalData: BehaviorSubject<any> = new BehaviorSubject<any>({});\n    private component: BehaviorSubject<Type<any>> = new BehaviorSubject<Type<any>>({} as Type<any>);\n    private isDismissButtonVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n    private buttons: BehaviorSubject<IFundamentalModalButtonOptions[]> = new BehaviorSubject<\n        IFundamentalModalButtonOptions[]\n    >([]);\n\n    constructor(private modalRef: ModalRef) {}\n\n    public init(): void {\n        this.modalData.next(this.modalRef.data.modalData);\n        this.component.next(this.modalRef.data.component);\n        this.buttons.next(this.modalRef.data.templateConfig.buttons || []);\n        this.title.next(this.modalRef.data.templateConfig.title);\n        this.titleSuffix.next(this.modalRef.data.templateConfig.titleSuffix);\n        this.isDismissButtonVisible.next(this.modalRef.data.templateConfig.isDismissButtonVisible);\n    }\n\n    // getters\n\n    public getComponent(): Observable<Type<any>> {\n        return this.component.asObservable();\n    }\n\n    public getTitle(): Observable<string> {\n        return this.title.asObservable();\n    }\n\n    public getTitleSuffix(): Observable<string> {\n        return this.titleSuffix.asObservable();\n    }\n\n    public getButtons(): Observable<IFundamentalModalButtonOptions[]> {\n        return this.buttons.asObservable();\n    }\n\n    public getModalData(): Observable<any> {\n        return this.modalData.asObservable();\n    }\n\n    public getIsDismissButtonVisible(): Observable<boolean> {\n        return this.isDismissButtonVisible.asObservable();\n    }\n\n    // header dismiss button\n\n    public setDismissButtonVisibility(isVisible: boolean) {\n        this.isDismissButtonVisible.next(isVisible);\n    }\n\n    // title\n\n    public setTitle(title: string): void {\n        this.title.next(title);\n    }\n    // buttons\n\n    public addButton(button: IFundamentalModalButtonOptions): void {\n        this.buttons.next([...this.buttons.value, button]);\n    }\n\n    public removeButton(id: string): void {\n        this.buttons.next(\n            this.buttons.value.filter((button: IFundamentalModalButtonOptions) => button.id !== id)\n        );\n    }\n\n    public removeAllButtons(): void {\n        this.buttons.next([]);\n    }\n\n    public disableButton(id: string): void {\n        this.buttons.next(\n            this.buttons.value.map((button: IFundamentalModalButtonOptions) =>\n                button.id === id ? { ...button, disabled: true } : button\n            )\n        );\n    }\n\n    public setDismissCallback(callback: () => Promise<any>): void {\n        this.dismissCallback = callback;\n    }\n\n    public enableButton(id: string): void {\n        this.buttons.next(\n            this.buttons.value.map((button: IFundamentalModalButtonOptions) =>\n                button.id === id ? { ...button, disabled: false } : button\n            )\n        );\n    }\n\n    public onButtonClicked(button: IFundamentalModalButtonOptions): void {\n        const callbackReturnedObservable: Observable<any> = button.callback\n            ? button.callback()\n            : of(null);\n\n        if (button.action !== FundamentalModalButtonAction.None) {\n            callbackReturnedObservable.subscribe((data: any) =>\n                button.action === FundamentalModalButtonAction.Close\n                    ? this.close(data)\n                    : this.dismiss(data)\n            );\n        }\n    }\n\n    public close(data?: any): void {\n        this.modalRef.close(data);\n    }\n\n    public dismiss(data?: any): void {\n        this.dismissCallback()\n            .then(() => this.modalRef.dismiss(data))\n            .catch(lodash.noop);\n    }\n\n    private dismissCallback(): Promise<any> {\n        return Promise.resolve();\n    }\n}\n","/**\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nimport { Component, OnInit, Type, ViewEncapsulation } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { FundamentalModalManagerService } from '../../services/modal/modal-manager.service';\nimport { Observable } from 'rxjs';\nimport { IFundamentalModalButtonOptions } from '../../interfaces';\n\n@Component({\n    selector: 'fundamental-modal-template',\n    encapsulation: ViewEncapsulation.None,\n    providers: [FundamentalModalManagerService],\n    styles: [\n        `\n            .fd-modal__title {\n                min-height: 20px;\n            }\n        `\n    ],\n    template: `\n        <fd-modal-header>\n            <h1 fd-modal-title id=\"fd-modal-title-{{ (title | async) || '' }}\">\n                {{ (title | async) || '' | translate }}\n                {{ (titleSuffix | async) || '' | translate }}\n            </h1>\n            <button\n                fd-modal-close-btn\n                *ngIf=\"isDismissButtonVisible | async\"\n                (click)=\"dismiss()\"\n            ></button>\n        </fd-modal-header>\n        <fd-modal-body>\n            <ng-container *ngComponentOutlet=\"component | async\"></ng-container>\n        </fd-modal-body>\n        <fd-modal-footer *ngIf=\"hasButtons() | async\">\n            <button\n                *ngFor=\"let button of buttons | async\"\n                [disabled]=\"button.disabledFn ? button.disabledFn() : button.disabled\"\n                [options]=\"button.style\"\n                [attr.id]=\"button.id\"\n                (click)=\"onButtonClicked(button)\"\n                fd-button\n            >\n                {{ button.label | translate }}\n            </button>\n        </fd-modal-footer>\n    `\n})\nexport class FundamentalModalTemplateComponent implements OnInit {\n    public component: Observable<Type<any>> = this.modalManager.getComponent();\n    public title: Observable<string> = this.modalManager.getTitle();\n    public titleSuffix: Observable<string> = this.modalManager.getTitleSuffix();\n    public buttons: Observable<IFundamentalModalButtonOptions[]> = this.modalManager.getButtons();\n    public isDismissButtonVisible: Observable<\n        boolean\n    > = this.modalManager.getIsDismissButtonVisible();\n\n    constructor(private modalManager: FundamentalModalManagerService) {}\n\n    ngOnInit() {\n        this.modalManager.init();\n    }\n\n    public onButtonClicked(button: IFundamentalModalButtonOptions) {\n        this.modalManager.onButtonClicked(button);\n    }\n\n    public dismiss(): void {\n        this.modalManager.dismiss();\n    }\n\n    public hasButtons(): Observable<boolean> {\n        return this.buttons.pipe(\n            map((buttons: IFundamentalModalButtonOptions[]) => buttons && !!buttons.length)\n        );\n    }\n}\n","/**\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonModule, ModalModule } from '@fundamental-ngx/core';\n\nimport { FundamentalModalTemplateComponent } from './modal-template.component';\nimport { TranslationModule } from '../../services/translations';\n\n@NgModule({\n    imports: [CommonModule, ModalModule, ButtonModule, TranslationModule.forChild()],\n    declarations: [FundamentalModalTemplateComponent],\n    entryComponents: [FundamentalModalTemplateComponent],\n    exports: [FundamentalModalTemplateComponent]\n})\nexport class FundamentalModalTemplateModule {}\n","/**\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport { FundamentalModalTemplateComponent } from './modal-template.component';\nexport { FundamentalModalTemplateModule } from './modal-template.module';\n","/**\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/*\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n */\nexport * from './modal-template';\nexport * from './login-dialog';\nexport * from './select';\nexport * from './language-dropdown';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Injectable } from '@angular/core';\nimport { IFundamentalModalConfig } from './i-modal.service';\nimport {\n    ModalConfig as FundamentalModalConfig,\n    ModalRef as FundamentalModalRef,\n    ModalService as FundamentalModalService\n} from '@fundamental-ngx/core';\nimport { FundamentalModalTemplateComponent } from '../../components';\n\n@Injectable()\nexport class ModalService {\n    constructor(protected fundamentalModalService: FundamentalModalService) {}\n\n    open<T>(options: IFundamentalModalConfig<T>): FundamentalModalRef {\n        const { templateConfig } = options;\n\n        return !!templateConfig\n            ? this.openWithTemplate<T>(options)\n            : this.openStandalone<T>(options);\n    }\n\n    private openStandalone<T>(options: IFundamentalModalConfig<T>): FundamentalModalRef {\n        const { config = {}, component, data } = options;\n\n        return this.fundamentalModalService.open(component, { ...config, data });\n    }\n\n    private openWithTemplate<T>(options: IFundamentalModalConfig<T>): FundamentalModalRef {\n        const { config = {}, templateConfig = {}, component, data } = options;\n\n        const settings: FundamentalModalConfig = {\n            ...config,\n            data: {\n                templateConfig,\n                component,\n                modalData: data\n            }\n        };\n\n        return this.fundamentalModalService.open(FundamentalModalTemplateComponent, settings);\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './modal.service';\nexport * from './i-modal.service';\nexport * from './modal-manager.service';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport * as lodash from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n    AlertConfig as FundamentalAlertConfig,\n    AlertRef,\n    AlertService as FundamentalAlertService\n} from '@fundamental-ngx/core';\nimport { IAlertConfig } from '../../interfaces';\n\nexport class Alert {\n    private _displayed: boolean = false;\n    private _alertRef!: AlertRef;\n\n    constructor(\n        private _alertConf: IAlertConfig,\n        ALERT_CONFIG_DEFAULTS: FundamentalAlertConfig,\n        private fundamentalAlertService: FundamentalAlertService,\n        private translateService: TranslateService\n    ) {\n        lodash.defaultsDeep(this._alertConf, lodash.cloneDeep(ALERT_CONFIG_DEFAULTS));\n    }\n\n    get alertConf(): IAlertConfig {\n        return this._alertConf;\n    }\n\n    get message(): string | undefined {\n        return this._alertConf.message;\n    }\n\n    get type(): string {\n        return this._alertConf.type as string;\n    }\n\n    /**\n     * Displays the alert to the user.\n     */\n    public async show(): Promise<void> {\n        if (this.isDisplayed()) {\n            return;\n        }\n\n        if (this._alertConf.message) {\n            this._alertConf.message = await this.translateService\n                .get(this._alertConf.message, this._alertConf.messagePlaceholders)\n                .toPromise<string>();\n        }\n\n        const content =\n            typeof this._alertConf.message !== 'undefined'\n                ? this._alertConf.message\n                : this._alertConf.component || '';\n        this._alertRef = this.fundamentalAlertService.open(content, this._alertConf);\n        this._alertRef.afterDismissed.subscribe(() => (this._displayed = false));\n\n        this._displayed = true;\n    }\n\n    /**\n     * Hides the alert if it is currently being displayed to the user.\n     */\n    public hide(): void {\n        if (!this.isDisplayed()) {\n            return;\n        }\n\n        this._alertRef.dismiss();\n    }\n\n    public isDisplayed(): boolean {\n        return this._displayed;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { InjectionToken } from '@angular/core';\nimport { AlertConfig } from '@fundamental-ngx/core';\nimport { IAlertServiceType } from '../../interfaces';\n\nexport const ALERT_CONFIG_DEFAULTS_TOKEN = new InjectionToken<string>('alertConfigToken');\n\nexport const ALERT_CONFIG_DEFAULTS: AlertConfig = {\n    data: {},\n    type: IAlertServiceType.INFO,\n    dismissible: true,\n    duration: 3000,\n    width: '500px'\n};\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Inject, Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AlertConfig, AlertService as FundamentalAlertService } from '@fundamental-ngx/core';\nimport { IAlertConfig, IAlertServiceType } from '../../interfaces';\nimport { Alert } from './alert';\nimport { ALERT_CONFIG_DEFAULTS_TOKEN } from './alert-token';\n\n/**\n * @ngdoc service\n * @name @smartutils.services:AlertFactory\n *\n * @description\n * The alertFactory allows you to create an instances of type Alert.<br />\n * When possible, it is better to use {@link @smartutils.services:AlertService AlertService} to show alerts.<br />\n * This factory is useful when one of the Alert class methods is needed, like\n * hide() or isDisplayed(), or if you want to create a single instance and hide/show when necessary.\n */\n@Injectable()\nexport class AlertFactory {\n    constructor(\n        private fundamentalAlertService: FundamentalAlertService,\n        private translateService: TranslateService,\n        @Inject(ALERT_CONFIG_DEFAULTS_TOKEN) private ALERT_CONFIG_DEFAULTS: AlertConfig\n    ) {}\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AlertFactory#createAlert\n     * @methodOf @smartutils.services:AlertFactory\n     * @param {string | Object} alertConf The alert's configuration {@link @smartutils.interfaces:IAlertConfig IAlertConfig}\n     * @returns {Alert} An {@link Alert Alert} instance\n     */\n    public createAlert(alertConf: string | IAlertConfig): Alert {\n        const config = this.getAlertConfig(alertConf);\n        return this.createAlertObject(config);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AlertFactory#createInfo\n     * @methodOf @smartutils.services:AlertFactory\n     * @param {string | Object} alertConf The alert's configuration {@link @smartutils.interfaces:IAlertConfig IAlertConfig}\n     * @returns {Alert} An {@link Alert Alert} instance with type set to INFO\n     */\n    public createInfo(alertConf: string | IAlertConfig): Alert {\n        const config = this.getAlertConfig(alertConf, IAlertServiceType.INFO);\n        return this.createAlertObject(config);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AlertFactory#createDanger\n     * @methodOf @smartutils.services:AlertFactory\n     * @param {string | Object} alertConf The alert's configuration {@link @smartutils.interfaces:IAlertConfig IAlertConfig}\n     * @returns {Alert} An {@link Alert Alert} instance with type set to DANGER\n     */\n    public createDanger(alertConf: string | IAlertConfig): Alert {\n        const config = this.getAlertConfig(alertConf, IAlertServiceType.DANGER);\n        return this.createAlertObject(config);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AlertFactory#createWarning\n     * @methodOf @smartutils.services:AlertFactory\n     * @param {string | Object} alertConf The alert's configuration {@link @smartutils.interfaces:IAlertConfig IAlertConfig}\n     * @returns {Alert} An {@link Alert Alert} instance with type set to WARNING\n     */\n    public createWarning(alertConf: string | IAlertConfig): Alert {\n        const config = this.getAlertConfig(alertConf, IAlertServiceType.WARNING);\n        return this.createAlertObject(config);\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AlertFactory#createSuccess\n     * @methodOf @smartutils.services:AlertFactory\n     * @param {string | Object} alertConf The alert's configuration {@link @smartutils.interfaces:IAlertConfig IAlertConfig}\n     * @returns {Alert} An {@link Alert Alert} instance with type set to SUCCESS\n     */\n    public createSuccess(alertConf: string | IAlertConfig): Alert {\n        const config = this.getAlertConfig(alertConf, IAlertServiceType.SUCCESS);\n        return this.createAlertObject(config);\n    }\n\n    private getAlertConfig(\n        strOrConf: string | IAlertConfig,\n        type?: IAlertServiceType\n    ): IAlertConfig {\n        if (typeof strOrConf === 'string') {\n            return {\n                message: strOrConf,\n                type: type || IAlertServiceType.INFO\n            };\n        }\n\n        if (!strOrConf.type) {\n            strOrConf.type = type || IAlertServiceType.INFO;\n        }\n        return strOrConf;\n    }\n\n    private createAlertObject(alertConf: IAlertConfig): Alert {\n        return new Alert(\n            alertConf,\n            this.ALERT_CONFIG_DEFAULTS,\n            this.fundamentalAlertService,\n            this.translateService\n        );\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Injectable } from '@angular/core';\nimport { IAlertConfig } from '../../interfaces';\nimport { AlertFactory } from './alert-factory';\n\n/**\n * @ngdoc service\n * @name @smartutils.services:AlertService\n */\n@Injectable()\nexport class AlertService {\n    constructor(private alertFactory: AlertFactory) {}\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AlertService#showAlert\n     * @methodOf @smartutils.services:AlertService\n     * @param {string | Object} alertConf The alert's configuration {@link @smartutils.interfaces:IAlertConfig IAlertConfig}\n     * @description\n     * Displays an alert to the user. <br />\n     * Convenience method to create an alert and call.show() on it immediately.\n     */\n    public showAlert(alertConf: string | IAlertConfig): void {\n        const alert = this.alertFactory.createAlert(alertConf);\n        alert.show();\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AlertService#showInfo\n     * @methodOf @smartutils.services:AlertService\n     * @param {string | Object} alertConf The alert's configuration {@link @smartutils.interfaces:IAlertConfig IAlertConfig}\n     * @description\n     * Displays an alert to the user. <br />\n     * Convenience method to create an alert and call.show() on it immediately.\n     */\n    public showInfo(alertConf: string | IAlertConfig): void {\n        const alert = this.alertFactory.createInfo(alertConf);\n        alert.show();\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AlertService#showDanger\n     * @methodOf @smartutils.services:AlertService\n     * @param {string | Object} alertConf The alert's configuration {@link @smartutils.interfaces:IAlertConfig IAlertConfig}\n     * @description\n     * Displays an alert to the user. <br />\n     * Convenience method to create an alert and call.show() on it immediately.\n     */\n    public showDanger(alertConf: string | IAlertConfig): void {\n        const alert = this.alertFactory.createDanger(alertConf);\n        alert.show();\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AlertService#showWarning\n     * @methodOf @smartutils.services:AlertService\n     * @param {string | Object} alertConf The alert's configuration {@link @smartutils.interfaces:IAlertConfig IAlertConfig}\n     * @description\n     * Displays an alert to the user. <br />\n     * Convenience method to create an alert and call.show() on it immediately.\n     */\n    public showWarning(alertConf: string | IAlertConfig): void {\n        const alert = this.alertFactory.createWarning(alertConf);\n        alert.show();\n    }\n\n    /**\n     * @ngdoc method\n     * @name @smartutils.services:AlertService#showSuccess\n     * @methodOf @smartutils.services:AlertService\n     * @param {string | Object} alertConf The alert's configuration {@link @smartutils.interfaces:IAlertConfig IAlertConfig}\n     * @description\n     * Displays an alert to the user. <br />\n     * Convenience method to create an alert and call.show() on it immediately.\n     */\n    public showSuccess(alertConf: string | IAlertConfig): void {\n        const alert = this.alertFactory.createSuccess(alertConf);\n        alert.show();\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { NgModule } from '@angular/core';\nimport { AlertModule as FundamentalAlertModule } from '@fundamental-ngx/core';\nimport { AlertService } from './alert.service';\nimport { AlertFactory } from './alert-factory';\nimport { TranslationModule } from '../translations';\nimport { ALERT_CONFIG_DEFAULTS, ALERT_CONFIG_DEFAULTS_TOKEN } from './alert-token';\n\n@NgModule({\n    imports: [FundamentalAlertModule, TranslationModule],\n    providers: [\n        {\n            provide: ALERT_CONFIG_DEFAULTS_TOKEN,\n            useValue: ALERT_CONFIG_DEFAULTS\n        },\n        AlertService,\n        AlertFactory\n    ]\n})\nexport class AlertModule {}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './alert-factory';\nexport * from './alert.service';\nexport * from './alert.module';\nexport { ALERT_CONFIG_DEFAULTS, ALERT_CONFIG_DEFAULTS_TOKEN } from './alert-token';\nexport * from './alert';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './log.service';\nexport * from './annotation.service';\nexport * from './cache';\nexport * from './interceptors';\nexport * from './rest';\nexport * from './authentication';\nexport * from './browser';\nexport * from './translations';\nexport * from './modal';\nexport * from './language.service';\nexport {\n    Alert,\n    AlertFactory,\n    AlertModule,\n    AlertService,\n    ALERT_CONFIG_DEFAULTS,\n    ALERT_CONFIG_DEFAULTS_TOKEN\n} from './alert';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { AbstractControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { ComponentType } from './interfaces';\nimport { InputProperties, InputPropertyChange } from './input-properties';\n\nexport abstract class AbstractForm {\n    /**\n     * Listen onto any property changes triggered by 'setInput' method.\n     *\n     * @type {Observable<InputPropertyChange>}\n     */\n    readonly inputChanges: Observable<InputPropertyChange> = this.inputs.changes;\n\n    protected constructor(\n        public readonly component: ComponentType,\n        public readonly control: AbstractControl,\n        public readonly inputs: InputProperties,\n        public readonly persist: boolean,\n        public parent: AbstractForm | null = null\n    ) {}\n\n    /**\n     * Get mapped values of fields to be persisted.\n     */\n    abstract getPersistedValue(): any;\n\n    /**\n     * Sets property and marks components for changes if property is decorated\n     * with FormProperty.\n     *\n     * @param {keyof T} key\n     * @param {T[keyof T]} value\n     */\n    setInput<T>(key: keyof T, value: T[keyof T]): void {\n        this.inputs.set(key, value);\n    }\n\n    /**\n     * Retrieves a property.\n     *\n     * @param {keyof T} key\n     * @returns {T[keyof T] | undefined}\n     */\n    getInput<T>(key: keyof T): T[keyof T] | undefined {\n        return this.inputs.get<T>(key);\n    }\n\n    /**\n     * Returns root form.\n     */\n    get root(): AbstractForm {\n        if (this.parent === null) {\n            return this;\n        }\n\n        let root = this.parent;\n\n        while (root.parent) {\n            root = root.parent;\n        }\n\n        return root;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { isUndefined, omitBy } from 'lodash';\n\n/**\n * ValidatorParameters holds data to the synchronous and\n * asynchronous validators configuration for a FormField.\n */\nexport class ValidatorParameters {\n    public validators: { [index: string]: any } = {};\n    public asyncValidators: { [index: string]: any } = {};\n\n    constructor(\n        validators: { [index: string]: any } = {},\n        asyncValidators: { [index: string]: any } = {}\n    ) {\n        this.validators = this._omitUndefinedValues(validators);\n        this.asyncValidators = this._omitUndefinedValues(asyncValidators);\n    }\n\n    /**\n     * Determines if synchronous validator exists.\n     *\n     * @param name The name of the synchronous validator.\n     * @returns A boolean if it has that parameter.\n     */\n    has(name: string): boolean {\n        return this.validators.hasOwnProperty(name);\n    }\n\n    /**\n     * Returns parameters of the synchronous validator.\n     *\n     * @param name The name of the synchronous validator.\n     * @returns The param of the validator.\n     */\n    getParam(name: string): null | any {\n        if (!this.has(name)) {\n            return null;\n        }\n        return this.validators[name];\n    }\n\n    /**\n     * Determines if asynchronous validator exists.\n     *\n     * @param name The name of the asynchronous validator.\n     * @returns A boolean if it has that parameter.\n     */\n    hasAsync(name: string): boolean {\n        return this.asyncValidators.hasOwnProperty(name);\n    }\n\n    /**\n     * Returns parameters of the asynchronous validator.\n     *\n     * @param name The name of the asynchronous validator.\n     * @returns The param of the validator.\n     */\n    getAsyncParam(name: string): null | any {\n        if (!this.hasAsync(name)) {\n            return null;\n        }\n        return this.asyncValidators[name];\n    }\n\n    /**\n     * @internal\n     * Returns a object with all those keys that have\n     * undefined values.\n     */\n    private _omitUndefinedValues(object: { [index: string]: any }): { [index: string]: any } {\n        return omitBy(object, isUndefined);\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { FormControl } from '@angular/forms';\n\nimport { AbstractForm } from './abstract-form';\nimport { ComponentType } from './interfaces';\nimport { InputProperties } from './input-properties';\nimport { ValidatorParameters } from './validator-parameters';\n\n/**\n * A leaf node of forms.\n */\nexport class FormField extends AbstractForm {\n    /**\n     * @override\n     */\n    control!: FormControl;\n\n    constructor(\n        component: ComponentType,\n        control: FormControl,\n        inputs: InputProperties,\n        persist: boolean,\n        public validators: ValidatorParameters = new ValidatorParameters()\n    ) {\n        super(component, control, inputs, persist);\n    }\n\n    /**\n     * Returns value if persistable.\n     * @return any\n     */\n    getPersistedValue() {\n        if (!this.persist) {\n            return undefined;\n        }\n        return this.control.value === undefined ? null : this.control.value;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { FormGroup, ValidationErrors } from '@angular/forms';\n\nimport { AbstractForm } from './abstract-form';\nimport { AbstractForms, ComponentType } from './interfaces';\nimport { InputProperties } from './input-properties';\n\n/**\n * A FormGrouping is used to encapsulate form data\n * of objects.\n */\nexport class FormGrouping extends AbstractForm {\n    /**\n     * @override\n     */\n    readonly control!: FormGroup;\n\n    constructor(\n        component: ComponentType,\n        control: FormGroup,\n        inputs: InputProperties,\n        persist: boolean,\n        parent: AbstractForm | null,\n        public forms: AbstractForms = {}\n    ) {\n        super(component, control, inputs, persist, parent);\n\n        Object.keys(this.forms).forEach((key) => {\n            this.forms[key].parent = this;\n        });\n    }\n\n    /**\n     * Adds a form element to the group.\n     *\n     * @param name\n     * @param form\n     */\n    addFormElement(name: string, form: AbstractForm): void {\n        this.forms = { ...this.forms, [name]: form };\n        this.control.addControl(name, form.control);\n\n        form.parent = this;\n    }\n\n    /**\n     * Removes a form element from the group.\n     *\n     * @param {string} name\n     */\n    removeFormElement(name: string): void {\n        if (!this.forms[name]) {\n            return;\n        }\n\n        const { [name]: deleted, ...forms } = this.forms;\n        this.forms = forms;\n        deleted.parent = null;\n\n        this.control.removeControl(name);\n    }\n\n    /**\n     * Get form element based on the string path.\n     *\n     * @param paths A dot notation path to the nested abstract form.\n     * @returns Returns the AbstractForm based on the path. null if the child does not exists.\n     */\n    getFormElement(paths: string | string[]): AbstractForm | null {\n        return (Array.isArray(paths) ? paths : paths.split('.')).reduce(\n            (acc, path) => {\n                if (!acc || !acc.forms) {\n                    return null;\n                }\n                return acc.forms[path];\n            },\n            this as any\n        );\n    }\n\n    /**\n     * Manually sets nested errors to each FormControl.\n     *\n     * Note: Method should be called on the next rendering cycle and not on the initialization of the form. Should be\n     * used to enforce backend validation.\n     *\n     * @param errors\n     */\n    setNestedErrors(errors: [string[] | string, ValidationErrors][] = []): void {\n        errors.forEach(([path, validationErrors]) => {\n            const form = this.getFormElement(path);\n\n            /**\n             * Fail if the form does not exist.\n             */\n            if (!form) {\n                throw new Error(`FormGrouping - Path not found when setting nested error: ${path}`);\n            }\n\n            form.control.setErrors(validationErrors);\n        });\n    }\n\n    /**\n     * Returns value of persistable nodes.\n     * @return any\n     */\n    getPersistedValue(): any {\n        return Object.keys(this.forms).reduce(\n            (acc, key) => {\n                const child = this.forms[key];\n\n                /**\n                 * Look ahead and if nested does not want to be mapped, merge the nested object with\n                 * the current object.\n                 *\n                 * If it's a field, then it's undefined.\n                 *\n                 * If it's a group, then it will be merged.\n                 */\n                if (!child.persist) {\n                    return { ...acc, ...child.getPersistedValue() };\n                }\n\n                acc[key] = child.getPersistedValue();\n                return acc;\n            },\n            {} as any\n        );\n    }\n}\n","import { FormArray } from '@angular/forms';\nimport { values } from 'lodash';\n\nimport { AbstractForm } from './abstract-form';\nimport { ComponentType } from './interfaces';\nimport { InputProperties } from './input-properties';\n\nexport class FormList extends AbstractForm {\n    /**\n     * @override\n     */\n    readonly control!: FormArray;\n\n    constructor(\n        component: ComponentType,\n        control: FormArray,\n        inputs: InputProperties,\n        parent: AbstractForm | null,\n        persist: boolean,\n        public forms: AbstractForm[] = []\n    ) {\n        super(component, control, inputs, persist, parent);\n\n        forms.forEach((child) => {\n            child.parent = this;\n        });\n    }\n\n    /**\n     * @override\n     * Implements the abstract getPersistedValue() method.\n     */\n    getPersistedValue(): any[] {\n        return this.forms.reduce((acc: any[], child: AbstractForm) => {\n            if (!child.persist) {\n                /**\n                 * Look ahead and merge the values of the\n                 * nested group, array or field.\n                 *\n                 * If it's a field, the values of the field\n                 * would be an empty array, because it's not an object.\n                 */\n                return acc.concat(values(child.getPersistedValue()));\n            }\n\n            acc.push(child.getPersistedValue());\n            return acc;\n        }, []);\n    }\n\n    /**\n     * Adds a form element to the end of the list.\n     *\n     * @param form\n     */\n    addFormElement(form: AbstractForm): void {\n        this.forms = [...this.forms, form];\n        this.control.push(form.control);\n\n        form.parent = this;\n    }\n\n    /**\n     * Removes a form element from the list.\n     *\n     * @param {string} index.\n     */\n    removeFormElement(index: number): void {\n        if (!this._isInBounds(index)) {\n            return;\n        }\n\n        this.forms = this.forms.filter((f, i) => i !== index);\n        this.control.removeAt(index);\n    }\n\n    /**\n     * Returns an element at an index.\n     *\n     * @param index An index inbounds of the list.\n     */\n    formElementAt(index: number): AbstractForm | null {\n        if (!this._isInBounds(index)) {\n            return null;\n        }\n\n        return this.forms[index];\n    }\n\n    /**\n     * The size of the list.\n     */\n    size(): number {\n        return this.forms.length;\n    }\n\n    /**\n     * Swaps a form element in the array.\n     *\n     * @param a The index of form a.\n     * @param b The index of form b.\n     */\n    swapFormElements(a: number, b: number): void {\n        if (!this._isInBounds(a) || !this._isInBounds(b) || a === b) {\n            return;\n        }\n\n        this.forms = [...this.forms];\n\n        /**\n         * Swapping form array.\n         */\n        const form = this.forms[a];\n        this.forms[a] = this.forms[b];\n        this.forms[b] = form;\n\n        /**\n         * Swapping control's array.\n         */\n        const control = this.control.at(a);\n        this.control.insert(a, this.control.at(b));\n        this.control.insert(b, control);\n    }\n\n    /**\n     * Moves a form element in the array to a new position.\n     *\n     * @param from The previous index.\n     * @param to The targeted index.\n     */\n    moveFormElement(from: number, to: number): void {\n        if (!this._isInBounds(from) || !this._isInBounds(to) || from === to) {\n            return;\n        }\n\n        const delta = to < from ? -1 : 1;\n\n        const tempControl = this.control.at(from);\n        const tempForm = this.forms[from];\n\n        for (let i = from; i !== to; i += delta) {\n            const position = i + delta;\n\n            this.control.setControl(i, this.control.at(position));\n            this.forms[i] = this.forms[position];\n        }\n\n        this.control.setControl(to, tempControl);\n        this.forms[to] = tempForm;\n    }\n\n    /**\n     * Checks of the index is in bounds.\n     *\n     * @internal\n     * @param index\n     */\n    private _isInBounds(index: number) {\n        return index < this.forms.length && index >= 0;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Observable, Subject } from 'rxjs';\nimport { toPairs } from 'lodash';\n\n/* tslint:disable:max-classes-per-file */\n\n/**\n * Event payload when a property changes.\n */\nexport class InputPropertyChange {\n    constructor(public key: string, public value: any) {}\n}\n\n/**\n * Used for storing component input values for the dynamic component. The values\n * are set onto the dynamic component's properties that are decorated by the @DynamicInput()\n * decorator. Values can be retrieved or set programmatically by the form element's 'input'\n * property.\n */\nexport class InputProperties {\n    readonly changes: Observable<InputPropertyChange> = new Subject<InputPropertyChange>();\n    /**\n     * @internal\n     */\n    private readonly _map: Map<string, any>;\n\n    constructor(object: { [key: string]: any } = {}) {\n        this._map = new Map(toPairs(object));\n    }\n\n    /**\n     * Get a property.\n     *\n     * @param {keyof T} key\n     * @returns {T[keyof T] | undefined} value\n     */\n    get<T>(key: keyof T): T[keyof T] | undefined {\n        return this._map.get(key as string);\n    }\n\n    /**\n     * Setting a property.\n     *\n     * @param {keyof T} key\n     * @param {T[keyof T]} value\n     * @param {boolean} emit If emit is set to false. It will not emit changes to the\n     * the component for those observing for property changes.\n     */\n    set<T>(key: keyof T, value: T[keyof T], emit = true) {\n        this._map.set(key as string, value);\n        if (emit) {\n            (this.changes as Subject<InputPropertyChange>).next(\n                new InputPropertyChange(key as string, value)\n            );\n        }\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './form-field';\nexport * from './form-grouping';\nexport * from './form-list';\nexport * from './interfaces';\nexport * from './input-properties';\nexport * from './abstract-form';\nexport * from './validator-parameters';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/* tslint:disable:max-classes-per-file */\n\n/**\n * @internal\n * Internal property on the constructor used for adding decorator metadata\n * so that it can be later picked up after component compilation.\n */\nexport const FORM_PROP = '_form_prop_';\n\n/**\n * Base data PropDecorator.\n * @internal\n */\nexport class PropDecorator {\n    constructor(public property: string) {}\n}\n\n/**\n * @internal\n */\nexport class InputPropDecorator extends PropDecorator {\n    public alias: string;\n    constructor(property: string, alias: string | null) {\n        super(property);\n        this.alias = alias ? alias : this.property;\n    }\n}\n\n/**\n * @internal\n */\nexport class FormPropDecorator extends PropDecorator {}\n\n/**\n * @internal\n */\nexport class ControlPropDecorator extends PropDecorator {}\n\n/**\n * Used for tagging dynamic inputs and adding them to the FORM_PROP property\n * of the target constructor.\n */\nfunction makePropertyDecorator<T>(factory: (key: string) => PropDecorator) {\n    return <C>(target: C, key: string) => {\n        const ctor = (target as any).constructor as any;\n        if (!ctor[FORM_PROP]) {\n            ctor[FORM_PROP] = [];\n        }\n        ctor[FORM_PROP].push(factory(key));\n    };\n}\n\n/**\n * Injects the AbstractForm for the dynamic form component.\n */\nexport function DynamicForm() {\n    return makePropertyDecorator((key) => new FormPropDecorator(key));\n}\n\n/**\n * Injects the AbstractFormControl of the AbstractForm for the dynamic form component.\n */\nexport function DynamicFormControl() {\n    return makePropertyDecorator((key) => new ControlPropDecorator(key));\n}\n\n/**\n * Injects a property of the AbstractForm for the dynamic form component.\n * Inputs are assigned from the FormSchema's 'inputs' property.\n * NOTE:\n * Property values are only available ngOnInit or onDynamicInputChange.\n * @param alias Use this alias to target a property of the AbstractForm. Defaults\n * to the assigned class property.\n * @example\n * <pre>\n *     @Component({ ... })\n *     export class DynamicFormComponent {\n *         @DynamicInput()\n *         property: string\n *     }\n * <pre>\n */\nexport const DynamicInput = (alias: string | null = null) => {\n    return makePropertyDecorator((key) => new InputPropDecorator(key, alias));\n};\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Component } from '@angular/core';\nimport { values } from 'lodash';\n\nimport { AbstractForm, FormGrouping } from '../../models';\nimport { DynamicForm } from '../../decorators';\n\n/**\n * Default component used for listing forms for a group form.\n */\n@Component({\n    selector: 'form-lister',\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `\n    ],\n    templateUrl: './form-lister.component.html'\n})\nexport class FormListerComponent {\n    @DynamicForm()\n    form!: FormGrouping;\n\n    get forms(): AbstractForm[] {\n        return values(this.form.forms);\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { ComponentRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AbstractForm, DynamicInputChange } from '../../models';\nimport {\n    ControlPropDecorator,\n    FormPropDecorator,\n    FORM_PROP,\n    InputPropDecorator,\n    PropDecorator\n} from '../../decorators';\n\n/**\n * @internal\n * Trigger property changes for the component and mark for check\n * for those components that have onPush change detection strategy.\n *\n * @param {ComponentRef<any>} componentRef\n */\nconst onChange = ({ changeDetectorRef, instance }: ComponentRef<DynamicInputChange>): void => {\n    instance.onDynamicInputChange && instance.onDynamicInputChange();\n    changeDetectorRef.markForCheck();\n};\n\n/**\n * @internal\n * Decorates the components with the decorators that were put into places.\n * The idea is made similar to how Angular decorates their properties with inputs.\n */\nexport const decorate = (componentRef: ComponentRef<any>, form: AbstractForm): Subscription => {\n    const instance = componentRef.instance;\n    const decorators = instance.constructor[FORM_PROP] as PropDecorator[];\n\n    if (!Array.isArray(decorators)) {\n        return new Subscription();\n    }\n\n    const props = new Map<string, InputPropDecorator>();\n\n    decorators.forEach((decorator) => {\n        const property = decorator.property;\n        if (decorator instanceof InputPropDecorator) {\n            const alias = decorator.alias;\n            if (form.getInput(alias) === undefined && instance[property] !== undefined) {\n                form.setInput(alias, instance[property]);\n            }\n            instance[property] = form.getInput(alias);\n            props.set(alias, decorator);\n        } else if (decorator instanceof FormPropDecorator) {\n            instance[property] = form;\n        } else if (decorator instanceof ControlPropDecorator) {\n            instance[property] = form.control;\n        }\n    });\n\n    onChange(componentRef);\n    return form.inputChanges.subscribe(({ key, value }) => {\n        const decorator = props.get(key);\n\n        if (!decorator) {\n            return;\n        }\n\n        instance[decorator.property] = value;\n        onChange(componentRef);\n    });\n};\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport {\n    ComponentFactoryResolver,\n    Directive,\n    Input,\n    OnDestroy,\n    ViewContainerRef\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AbstractForm } from '../../models';\nimport { decorate } from './decorate';\n\n@Directive({\n    selector: '[formRenderer]'\n})\nexport class FormRendererDirective implements OnDestroy {\n    /**\n     * @internal\n     */\n    private _subscription!: Subscription;\n\n    @Input('formRenderer')\n    set form(form: AbstractForm) {\n        this._dispose();\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n            form.component\n        );\n\n        // Create and decorate the component's inputs.\n        const componentRef = this.viewContainerRef.createComponent(componentFactory);\n        this._subscription = decorate(componentRef, form);\n    }\n\n    constructor(\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private viewContainerRef: ViewContainerRef\n    ) {}\n\n    ngOnDestroy() {\n        this._dispose();\n    }\n\n    /**\n     * @internal\n     * Clear all views and unsubscribe to streams.\n     */\n    private _dispose() {\n        this._subscription && this._subscription.unsubscribe();\n        this.viewContainerRef.clear();\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { InjectionToken } from '@angular/core';\n\nexport const COMPONENT_MAP = new InjectionToken<string>('COMPONENT_MAP');\n\nexport const ASYNC_VALIDATOR_MAP = new InjectionToken<string>('ASYNC_VALIDATOR_MAP');\n\nexport const VALIDATOR_MAP = new InjectionToken<string>('VALIDATOR_MAP');\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n// File named form-builder.module for now cuz of build blocking me to use Module suffix.\n\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FormBuilderConfig } from './models';\n\n// Components\nimport { FormListerComponent } from './components/form-lister/form-lister.component';\nimport { FormRendererDirective } from './directives/form-renderer/form-renderer.directive';\n\n// Services\nimport { ASYNC_VALIDATOR_MAP, COMPONENT_MAP, VALIDATOR_MAP } from './services/injection-tokens';\n\n@NgModule({\n    imports: [CommonModule, ReactiveFormsModule],\n    declarations: [FormRendererDirective, FormListerComponent],\n    entryComponents: [FormListerComponent],\n    exports: [FormRendererDirective]\n})\nexport class FormBuilderModule {\n    static forRoot(option: FormBuilderConfig): ModuleWithProviders {\n        return {\n            ngModule: FormBuilderModule,\n            providers: [\n                {\n                    provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n                    useValue: [option.types],\n                    multi: true\n                },\n                {\n                    provide: COMPONENT_MAP,\n                    useValue: option.types\n                },\n                {\n                    provide: VALIDATOR_MAP,\n                    useValue: option.validators\n                },\n                {\n                    provide: ASYNC_VALIDATOR_MAP,\n                    useValue: option.asyncValidators\n                }\n            ]\n        };\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './form-renderer/form-renderer.directive';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { toPairs } from 'lodash';\n/**\n * @internal\n *\n * Generic registry for mapping keys to items.\n */\nexport abstract class Registry<T> {\n    private _map: Map<string, T>;\n\n    constructor(items: { [name: string]: T } = {}) {\n        this._map = new Map(toPairs(items));\n    }\n\n    /**\n     * Adds a item to the registry.\n     *\n     * @param {string} name\n     * @param {T} item\n     */\n    add(name: string, item: T): void {\n        if (this._map.has(name)) {\n            throw new Error(\n                `${this._service}: is overriding an element named '${name}' in its registry.`\n            );\n        }\n        this._map.set(name, item);\n    }\n\n    /**\n     * Gets an a item in the registry.\n     *\n     * @param {string} name\n     * @returns {T}\n     */\n    get(name: string): T | undefined {\n        if (!this._map.has(name)) {\n            throw new Error(`${this._service}: does not have '${name}' in its registry.`);\n        }\n        return this._map.get(name);\n    }\n\n    /**\n     * @internal\n     */\n    private get _service() {\n        return this.constructor.name;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Inject, Injectable, Optional } from '@angular/core';\n\nimport { Registry } from './registry';\nimport { ComponentType } from '../models';\nimport { COMPONENT_MAP } from './injection-tokens';\n\nexport interface ComponentTypeMap {\n    [name: string]: ComponentType;\n}\n/**\n * A registry for form components.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ComponentRegistryService extends Registry<ComponentType> {\n    constructor(\n        @Optional()\n        @Inject(COMPONENT_MAP)\n        types: ComponentTypeMap\n    ) {\n        super(types);\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { AsyncValidatorFn } from '@angular/forms';\n\nimport { Registry } from './registry';\nimport { ASYNC_VALIDATOR_MAP } from './injection-tokens';\n\nexport interface AsyncValidatorMap {\n    [name: string]: (...args: any[]) => AsyncValidatorFn;\n}\n\n/**\n * A registry for asynchronous validators.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class AsyncValidatorRegistryService extends Registry<(...args: any[]) => AsyncValidatorFn> {\n    constructor(\n        @Optional()\n        @Inject(ASYNC_VALIDATOR_MAP)\n        asyncValidators: AsyncValidatorMap\n    ) {\n        super(asyncValidators);\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { ValidatorFn } from '@angular/forms';\n\nimport { Registry } from './registry';\nimport { VALIDATOR_MAP } from './injection-tokens';\n\nexport interface ValidatorMap {\n    [name: string]: (...args: any[]) => ValidatorFn;\n}\n\n/**\n * A registry for synchronous validators.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ValidatorRegistryService extends Registry<(...args: any[]) => ValidatorFn> {\n    constructor(\n        @Optional()\n        @Inject(VALIDATOR_MAP)\n        validators: ValidatorMap\n    ) {\n        super(validators);\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nimport { Injectable } from '@angular/core';\nimport { AsyncValidatorFn, FormArray, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\nimport { FormBuilderModule } from '../form-builder.module';\nimport {\n    AbstractForm,\n    AbstractForms,\n    AbstractFormSchema,\n    ComponentType,\n    FormField,\n    FormFieldSchema,\n    FormGrouping,\n    FormGroupSchema,\n    FormList,\n    FormListSchema,\n    InputProperties,\n    ValidatorParameters\n} from '../models';\nimport { FormListerComponent } from '../components/form-lister/form-lister.component';\n\nimport { ComponentRegistryService, ComponentTypeMap } from './component-registry.service';\nimport { ValidatorMap, ValidatorRegistryService } from './validator-registry.service';\nimport {\n    AsyncValidatorMap,\n    AsyncValidatorRegistryService\n} from './async-validator-registry.service';\nimport { Registry } from './registry';\n\n/**\n * Options to be passed inline into the compiler.\n */\nexport interface SchemaCompilerOptions {\n    /**\n     * A map of Angular components to be passed inline. Component found\n     * in this map will take precedence of those from the registry.\n     */\n    components?: ComponentTypeMap;\n    /**\n     * A map of validator functions to be passed inline.\n     * Validators found in this map will take precedence of those\n     * taken from the registry.\n     */\n    validators?: ValidatorMap;\n    /**\n     * A map of async validators to be passed inline.\n     * Validators found in this map will take precedence of those\n     * taken from the registry.\n     */\n    asyncValidators?: AsyncValidatorMap;\n}\n\n/**\n * Schema compilers service is used for compiling a schema to concrete classes for use\n * by the FormRendererDirective.\n */\n@Injectable({\n    providedIn: FormBuilderModule\n})\nexport class SchemaCompilerService {\n    constructor(\n        private types: ComponentRegistryService,\n        private validators: ValidatorRegistryService,\n        private asyncValidators: AsyncValidatorRegistryService\n    ) {}\n\n    /**\n     * Compile a schema group.\n     *\n     * @param value\n     * @param groupSchema\n     * @returns\n     */\n    compileGroup(\n        value: any | null,\n        groupSchema: FormGroupSchema,\n        options: SchemaCompilerOptions = {}\n    ): FormGrouping {\n        const abstractForms = Object.keys(groupSchema.schemas).reduce(\n            (acc, key: string) => {\n                acc[key] = this._toAbstractForm(\n                    value ? value[key] : null,\n                    groupSchema.schemas[key],\n                    options\n                );\n                return acc;\n            },\n            {} as AbstractForms\n        );\n\n        const formGroup = new FormGroup(\n            Object.keys(abstractForms).reduce(\n                (acc, key) => {\n                    acc[key] = abstractForms[key].control;\n                    return acc;\n                },\n                {} as any\n            )\n        );\n\n        return new FormGrouping(\n            groupSchema.component\n                ? this._getComponent(groupSchema.component, options.components)\n                : FormListerComponent,\n            formGroup,\n            new InputProperties(groupSchema.inputs),\n            this._toPersist(groupSchema.persist),\n            null,\n            abstractForms\n        );\n    }\n\n    /**\n     * Compiles a list of values with a schema.\n     *\n     * @param values An array of values.\n     * @param listSchema\n     */\n    compileList(\n        values: any[],\n        schema: FormListSchema,\n        options: SchemaCompilerOptions = {}\n    ): FormList {\n        /**\n         * The schema list for each value since each value can have different\n         * schemas. Or they can have the same schema for all values in the list.\n         */\n        const schemaList = Array.isArray(schema.schema) ? schema.schema : [schema.schema];\n\n        if (!schemaList.length) {\n            throw Error(\n                'SchemaCompilerService - One or more schemas must be provided to compile a form list.'\n            );\n        }\n\n        const list = (Array.isArray(values) ? values : []).map((value: any, index: number) => {\n            const childSchema = schemaList[index]\n                ? /**\n                   * Get the schema one to one for the value, or get the last schema\n                   * which may be repeated for all values.\n                   */\n                  schemaList[index]\n                : schemaList[schemaList.length - 1];\n\n            return this._toAbstractForm(value, childSchema, options);\n        });\n\n        const control = new FormArray(list.map((form) => form.control));\n\n        return new FormList(\n            this._getComponent(schema.component, options.components),\n            control,\n            new InputProperties(schema.inputs),\n            null,\n            this._toPersist(schema.persist),\n            list\n        );\n    }\n\n    /**\n     * Compiles a schema field.\n     *\n     * @param value\n     * @param {FormFieldSchema} schema\n     * @returns {FormField}\n     */\n    compileField(\n        value: any,\n        schema: FormFieldSchema,\n        options: SchemaCompilerOptions = {}\n    ): FormField {\n        let validators: ValidatorFn[] = [];\n        let asyncValidators: AsyncValidatorFn[] = [];\n\n        if (schema.validators) {\n            validators = this._mapValidator<ValidatorRegistryService, ValidatorFn>(\n                schema.validators,\n                this.validators,\n                options.validators\n            );\n        }\n\n        if (schema.asyncValidators) {\n            asyncValidators = this._mapValidator<AsyncValidatorRegistryService, AsyncValidatorFn>(\n                schema.asyncValidators,\n                this.asyncValidators,\n                options.asyncValidators\n            );\n        }\n\n        const formControl = new FormControl(\n            { value, disabled: schema.disabled },\n            validators,\n            asyncValidators\n        );\n\n        return new FormField(\n            this._getComponent(schema.component, options.components),\n            formControl,\n            new InputProperties(schema.inputs),\n            this._toPersist(schema.persist),\n            new ValidatorParameters(schema.validators, schema.asyncValidators)\n        );\n    }\n\n    /**\n     * @internal\n     * @param value\n     * @param schema\n     */\n    private _toAbstractForm(\n        value: any | null,\n        schema: AbstractFormSchema,\n        options: SchemaCompilerOptions\n    ): AbstractForm {\n        if (schema.type === 'field') {\n            return this.compileField(value, schema as FormFieldSchema, options);\n        }\n        if (schema.type === 'group') {\n            return this.compileGroup(value, schema as FormGroupSchema, options);\n        }\n        return this.compileList(value, schema as FormListSchema, options);\n    }\n\n    /**\n     * @internal\n     *\n     * Maps schema validators to actual validators in the registry and passes custom params to a validator.\n     * If params are undefined then the validator isn't added to the array of validators. Validators\n     * that are found the inline registry will take precedence of those in registries.\n     */\n    private _mapValidator<T extends Registry<any>, M>(\n        validators: { [index: string]: any },\n        registry: T,\n        inline: { [key: string]: (...args: any[]) => M } = {}\n    ) {\n        return Object.keys(validators).reduce(\n            (acc, name) => {\n                const params = validators[name];\n                if (params !== undefined) {\n                    const fn = inline[name] ? inline[name] : registry.get(name);\n\n                    if (!fn) {\n                        throw new Error(\n                            `SchemaCompilerService - Validator not found in ${\n                                this.validators.constructor.name\n                            } for: ${name}.`\n                        );\n                    }\n\n                    acc.push(fn(params));\n                }\n                return acc;\n            },\n            [] as any[]\n        );\n    }\n\n    /**\n     * @internal\n     * Sets default to true if parameter persist is undefined.\n     */\n    private _toPersist(persist: boolean | undefined = true): boolean {\n        return persist;\n    }\n\n    /**\n     * @internal\n     * Decides if should get the type from the inline map or registry.\n     * If no component is found, it would throw an error.\n     *\n     * @param name The name of the component in the registry.\n     * @param components An component type name, used for inline components.\n     */\n    private _getComponent(name: string, components: ComponentTypeMap = {}): ComponentType {\n        const comp = components[name] ? components[name] : this.types.get(name);\n\n        if (!comp) {\n            throw new Error(`SchemaCompilerService - Did not find component for: ${name}.`);\n        }\n\n        return comp;\n    }\n}\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './component-registry.service';\nexport * from './async-validator-registry.service';\nexport * from './validator-registry.service';\nexport * from './schema-compiler.service';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './form-lister/form-lister.component';\n","import { AbstractForm, FormField, FormGrouping, FormList } from '../models';\n\n/**\n * Get an address book of persisting fields to the actual form path.\n * Example:\n * {\n *   'property': ['tab', 'property']\n *   ...\n * }\n * Where tab is not a persisting property of the model.\n */\nexport const getPersistenceMap = (\n    form: AbstractForm,\n    map: { [s: string]: string[] } = {},\n    from: string[] = [],\n    to: string[] = []\n): { [path: string]: string[] } => {\n    if (form instanceof FormField) {\n        if (form.persist) {\n            map[from.join('.')] = to;\n        }\n\n        return map;\n    }\n\n    if (form instanceof FormList || form instanceof FormGrouping) {\n        if (form.persist && from.length) {\n            map[from.join('.')] = to;\n        }\n\n        Object.keys(form.forms).forEach((current: string) => {\n            const child = (form.forms as any)[current];\n            const toActual = [...to, current];\n\n            if (child.persist) {\n                return getPersistenceMap(child, map, [...from, current], toActual);\n            }\n\n            return getPersistenceMap(child, map, from, toActual);\n        });\n    }\n\n    return map;\n};\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './models';\nexport { FormBuilderModule } from './form-builder.module';\nexport * from './directives';\nexport {\n    SchemaCompilerService,\n    ComponentTypeMap,\n    ValidatorMap,\n    AsyncValidatorMap,\n    ComponentRegistryService,\n    ValidatorRegistryService,\n    AsyncValidatorRegistryService\n} from './services';\nexport * from './decorators';\nexport * from './components';\nexport * from './helpers';\n","/**\n * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\n\nexport * from './form-builder';\nexport { FormBuilderModule } from './form-builder';\n","/**\n * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.\n * @module smartutils\n */\nexport * from './index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["lodash.cloneDeepWith","lodash.isElement","lodash.cloneDeep","lodash.isArray","CryptoJS.SHA1","CryptoJS.AES","CryptoJS.enc","lo.isEmpty","lodash.isPlainObject","lodash.isBoolean","lodash.merge","lodash.memoize","lo.uniq","lodash.union","tslib_1.__param","lodash.isEqual","lodash.includes","lodash.isEmpty","lodash.mapValues","lodash.isNil","keys","lodash.sortBy","lodash.keys","lodash.zipObject","lodash.map","tslib_1.__decorate","tslib_1.__assign","tslib_1.__extends","AlertModule","lodash\n                        .values","lodash.noop","FundamentalModalService","lodash.defaultsDeep","FundamentalAlertService","FundamentalAlertModule"],"mappings":"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"}