/**
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
/**
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
/* tslint:disable:max-classes-per-file */
/**
 * @internal
 * Internal property on the constructor used for adding decorator metadata
 * so that it can be later picked up after component compilation.
 */
export const FORM_PROP = '_form_prop_';
/**
 * Base data PropDecorator.
 * @internal
 */
export class PropDecorator {
    constructor(property) {
        this.property = property;
    }
}
/**
 * @internal
 */
export class InputPropDecorator extends PropDecorator {
    constructor(property, alias) {
        super(property);
        this.alias = alias ? alias : this.property;
    }
}
/**
 * @internal
 */
export class FormPropDecorator extends PropDecorator {
}
/**
 * @internal
 */
export class ControlPropDecorator extends PropDecorator {
}
/**
 * Used for tagging dynamic inputs and adding them to the FORM_PROP property
 * of the target constructor.
 */
function makePropertyDecorator(factory) {
    return (target, key) => {
        const ctor = target.constructor;
        if (!ctor[FORM_PROP]) {
            ctor[FORM_PROP] = [];
        }
        ctor[FORM_PROP].push(factory(key));
    };
}
/**
 * Injects the AbstractForm for the dynamic form component.
 */
export function DynamicForm() {
    return makePropertyDecorator((key) => new FormPropDecorator(key));
}
/**
 * Injects the AbstractFormControl of the AbstractForm for the dynamic form component.
 */
export function DynamicFormControl() {
    return makePropertyDecorator((key) => new ControlPropDecorator(key));
}
/**
 * Injects a property of the AbstractForm for the dynamic form component.
 * Inputs are assigned from the FormSchema's 'inputs' property.
 * NOTE:
 * Property values are only available ngOnInit or onDynamicInputChange.
 * @param alias Use this alias to target a property of the AbstractForm. Defaults
 * to the assigned class property.
 * @example
 * <pre>
 *     @Component({ ... })
 *     export class DynamicFormComponent {
 *         @DynamicInput()
 *         property: string
 *     }
 * <pre>
 */
export const DynamicInput = (alias = null) => {
    return makePropertyDecorator((key) => new InputPropDecorator(key, alias));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjb3JhdG9ycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzbWFydC91dGlscy8iLCJzb3VyY2VzIjpbIm1vZHVsZXMvZm9ybS1idWlsZGVyL2RlY29yYXRvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBQ0gseUNBQXlDO0FBRXpDOzs7O0dBSUc7QUFDSCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsYUFBYSxDQUFDO0FBRXZDOzs7R0FHRztBQUNILE1BQU0sT0FBTyxhQUFhO0lBQ3RCLFlBQW1CLFFBQWdCO1FBQWhCLGFBQVEsR0FBUixRQUFRLENBQVE7SUFBRyxDQUFDO0NBQzFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsYUFBYTtJQUVqRCxZQUFZLFFBQWdCLEVBQUUsS0FBb0I7UUFDOUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2hCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDL0MsQ0FBQztDQUNKO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLE9BQU8saUJBQWtCLFNBQVEsYUFBYTtDQUFHO0FBRXZEOztHQUVHO0FBQ0gsTUFBTSxPQUFPLG9CQUFxQixTQUFRLGFBQWE7Q0FBRztBQUUxRDs7O0dBR0c7QUFDSCxTQUFTLHFCQUFxQixDQUFJLE9BQXVDO0lBQ3JFLE9BQU8sQ0FBSSxNQUFTLEVBQUUsR0FBVyxFQUFFLEVBQUU7UUFDakMsTUFBTSxJQUFJLEdBQUksTUFBYyxDQUFDLFdBQWtCLENBQUM7UUFDaEQsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRTtZQUNsQixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDO1NBQ3hCO1FBQ0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUN2QyxDQUFDLENBQUM7QUFDTixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsV0FBVztJQUN2QixPQUFPLHFCQUFxQixDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxJQUFJLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDdEUsQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxVQUFVLGtCQUFrQjtJQUM5QixPQUFPLHFCQUFxQixDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxJQUFJLG9CQUFvQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDekUsQ0FBQztBQUVEOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxDQUFDLFFBQXVCLElBQUksRUFBRSxFQUFFO0lBQ3hELE9BQU8scUJBQXFCLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLElBQUksa0JBQWtCLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7QUFDOUUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTkgU0FQIFNFIG9yIGFuIFNBUCBhZmZpbGlhdGUgY29tcGFueS4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIEBtb2R1bGUgc21hcnR1dGlsc1xuICovXG4vKiB0c2xpbnQ6ZGlzYWJsZTptYXgtY2xhc3Nlcy1wZXItZmlsZSAqL1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICogSW50ZXJuYWwgcHJvcGVydHkgb24gdGhlIGNvbnN0cnVjdG9yIHVzZWQgZm9yIGFkZGluZyBkZWNvcmF0b3IgbWV0YWRhdGFcbiAqIHNvIHRoYXQgaXQgY2FuIGJlIGxhdGVyIHBpY2tlZCB1cCBhZnRlciBjb21wb25lbnQgY29tcGlsYXRpb24uXG4gKi9cbmV4cG9ydCBjb25zdCBGT1JNX1BST1AgPSAnX2Zvcm1fcHJvcF8nO1xuXG4vKipcbiAqIEJhc2UgZGF0YSBQcm9wRGVjb3JhdG9yLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjbGFzcyBQcm9wRGVjb3JhdG9yIHtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgcHJvcGVydHk6IHN0cmluZykge31cbn1cblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNsYXNzIElucHV0UHJvcERlY29yYXRvciBleHRlbmRzIFByb3BEZWNvcmF0b3Ige1xuICAgIHB1YmxpYyBhbGlhczogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKHByb3BlcnR5OiBzdHJpbmcsIGFsaWFzOiBzdHJpbmcgfCBudWxsKSB7XG4gICAgICAgIHN1cGVyKHByb3BlcnR5KTtcbiAgICAgICAgdGhpcy5hbGlhcyA9IGFsaWFzID8gYWxpYXMgOiB0aGlzLnByb3BlcnR5O1xuICAgIH1cbn1cblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNsYXNzIEZvcm1Qcm9wRGVjb3JhdG9yIGV4dGVuZHMgUHJvcERlY29yYXRvciB7fVxuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY2xhc3MgQ29udHJvbFByb3BEZWNvcmF0b3IgZXh0ZW5kcyBQcm9wRGVjb3JhdG9yIHt9XG5cbi8qKlxuICogVXNlZCBmb3IgdGFnZ2luZyBkeW5hbWljIGlucHV0cyBhbmQgYWRkaW5nIHRoZW0gdG8gdGhlIEZPUk1fUFJPUCBwcm9wZXJ0eVxuICogb2YgdGhlIHRhcmdldCBjb25zdHJ1Y3Rvci5cbiAqL1xuZnVuY3Rpb24gbWFrZVByb3BlcnR5RGVjb3JhdG9yPFQ+KGZhY3Rvcnk6IChrZXk6IHN0cmluZykgPT4gUHJvcERlY29yYXRvcikge1xuICAgIHJldHVybiA8Qz4odGFyZ2V0OiBDLCBrZXk6IHN0cmluZykgPT4ge1xuICAgICAgICBjb25zdCBjdG9yID0gKHRhcmdldCBhcyBhbnkpLmNvbnN0cnVjdG9yIGFzIGFueTtcbiAgICAgICAgaWYgKCFjdG9yW0ZPUk1fUFJPUF0pIHtcbiAgICAgICAgICAgIGN0b3JbRk9STV9QUk9QXSA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGN0b3JbRk9STV9QUk9QXS5wdXNoKGZhY3Rvcnkoa2V5KSk7XG4gICAgfTtcbn1cblxuLyoqXG4gKiBJbmplY3RzIHRoZSBBYnN0cmFjdEZvcm0gZm9yIHRoZSBkeW5hbWljIGZvcm0gY29tcG9uZW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gRHluYW1pY0Zvcm0oKSB7XG4gICAgcmV0dXJuIG1ha2VQcm9wZXJ0eURlY29yYXRvcigoa2V5KSA9PiBuZXcgRm9ybVByb3BEZWNvcmF0b3Ioa2V5KSk7XG59XG5cbi8qKlxuICogSW5qZWN0cyB0aGUgQWJzdHJhY3RGb3JtQ29udHJvbCBvZiB0aGUgQWJzdHJhY3RGb3JtIGZvciB0aGUgZHluYW1pYyBmb3JtIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIER5bmFtaWNGb3JtQ29udHJvbCgpIHtcbiAgICByZXR1cm4gbWFrZVByb3BlcnR5RGVjb3JhdG9yKChrZXkpID0+IG5ldyBDb250cm9sUHJvcERlY29yYXRvcihrZXkpKTtcbn1cblxuLyoqXG4gKiBJbmplY3RzIGEgcHJvcGVydHkgb2YgdGhlIEFic3RyYWN0Rm9ybSBmb3IgdGhlIGR5bmFtaWMgZm9ybSBjb21wb25lbnQuXG4gKiBJbnB1dHMgYXJlIGFzc2lnbmVkIGZyb20gdGhlIEZvcm1TY2hlbWEncyAnaW5wdXRzJyBwcm9wZXJ0eS5cbiAqIE5PVEU6XG4gKiBQcm9wZXJ0eSB2YWx1ZXMgYXJlIG9ubHkgYXZhaWxhYmxlIG5nT25Jbml0IG9yIG9uRHluYW1pY0lucHV0Q2hhbmdlLlxuICogQHBhcmFtIGFsaWFzIFVzZSB0aGlzIGFsaWFzIHRvIHRhcmdldCBhIHByb3BlcnR5IG9mIHRoZSBBYnN0cmFjdEZvcm0uIERlZmF1bHRzXG4gKiB0byB0aGUgYXNzaWduZWQgY2xhc3MgcHJvcGVydHkuXG4gKiBAZXhhbXBsZVxuICogPHByZT5cbiAqICAgICBAQ29tcG9uZW50KHsgLi4uIH0pXG4gKiAgICAgZXhwb3J0IGNsYXNzIER5bmFtaWNGb3JtQ29tcG9uZW50IHtcbiAqICAgICAgICAgQER5bmFtaWNJbnB1dCgpXG4gKiAgICAgICAgIHByb3BlcnR5OiBzdHJpbmdcbiAqICAgICB9XG4gKiA8cHJlPlxuICovXG5leHBvcnQgY29uc3QgRHluYW1pY0lucHV0ID0gKGFsaWFzOiBzdHJpbmcgfCBudWxsID0gbnVsbCkgPT4ge1xuICAgIHJldHVybiBtYWtlUHJvcGVydHlEZWNvcmF0b3IoKGtleSkgPT4gbmV3IElucHV0UHJvcERlY29yYXRvcihrZXksIGFsaWFzKSk7XG59O1xuIl19