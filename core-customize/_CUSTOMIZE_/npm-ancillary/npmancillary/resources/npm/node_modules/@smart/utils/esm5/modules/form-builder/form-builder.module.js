/**
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
/**
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
// File named form-builder.module for now cuz of build blocking me to use Module suffix.
import * as tslib_1 from "tslib";
import { ANALYZE_FOR_ENTRY_COMPONENTS, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
// Components
import { FormListerComponent } from './components/form-lister/form-lister.component';
import { FormRendererDirective } from './directives/form-renderer/form-renderer.directive';
// Services
import { ASYNC_VALIDATOR_MAP, COMPONENT_MAP, VALIDATOR_MAP } from './services/injection-tokens';
var FormBuilderModule = /** @class */ (function () {
    function FormBuilderModule() {
    }
    FormBuilderModule_1 = FormBuilderModule;
    FormBuilderModule.forRoot = function (option) {
        return {
            ngModule: FormBuilderModule_1,
            providers: [
                {
                    provide: ANALYZE_FOR_ENTRY_COMPONENTS,
                    useValue: [option.types],
                    multi: true
                },
                {
                    provide: COMPONENT_MAP,
                    useValue: option.types
                },
                {
                    provide: VALIDATOR_MAP,
                    useValue: option.validators
                },
                {
                    provide: ASYNC_VALIDATOR_MAP,
                    useValue: option.asyncValidators
                }
            ]
        };
    };
    var FormBuilderModule_1;
    FormBuilderModule = FormBuilderModule_1 = tslib_1.__decorate([
        NgModule({
            imports: [CommonModule, ReactiveFormsModule],
            declarations: [FormRendererDirective, FormListerComponent],
            entryComponents: [FormListerComponent],
            exports: [FormRendererDirective]
        })
    ], FormBuilderModule);
    return FormBuilderModule;
}());
export { FormBuilderModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1idWlsZGVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzbWFydC91dGlscy8iLCJzb3VyY2VzIjpbIm1vZHVsZXMvZm9ybS1idWlsZGVyL2Zvcm0tYnVpbGRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBQ0gsd0ZBQXdGOztBQUV4RixPQUFPLEVBQUUsNEJBQTRCLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFJckQsYUFBYTtBQUNiLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG9EQUFvRCxDQUFDO0FBRTNGLFdBQVc7QUFDWCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsYUFBYSxFQUFFLGFBQWEsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBUWhHO0lBQUE7SUF5QkEsQ0FBQzswQkF6QlksaUJBQWlCO0lBQ25CLHlCQUFPLEdBQWQsVUFBZSxNQUF5QjtRQUNwQyxPQUFPO1lBQ0gsUUFBUSxFQUFFLG1CQUFpQjtZQUMzQixTQUFTLEVBQUU7Z0JBQ1A7b0JBQ0ksT0FBTyxFQUFFLDRCQUE0QjtvQkFDckMsUUFBUSxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztvQkFDeEIsS0FBSyxFQUFFLElBQUk7aUJBQ2Q7Z0JBQ0Q7b0JBQ0ksT0FBTyxFQUFFLGFBQWE7b0JBQ3RCLFFBQVEsRUFBRSxNQUFNLENBQUMsS0FBSztpQkFDekI7Z0JBQ0Q7b0JBQ0ksT0FBTyxFQUFFLGFBQWE7b0JBQ3RCLFFBQVEsRUFBRSxNQUFNLENBQUMsVUFBVTtpQkFDOUI7Z0JBQ0Q7b0JBQ0ksT0FBTyxFQUFFLG1CQUFtQjtvQkFDNUIsUUFBUSxFQUFFLE1BQU0sQ0FBQyxlQUFlO2lCQUNuQzthQUNKO1NBQ0osQ0FBQztJQUNOLENBQUM7O0lBeEJRLGlCQUFpQjtRQU43QixRQUFRLENBQUM7WUFDTixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsbUJBQW1CLENBQUM7WUFDNUMsWUFBWSxFQUFFLENBQUMscUJBQXFCLEVBQUUsbUJBQW1CLENBQUM7WUFDMUQsZUFBZSxFQUFFLENBQUMsbUJBQW1CLENBQUM7WUFDdEMsT0FBTyxFQUFFLENBQUMscUJBQXFCLENBQUM7U0FDbkMsQ0FBQztPQUNXLGlCQUFpQixDQXlCN0I7SUFBRCx3QkFBQztDQUFBLEFBekJELElBeUJDO1NBekJZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE5IFNBUCBTRSBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBAbW9kdWxlIHNtYXJ0dXRpbHNcbiAqL1xuLy8gRmlsZSBuYW1lZCBmb3JtLWJ1aWxkZXIubW9kdWxlIGZvciBub3cgY3V6IG9mIGJ1aWxkIGJsb2NraW5nIG1lIHRvIHVzZSBNb2R1bGUgc3VmZml4LlxuXG5pbXBvcnQgeyBBTkFMWVpFX0ZPUl9FTlRSWV9DT01QT05FTlRTLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmltcG9ydCB7IEZvcm1CdWlsZGVyQ29uZmlnIH0gZnJvbSAnLi9tb2RlbHMnO1xuXG4vLyBDb21wb25lbnRzXG5pbXBvcnQgeyBGb3JtTGlzdGVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2Zvcm0tbGlzdGVyL2Zvcm0tbGlzdGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGb3JtUmVuZGVyZXJEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvZm9ybS1yZW5kZXJlci9mb3JtLXJlbmRlcmVyLmRpcmVjdGl2ZSc7XG5cbi8vIFNlcnZpY2VzXG5pbXBvcnQgeyBBU1lOQ19WQUxJREFUT1JfTUFQLCBDT01QT05FTlRfTUFQLCBWQUxJREFUT1JfTUFQIH0gZnJvbSAnLi9zZXJ2aWNlcy9pbmplY3Rpb24tdG9rZW5zJztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtGb3JtUmVuZGVyZXJEaXJlY3RpdmUsIEZvcm1MaXN0ZXJDb21wb25lbnRdLFxuICAgIGVudHJ5Q29tcG9uZW50czogW0Zvcm1MaXN0ZXJDb21wb25lbnRdLFxuICAgIGV4cG9ydHM6IFtGb3JtUmVuZGVyZXJEaXJlY3RpdmVdXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1CdWlsZGVyTW9kdWxlIHtcbiAgICBzdGF0aWMgZm9yUm9vdChvcHRpb246IEZvcm1CdWlsZGVyQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuZ01vZHVsZTogRm9ybUJ1aWxkZXJNb2R1bGUsXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHByb3ZpZGU6IEFOQUxZWkVfRk9SX0VOVFJZX0NPTVBPTkVOVFMsXG4gICAgICAgICAgICAgICAgICAgIHVzZVZhbHVlOiBbb3B0aW9uLnR5cGVzXSxcbiAgICAgICAgICAgICAgICAgICAgbXVsdGk6IHRydWVcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvdmlkZTogQ09NUE9ORU5UX01BUCxcbiAgICAgICAgICAgICAgICAgICAgdXNlVmFsdWU6IG9wdGlvbi50eXBlc1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwcm92aWRlOiBWQUxJREFUT1JfTUFQLFxuICAgICAgICAgICAgICAgICAgICB1c2VWYWx1ZTogb3B0aW9uLnZhbGlkYXRvcnNcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvdmlkZTogQVNZTkNfVkFMSURBVE9SX01BUCxcbiAgICAgICAgICAgICAgICAgICAgdXNlVmFsdWU6IG9wdGlvbi5hc3luY1ZhbGlkYXRvcnNcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH07XG4gICAgfVxufVxuIl19