/**
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
import * as tslib_1 from "tslib";
/**
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
/*
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
import * as lodash from 'lodash';
import { Injectable } from '@angular/core';
import { of, BehaviorSubject } from 'rxjs';
import { ModalRef } from '@fundamental-ngx/core';
import { FundamentalModalButtonAction } from '../../interfaces';
var FundamentalModalManagerService = /** @class */ (function () {
    function FundamentalModalManagerService(modalRef) {
        this.modalRef = modalRef;
        this.title = new BehaviorSubject('');
        this.titleSuffix = new BehaviorSubject('');
        this.modalData = new BehaviorSubject({});
        this.component = new BehaviorSubject({});
        this.isDismissButtonVisible = new BehaviorSubject(true);
        this.buttons = new BehaviorSubject([]);
    }
    FundamentalModalManagerService.prototype.init = function () {
        this.modalData.next(this.modalRef.data.modalData);
        this.component.next(this.modalRef.data.component);
        this.buttons.next(this.modalRef.data.templateConfig.buttons || []);
        this.title.next(this.modalRef.data.templateConfig.title);
        this.titleSuffix.next(this.modalRef.data.templateConfig.titleSuffix);
        this.isDismissButtonVisible.next(this.modalRef.data.templateConfig.isDismissButtonVisible);
    };
    // getters
    FundamentalModalManagerService.prototype.getComponent = function () {
        return this.component.asObservable();
    };
    FundamentalModalManagerService.prototype.getTitle = function () {
        return this.title.asObservable();
    };
    FundamentalModalManagerService.prototype.getTitleSuffix = function () {
        return this.titleSuffix.asObservable();
    };
    FundamentalModalManagerService.prototype.getButtons = function () {
        return this.buttons.asObservable();
    };
    FundamentalModalManagerService.prototype.getModalData = function () {
        return this.modalData.asObservable();
    };
    FundamentalModalManagerService.prototype.getIsDismissButtonVisible = function () {
        return this.isDismissButtonVisible.asObservable();
    };
    // header dismiss button
    FundamentalModalManagerService.prototype.setDismissButtonVisibility = function (isVisible) {
        this.isDismissButtonVisible.next(isVisible);
    };
    // title
    FundamentalModalManagerService.prototype.setTitle = function (title) {
        this.title.next(title);
    };
    // buttons
    FundamentalModalManagerService.prototype.addButton = function (button) {
        this.buttons.next(tslib_1.__spread(this.buttons.value, [button]));
    };
    FundamentalModalManagerService.prototype.removeButton = function (id) {
        this.buttons.next(this.buttons.value.filter(function (button) { return button.id !== id; }));
    };
    FundamentalModalManagerService.prototype.removeAllButtons = function () {
        this.buttons.next([]);
    };
    FundamentalModalManagerService.prototype.disableButton = function (id) {
        this.buttons.next(this.buttons.value.map(function (button) {
            return button.id === id ? tslib_1.__assign({}, button, { disabled: true }) : button;
        }));
    };
    FundamentalModalManagerService.prototype.setDismissCallback = function (callback) {
        this.dismissCallback = callback;
    };
    FundamentalModalManagerService.prototype.enableButton = function (id) {
        this.buttons.next(this.buttons.value.map(function (button) {
            return button.id === id ? tslib_1.__assign({}, button, { disabled: false }) : button;
        }));
    };
    FundamentalModalManagerService.prototype.onButtonClicked = function (button) {
        var _this = this;
        var callbackReturnedObservable = button.callback
            ? button.callback()
            : of(null);
        if (button.action !== FundamentalModalButtonAction.None) {
            callbackReturnedObservable.subscribe(function (data) {
                return button.action === FundamentalModalButtonAction.Close
                    ? _this.close(data)
                    : _this.dismiss(data);
            });
        }
    };
    FundamentalModalManagerService.prototype.close = function (data) {
        this.modalRef.close(data);
    };
    FundamentalModalManagerService.prototype.dismiss = function (data) {
        var _this = this;
        this.dismissCallback()
            .then(function () { return _this.modalRef.dismiss(data); })
            .catch(lodash.noop);
    };
    FundamentalModalManagerService.prototype.dismissCallback = function () {
        return Promise.resolve();
    };
    FundamentalModalManagerService.ctorParameters = function () { return [
        { type: ModalRef }
    ]; };
    FundamentalModalManagerService = tslib_1.__decorate([
        Injectable(),
        tslib_1.__metadata("design:paramtypes", [ModalRef])
    ], FundamentalModalManagerService);
    return FundamentalModalManagerService;
}());
export { FundamentalModalManagerService };
//# sourceMappingURL=data:application/json;base64,