/**
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
import * as tslib_1 from "tslib";
/**
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
import * as lodash from 'lodash';
var Alert = /** @class */ (function () {
    function Alert(_alertConf, ALERT_CONFIG_DEFAULTS, fundamentalAlertService, translateService) {
        this._alertConf = _alertConf;
        this.fundamentalAlertService = fundamentalAlertService;
        this.translateService = translateService;
        this._displayed = false;
        lodash.defaultsDeep(this._alertConf, lodash.cloneDeep(ALERT_CONFIG_DEFAULTS));
    }
    Object.defineProperty(Alert.prototype, "alertConf", {
        get: function () {
            return this._alertConf;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Alert.prototype, "message", {
        get: function () {
            return this._alertConf.message;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Alert.prototype, "type", {
        get: function () {
            return this._alertConf.type;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Displays the alert to the user.
     */
    Alert.prototype.show = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, content;
            var _this = this;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (this.isDisplayed()) {
                            return [2 /*return*/];
                        }
                        if (!this._alertConf.message) return [3 /*break*/, 2];
                        _a = this._alertConf;
                        return [4 /*yield*/, this.translateService
                                .get(this._alertConf.message, this._alertConf.messagePlaceholders)
                                .toPromise()];
                    case 1:
                        _a.message = _b.sent();
                        _b.label = 2;
                    case 2:
                        content = typeof this._alertConf.message !== 'undefined'
                            ? this._alertConf.message
                            : this._alertConf.component || '';
                        this._alertRef = this.fundamentalAlertService.open(content, this._alertConf);
                        this._alertRef.afterDismissed.subscribe(function () { return (_this._displayed = false); });
                        this._displayed = true;
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Hides the alert if it is currently being displayed to the user.
     */
    Alert.prototype.hide = function () {
        if (!this.isDisplayed()) {
            return;
        }
        this._alertRef.dismiss();
    };
    Alert.prototype.isDisplayed = function () {
        return this._displayed;
    };
    return Alert;
}());
export { Alert };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac21hcnQvdXRpbHMvIiwic291cmNlcyI6WyJzZXJ2aWNlcy9hbGVydC9hbGVydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7OztHQUdHO0FBQ0gsT0FBTyxLQUFLLE1BQU0sTUFBTSxRQUFRLENBQUM7QUFTakM7SUFJSSxlQUNZLFVBQXdCLEVBQ2hDLHFCQUE2QyxFQUNyQyx1QkFBZ0QsRUFDaEQsZ0JBQWtDO1FBSGxDLGVBQVUsR0FBVixVQUFVLENBQWM7UUFFeEIsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUF5QjtRQUNoRCxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBUHRDLGVBQVUsR0FBWSxLQUFLLENBQUM7UUFTaEMsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxTQUFTLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDO0lBQ2xGLENBQUM7SUFFRCxzQkFBSSw0QkFBUzthQUFiO1lBQ0ksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQzNCLENBQUM7OztPQUFBO0lBRUQsc0JBQUksMEJBQU87YUFBWDtZQUNJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUM7UUFDbkMsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSx1QkFBSTthQUFSO1lBQ0ksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQWMsQ0FBQztRQUMxQyxDQUFDOzs7T0FBQTtJQUVEOztPQUVHO0lBQ1Usb0JBQUksR0FBakI7Ozs7Ozs7d0JBQ0ksSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFLEVBQUU7NEJBQ3BCLHNCQUFPO3lCQUNWOzZCQUVHLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUF2Qix3QkFBdUI7d0JBQ3ZCLEtBQUEsSUFBSSxDQUFDLFVBQVUsQ0FBQTt3QkFBVyxxQkFBTSxJQUFJLENBQUMsZ0JBQWdCO2lDQUNoRCxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxtQkFBbUIsQ0FBQztpQ0FDakUsU0FBUyxFQUFVLEVBQUE7O3dCQUZ4QixHQUFnQixPQUFPLEdBQUcsU0FFRixDQUFDOzs7d0JBR3ZCLE9BQU8sR0FDVCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxLQUFLLFdBQVc7NEJBQzFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU87NEJBQ3pCLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQUM7d0JBQzFDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO3dCQUM3RSxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsY0FBTSxPQUFBLENBQUMsS0FBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUMsRUFBekIsQ0FBeUIsQ0FBQyxDQUFDO3dCQUV6RSxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQzs7Ozs7S0FDMUI7SUFFRDs7T0FFRztJQUNJLG9CQUFJLEdBQVg7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxFQUFFO1lBQ3JCLE9BQU87U0FDVjtRQUVELElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVNLDJCQUFXLEdBQWxCO1FBQ0ksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQzNCLENBQUM7SUFDTCxZQUFDO0FBQUQsQ0FBQyxBQS9ERCxJQStEQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE5IFNBUCBTRSBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBAbW9kdWxlIHNtYXJ0dXRpbHNcbiAqL1xuaW1wb3J0ICogYXMgbG9kYXNoIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQge1xuICAgIEFsZXJ0Q29uZmlnIGFzIEZ1bmRhbWVudGFsQWxlcnRDb25maWcsXG4gICAgQWxlcnRSZWYsXG4gICAgQWxlcnRTZXJ2aWNlIGFzIEZ1bmRhbWVudGFsQWxlcnRTZXJ2aWNlXG59IGZyb20gJ0BmdW5kYW1lbnRhbC1uZ3gvY29yZSc7XG5pbXBvcnQgeyBJQWxlcnRDb25maWcgfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzJztcblxuZXhwb3J0IGNsYXNzIEFsZXJ0IHtcbiAgICBwcml2YXRlIF9kaXNwbGF5ZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBwcml2YXRlIF9hbGVydFJlZiE6IEFsZXJ0UmVmO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgX2FsZXJ0Q29uZjogSUFsZXJ0Q29uZmlnLFxuICAgICAgICBBTEVSVF9DT05GSUdfREVGQVVMVFM6IEZ1bmRhbWVudGFsQWxlcnRDb25maWcsXG4gICAgICAgIHByaXZhdGUgZnVuZGFtZW50YWxBbGVydFNlcnZpY2U6IEZ1bmRhbWVudGFsQWxlcnRTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIHRyYW5zbGF0ZVNlcnZpY2U6IFRyYW5zbGF0ZVNlcnZpY2VcbiAgICApIHtcbiAgICAgICAgbG9kYXNoLmRlZmF1bHRzRGVlcCh0aGlzLl9hbGVydENvbmYsIGxvZGFzaC5jbG9uZURlZXAoQUxFUlRfQ09ORklHX0RFRkFVTFRTKSk7XG4gICAgfVxuXG4gICAgZ2V0IGFsZXJ0Q29uZigpOiBJQWxlcnRDb25maWcge1xuICAgICAgICByZXR1cm4gdGhpcy5fYWxlcnRDb25mO1xuICAgIH1cblxuICAgIGdldCBtZXNzYWdlKCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hbGVydENvbmYubWVzc2FnZTtcbiAgICB9XG5cbiAgICBnZXQgdHlwZSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5fYWxlcnRDb25mLnR5cGUgYXMgc3RyaW5nO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERpc3BsYXlzIHRoZSBhbGVydCB0byB0aGUgdXNlci5cbiAgICAgKi9cbiAgICBwdWJsaWMgYXN5bmMgc2hvdygpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgaWYgKHRoaXMuaXNEaXNwbGF5ZWQoKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuX2FsZXJ0Q29uZi5tZXNzYWdlKSB7XG4gICAgICAgICAgICB0aGlzLl9hbGVydENvbmYubWVzc2FnZSA9IGF3YWl0IHRoaXMudHJhbnNsYXRlU2VydmljZVxuICAgICAgICAgICAgICAgIC5nZXQodGhpcy5fYWxlcnRDb25mLm1lc3NhZ2UsIHRoaXMuX2FsZXJ0Q29uZi5tZXNzYWdlUGxhY2Vob2xkZXJzKVxuICAgICAgICAgICAgICAgIC50b1Byb21pc2U8c3RyaW5nPigpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgY29udGVudCA9XG4gICAgICAgICAgICB0eXBlb2YgdGhpcy5fYWxlcnRDb25mLm1lc3NhZ2UgIT09ICd1bmRlZmluZWQnXG4gICAgICAgICAgICAgICAgPyB0aGlzLl9hbGVydENvbmYubWVzc2FnZVxuICAgICAgICAgICAgICAgIDogdGhpcy5fYWxlcnRDb25mLmNvbXBvbmVudCB8fCAnJztcbiAgICAgICAgdGhpcy5fYWxlcnRSZWYgPSB0aGlzLmZ1bmRhbWVudGFsQWxlcnRTZXJ2aWNlLm9wZW4oY29udGVudCwgdGhpcy5fYWxlcnRDb25mKTtcbiAgICAgICAgdGhpcy5fYWxlcnRSZWYuYWZ0ZXJEaXNtaXNzZWQuc3Vic2NyaWJlKCgpID0+ICh0aGlzLl9kaXNwbGF5ZWQgPSBmYWxzZSkpO1xuXG4gICAgICAgIHRoaXMuX2Rpc3BsYXllZCA9IHRydWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSGlkZXMgdGhlIGFsZXJ0IGlmIGl0IGlzIGN1cnJlbnRseSBiZWluZyBkaXNwbGF5ZWQgdG8gdGhlIHVzZXIuXG4gICAgICovXG4gICAgcHVibGljIGhpZGUoKTogdm9pZCB7XG4gICAgICAgIGlmICghdGhpcy5pc0Rpc3BsYXllZCgpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9hbGVydFJlZi5kaXNtaXNzKCk7XG4gICAgfVxuXG4gICAgcHVibGljIGlzRGlzcGxheWVkKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fZGlzcGxheWVkO1xuICAgIH1cbn1cbiJdfQ==