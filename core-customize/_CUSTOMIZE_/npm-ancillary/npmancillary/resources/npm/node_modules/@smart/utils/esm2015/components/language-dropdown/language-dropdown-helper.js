/**
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
/**
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
export var LanguageSortStrategy;
(function (LanguageSortStrategy) {
    LanguageSortStrategy["Default"] = "default";
    LanguageSortStrategy["None"] = "none";
})(LanguageSortStrategy || (LanguageSortStrategy = {}));
// @dynamic
export class LanguageDropdownHelper {
    static findSelectLanguageWithIsoCodePredicate(isoCode) {
        return (item) => item.value.isoCode === isoCode;
    }
    /**
     * Finds the language with a specified isoCode.
     *
     * @param {string} isoCode
     * @param {IToolingLanguage[]} languages
     * @returns {IToolingLanguage}
     */
    static findLanguageWithIsoCode(isoCode, languages) {
        return languages.find((language) => language.isoCode === isoCode);
    }
    /**
     * Returns an ordered language array by name and sets the selected language at the beginning.
     *
     * @param {IToolingLanguage} selectedLanguage
     * @param {IToolingLanguage[]} languages
     * @param {ILanguageSortConfig} config
     * @returns {IToolingLanguage[]}
     */
    static order(selectedLanguage, languages, config = { strategy: LanguageSortStrategy.Default }) {
        switch (config.strategy) {
            case LanguageSortStrategy.Default:
                const orderedLanguages = languages
                    .filter((language) => language.isoCode !== selectedLanguage.isoCode)
                    .sort((a, b) => {
                    return a.isoCode.localeCompare(b.isoCode);
                });
                return [selectedLanguage, ...orderedLanguages];
            case LanguageSortStrategy.None:
                return languages;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2UtZHJvcGRvd24taGVscGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNtYXJ0L3V0aWxzLyIsInNvdXJjZXMiOlsiY29tcG9uZW50cy9sYW5ndWFnZS1kcm9wZG93bi9sYW5ndWFnZS1kcm9wZG93bi1oZWxwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBS0gsTUFBTSxDQUFOLElBQVksb0JBR1g7QUFIRCxXQUFZLG9CQUFvQjtJQUM1QiwyQ0FBbUIsQ0FBQTtJQUNuQixxQ0FBYSxDQUFBO0FBQ2pCLENBQUMsRUFIVyxvQkFBb0IsS0FBcEIsb0JBQW9CLFFBRy9CO0FBS0QsV0FBVztBQUNYLE1BQU0sT0FBTyxzQkFBc0I7SUFDL0IsTUFBTSxDQUFDLHNDQUFzQyxDQUN6QyxPQUFlO1FBRWYsT0FBTyxDQUFDLElBQW1DLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxLQUFLLE9BQU8sQ0FBQztJQUNuRixDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ0gsTUFBTSxDQUFDLHVCQUF1QixDQUMxQixPQUFlLEVBQ2YsU0FBNkI7UUFFN0IsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxLQUFLLE9BQU8sQ0FBcUIsQ0FBQztJQUMxRixDQUFDO0lBRUQ7Ozs7Ozs7T0FPRztJQUVILE1BQU0sQ0FBQyxLQUFLLENBQ1IsZ0JBQWtDLEVBQ2xDLFNBQTZCLEVBQzdCLFNBQThCLEVBQUUsUUFBUSxFQUFFLG9CQUFvQixDQUFDLE9BQU8sRUFBRTtRQUV4RSxRQUFRLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDckIsS0FBSyxvQkFBb0IsQ0FBQyxPQUFPO2dCQUM3QixNQUFNLGdCQUFnQixHQUFHLFNBQVM7cUJBQzdCLE1BQU0sQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sS0FBSyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUM7cUJBQ25FLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtvQkFDWCxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDOUMsQ0FBQyxDQUFDLENBQUM7Z0JBRVAsT0FBTyxDQUFDLGdCQUFnQixFQUFFLEdBQUcsZ0JBQWdCLENBQUMsQ0FBQztZQUVuRCxLQUFLLG9CQUFvQixDQUFDLElBQUk7Z0JBQzFCLE9BQU8sU0FBUyxDQUFDO1NBQ3hCO0lBQ0wsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTkgU0FQIFNFIG9yIGFuIFNBUCBhZmZpbGlhdGUgY29tcGFueS4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIEBtb2R1bGUgc21hcnR1dGlsc1xuICovXG5cbmltcG9ydCB7IElTZWxlY3RJdGVtIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBJVG9vbGluZ0xhbmd1YWdlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMnO1xuXG5leHBvcnQgZW51bSBMYW5ndWFnZVNvcnRTdHJhdGVneSB7XG4gICAgRGVmYXVsdCA9ICdkZWZhdWx0JyxcbiAgICBOb25lID0gJ25vbmUnXG59XG5leHBvcnQgaW50ZXJmYWNlIElMYW5ndWFnZVNvcnRDb25maWcge1xuICAgIHN0cmF0ZWd5OiBMYW5ndWFnZVNvcnRTdHJhdGVneTtcbn1cblxuLy8gQGR5bmFtaWNcbmV4cG9ydCBjbGFzcyBMYW5ndWFnZURyb3Bkb3duSGVscGVyIHtcbiAgICBzdGF0aWMgZmluZFNlbGVjdExhbmd1YWdlV2l0aElzb0NvZGVQcmVkaWNhdGUoXG4gICAgICAgIGlzb0NvZGU6IHN0cmluZ1xuICAgICk6IChpdGVtOiBJU2VsZWN0SXRlbTxJVG9vbGluZ0xhbmd1YWdlPikgPT4gYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAoaXRlbTogSVNlbGVjdEl0ZW08SVRvb2xpbmdMYW5ndWFnZT4pID0+IGl0ZW0udmFsdWUuaXNvQ29kZSA9PT0gaXNvQ29kZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBGaW5kcyB0aGUgbGFuZ3VhZ2Ugd2l0aCBhIHNwZWNpZmllZCBpc29Db2RlLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGlzb0NvZGVcbiAgICAgKiBAcGFyYW0ge0lUb29saW5nTGFuZ3VhZ2VbXX0gbGFuZ3VhZ2VzXG4gICAgICogQHJldHVybnMge0lUb29saW5nTGFuZ3VhZ2V9XG4gICAgICovXG4gICAgc3RhdGljIGZpbmRMYW5ndWFnZVdpdGhJc29Db2RlKFxuICAgICAgICBpc29Db2RlOiBzdHJpbmcsXG4gICAgICAgIGxhbmd1YWdlczogSVRvb2xpbmdMYW5ndWFnZVtdXG4gICAgKTogSVRvb2xpbmdMYW5ndWFnZSB7XG4gICAgICAgIHJldHVybiBsYW5ndWFnZXMuZmluZCgobGFuZ3VhZ2UpID0+IGxhbmd1YWdlLmlzb0NvZGUgPT09IGlzb0NvZGUpIGFzIElUb29saW5nTGFuZ3VhZ2U7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBvcmRlcmVkIGxhbmd1YWdlIGFycmF5IGJ5IG5hbWUgYW5kIHNldHMgdGhlIHNlbGVjdGVkIGxhbmd1YWdlIGF0IHRoZSBiZWdpbm5pbmcuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0lUb29saW5nTGFuZ3VhZ2V9IHNlbGVjdGVkTGFuZ3VhZ2VcbiAgICAgKiBAcGFyYW0ge0lUb29saW5nTGFuZ3VhZ2VbXX0gbGFuZ3VhZ2VzXG4gICAgICogQHBhcmFtIHtJTGFuZ3VhZ2VTb3J0Q29uZmlnfSBjb25maWdcbiAgICAgKiBAcmV0dXJucyB7SVRvb2xpbmdMYW5ndWFnZVtdfVxuICAgICAqL1xuXG4gICAgc3RhdGljIG9yZGVyKFxuICAgICAgICBzZWxlY3RlZExhbmd1YWdlOiBJVG9vbGluZ0xhbmd1YWdlLFxuICAgICAgICBsYW5ndWFnZXM6IElUb29saW5nTGFuZ3VhZ2VbXSxcbiAgICAgICAgY29uZmlnOiBJTGFuZ3VhZ2VTb3J0Q29uZmlnID0geyBzdHJhdGVneTogTGFuZ3VhZ2VTb3J0U3RyYXRlZ3kuRGVmYXVsdCB9XG4gICAgKTogSVRvb2xpbmdMYW5ndWFnZVtdIHtcbiAgICAgICAgc3dpdGNoIChjb25maWcuc3RyYXRlZ3kpIHtcbiAgICAgICAgICAgIGNhc2UgTGFuZ3VhZ2VTb3J0U3RyYXRlZ3kuRGVmYXVsdDpcbiAgICAgICAgICAgICAgICBjb25zdCBvcmRlcmVkTGFuZ3VhZ2VzID0gbGFuZ3VhZ2VzXG4gICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoKGxhbmd1YWdlKSA9PiBsYW5ndWFnZS5pc29Db2RlICE9PSBzZWxlY3RlZExhbmd1YWdlLmlzb0NvZGUpXG4gICAgICAgICAgICAgICAgICAgIC5zb3J0KChhLCBiKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYS5pc29Db2RlLmxvY2FsZUNvbXBhcmUoYi5pc29Db2RlKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gW3NlbGVjdGVkTGFuZ3VhZ2UsIC4uLm9yZGVyZWRMYW5ndWFnZXNdO1xuXG4gICAgICAgICAgICBjYXNlIExhbmd1YWdlU29ydFN0cmF0ZWd5Lk5vbmU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxhbmd1YWdlcztcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==