/**
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
import { FormArray } from '@angular/forms';
import { AbstractForm } from './abstract-form';
import { ComponentType } from './interfaces';
import { InputProperties } from './input-properties';
export declare class FormList extends AbstractForm {
    forms: AbstractForm[];
    /**
     * @override
     */
    readonly control: FormArray;
    constructor(component: ComponentType, control: FormArray, inputs: InputProperties, parent: AbstractForm | null, persist: boolean, forms?: AbstractForm[]);
    /**
     * @override
     * Implements the abstract getPersistedValue() method.
     */
    getPersistedValue(): any[];
    /**
     * Adds a form element to the end of the list.
     *
     * @param form
     */
    addFormElement(form: AbstractForm): void;
    /**
     * Removes a form element from the list.
     *
     * @param {string} index.
     */
    removeFormElement(index: number): void;
    /**
     * Returns an element at an index.
     *
     * @param index An index inbounds of the list.
     */
    formElementAt(index: number): AbstractForm | null;
    /**
     * The size of the list.
     */
    size(): number;
    /**
     * Swaps a form element in the array.
     *
     * @param a The index of form a.
     * @param b The index of form b.
     */
    swapFormElements(a: number, b: number): void;
    /**
     * Moves a form element in the array to a new position.
     *
     * @param from The previous index.
     * @param to The targeted index.
     */
    moveFormElement(from: number, to: number): void;
    /**
     * Checks of the index is in bounds.
     *
     * @internal
     * @param index
     */
    private _isInBounds;
}
