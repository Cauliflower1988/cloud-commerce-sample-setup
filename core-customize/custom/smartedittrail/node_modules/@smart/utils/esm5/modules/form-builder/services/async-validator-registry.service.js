/**
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
import * as tslib_1 from "tslib";
/**
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
import { Inject, Injectable, Optional } from '@angular/core';
import { Registry } from './registry';
import { ASYNC_VALIDATOR_MAP } from './injection-tokens';
import * as i0 from "@angular/core";
import * as i1 from "./injection-tokens";
/**
 * A registry for asynchronous validators.
 */
var AsyncValidatorRegistryService = /** @class */ (function (_super) {
    tslib_1.__extends(AsyncValidatorRegistryService, _super);
    function AsyncValidatorRegistryService(asyncValidators) {
        return _super.call(this, asyncValidators) || this;
    }
    AsyncValidatorRegistryService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ASYNC_VALIDATOR_MAP,] }] }
    ]; };
    AsyncValidatorRegistryService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function AsyncValidatorRegistryService_Factory() { return new AsyncValidatorRegistryService(i0.ɵɵinject(i1.ASYNC_VALIDATOR_MAP, 8)); }, token: AsyncValidatorRegistryService, providedIn: "root" });
    AsyncValidatorRegistryService = tslib_1.__decorate([
        Injectable({
            providedIn: 'root'
        }),
        tslib_1.__param(0, Optional()),
        tslib_1.__param(0, Inject(ASYNC_VALIDATOR_MAP)),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], AsyncValidatorRegistryService);
    return AsyncValidatorRegistryService;
}(Registry));
export { AsyncValidatorRegistryService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXN5bmMtdmFsaWRhdG9yLXJlZ2lzdHJ5LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac21hcnQvdXRpbHMvIiwic291cmNlcyI6WyJtb2R1bGVzL2Zvcm0tYnVpbGRlci9zZXJ2aWNlcy9hc3luYy12YWxpZGF0b3ItcmVnaXN0cnkuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7OztHQUdHO0FBQ0gsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzdELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdEMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7OztBQU16RDs7R0FFRztBQUlIO0lBQW1ELHlEQUE4QztJQUM3Rix1Q0FHSSxlQUFrQztlQUVsQyxrQkFBTSxlQUFlLENBQUM7SUFDMUIsQ0FBQzs7Z0RBTEksUUFBUSxZQUNSLE1BQU0sU0FBQyxtQkFBbUI7OztJQUh0Qiw2QkFBNkI7UUFIekMsVUFBVSxDQUFDO1lBQ1IsVUFBVSxFQUFFLE1BQU07U0FDckIsQ0FBQztRQUdPLG1CQUFBLFFBQVEsRUFBRSxDQUFBO1FBQ1YsbUJBQUEsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUE7O09BSHZCLDZCQUE2QixDQVF6Qzt3Q0E1QkQ7Q0E0QkMsQUFSRCxDQUFtRCxRQUFRLEdBUTFEO1NBUlksNkJBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTkgU0FQIFNFIG9yIGFuIFNBUCBhZmZpbGlhdGUgY29tcGFueS4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIEBtb2R1bGUgc21hcnR1dGlsc1xuICovXG5pbXBvcnQgeyBJbmplY3QsIEluamVjdGFibGUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBc3luY1ZhbGlkYXRvckZuIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBSZWdpc3RyeSB9IGZyb20gJy4vcmVnaXN0cnknO1xuaW1wb3J0IHsgQVNZTkNfVkFMSURBVE9SX01BUCB9IGZyb20gJy4vaW5qZWN0aW9uLXRva2Vucyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXN5bmNWYWxpZGF0b3JNYXAge1xuICAgIFtuYW1lOiBzdHJpbmddOiAoLi4uYXJnczogYW55W10pID0+IEFzeW5jVmFsaWRhdG9yRm47XG59XG5cbi8qKlxuICogQSByZWdpc3RyeSBmb3IgYXN5bmNocm9ub3VzIHZhbGlkYXRvcnMuXG4gKi9cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgQXN5bmNWYWxpZGF0b3JSZWdpc3RyeVNlcnZpY2UgZXh0ZW5kcyBSZWdpc3RyeTwoLi4uYXJnczogYW55W10pID0+IEFzeW5jVmFsaWRhdG9yRm4+IHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQE9wdGlvbmFsKClcbiAgICAgICAgQEluamVjdChBU1lOQ19WQUxJREFUT1JfTUFQKVxuICAgICAgICBhc3luY1ZhbGlkYXRvcnM6IEFzeW5jVmFsaWRhdG9yTWFwXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKGFzeW5jVmFsaWRhdG9ycyk7XG4gICAgfVxufVxuIl19