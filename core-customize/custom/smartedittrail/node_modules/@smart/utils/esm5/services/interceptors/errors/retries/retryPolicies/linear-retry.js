/**
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
/**
 * @ngdoc object
 * @name @smartutils.object:LINEAR_RETRY_DEFAULT_SETTING
 *
 * @description
 * The setting object to be used as default values for retry.
 */
export var LINEAR_RETRY_DEFAULT_SETTING = {
    MAX_ATTEMPT: 5,
    MAX_BACKOFF: 32000,
    MIN_BACKOFF: 0,
    RETRY_INTERVAL: 500
};
/**
 * @ngdoc service
 * @name @smartutils.services:linearRetry
 * @description
 * When used by a retry strategy, this service could provide a linear delay time to be used by the strategy before the next request is sent. The service also provides functionality to check if it is possible to perform a next retry.
 */
var LinearRetry = /** @class */ (function () {
    function LinearRetry() {
    }
    LinearRetry.prototype.calculateNextDelay = function (attemptCount, retryInterval, maxBackoff, minBackoff) {
        maxBackoff = maxBackoff || LINEAR_RETRY_DEFAULT_SETTING.MAX_BACKOFF;
        minBackoff = minBackoff || LINEAR_RETRY_DEFAULT_SETTING.MIN_BACKOFF;
        retryInterval = retryInterval || LINEAR_RETRY_DEFAULT_SETTING.RETRY_INTERVAL;
        var waveShield = minBackoff + Math.random();
        return Math.min(attemptCount * retryInterval + waveShield, maxBackoff);
    };
    LinearRetry.prototype.canRetry = function (attemptCount, maxAttempt) {
        maxAttempt = maxAttempt || LINEAR_RETRY_DEFAULT_SETTING.MAX_ATTEMPT;
        return attemptCount <= maxAttempt;
    };
    return LinearRetry;
}());
export { LinearRetry };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluZWFyLXJldHJ5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNtYXJ0L3V0aWxzLyIsInNvdXJjZXMiOlsic2VydmljZXMvaW50ZXJjZXB0b3JzL2Vycm9ycy9yZXRyaWVzL3JldHJ5UG9saWNpZXMvbGluZWFyLXJldHJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBOzs7Ozs7R0FNRztBQUNILE1BQU0sQ0FBQyxJQUFNLDRCQUE0QixHQUFHO0lBQ3hDLFdBQVcsRUFBRSxDQUFDO0lBQ2QsV0FBVyxFQUFFLEtBQUs7SUFDbEIsV0FBVyxFQUFFLENBQUM7SUFDZCxjQUFjLEVBQUUsR0FBRztDQUN0QixDQUFDO0FBRUY7Ozs7O0dBS0c7QUFDSDtJQUFBO0lBbUJBLENBQUM7SUFsQkcsd0NBQWtCLEdBQWxCLFVBQ0ksWUFBb0IsRUFDcEIsYUFBc0IsRUFDdEIsVUFBbUIsRUFDbkIsVUFBbUI7UUFFbkIsVUFBVSxHQUFHLFVBQVUsSUFBSSw0QkFBNEIsQ0FBQyxXQUFXLENBQUM7UUFDcEUsVUFBVSxHQUFHLFVBQVUsSUFBSSw0QkFBNEIsQ0FBQyxXQUFXLENBQUM7UUFDcEUsYUFBYSxHQUFHLGFBQWEsSUFBSSw0QkFBNEIsQ0FBQyxjQUFjLENBQUM7UUFFN0UsSUFBTSxVQUFVLEdBQUcsVUFBVSxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUM5QyxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxHQUFHLGFBQWEsR0FBRyxVQUFVLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVELDhCQUFRLEdBQVIsVUFBUyxZQUFvQixFQUFFLFVBQW1CO1FBQzlDLFVBQVUsR0FBRyxVQUFVLElBQUksNEJBQTRCLENBQUMsV0FBVyxDQUFDO1FBQ3BFLE9BQU8sWUFBWSxJQUFJLFVBQVUsQ0FBQztJQUN0QyxDQUFDO0lBQ0wsa0JBQUM7QUFBRCxDQUFDLEFBbkJELElBbUJDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTkgU0FQIFNFIG9yIGFuIFNBUCBhZmZpbGlhdGUgY29tcGFueS4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIEBtb2R1bGUgc21hcnR1dGlsc1xuICovXG5pbXBvcnQgeyBJUmV0cnkgfSBmcm9tICcuL2ktcmV0cnknO1xuLyoqXG4gKiBAbmdkb2Mgb2JqZWN0XG4gKiBAbmFtZSBAc21hcnR1dGlscy5vYmplY3Q6TElORUFSX1JFVFJZX0RFRkFVTFRfU0VUVElOR1xuICpcbiAqIEBkZXNjcmlwdGlvblxuICogVGhlIHNldHRpbmcgb2JqZWN0IHRvIGJlIHVzZWQgYXMgZGVmYXVsdCB2YWx1ZXMgZm9yIHJldHJ5LlxuICovXG5leHBvcnQgY29uc3QgTElORUFSX1JFVFJZX0RFRkFVTFRfU0VUVElORyA9IHtcbiAgICBNQVhfQVRURU1QVDogNSxcbiAgICBNQVhfQkFDS09GRjogMzIwMDAsXG4gICAgTUlOX0JBQ0tPRkY6IDAsXG4gICAgUkVUUllfSU5URVJWQUw6IDUwMFxufTtcblxuLyoqXG4gKiBAbmdkb2Mgc2VydmljZVxuICogQG5hbWUgQHNtYXJ0dXRpbHMuc2VydmljZXM6bGluZWFyUmV0cnlcbiAqIEBkZXNjcmlwdGlvblxuICogV2hlbiB1c2VkIGJ5IGEgcmV0cnkgc3RyYXRlZ3ksIHRoaXMgc2VydmljZSBjb3VsZCBwcm92aWRlIGEgbGluZWFyIGRlbGF5IHRpbWUgdG8gYmUgdXNlZCBieSB0aGUgc3RyYXRlZ3kgYmVmb3JlIHRoZSBuZXh0IHJlcXVlc3QgaXMgc2VudC4gVGhlIHNlcnZpY2UgYWxzbyBwcm92aWRlcyBmdW5jdGlvbmFsaXR5IHRvIGNoZWNrIGlmIGl0IGlzIHBvc3NpYmxlIHRvIHBlcmZvcm0gYSBuZXh0IHJldHJ5LlxuICovXG5leHBvcnQgY2xhc3MgTGluZWFyUmV0cnkgaW1wbGVtZW50cyBJUmV0cnkge1xuICAgIGNhbGN1bGF0ZU5leHREZWxheShcbiAgICAgICAgYXR0ZW1wdENvdW50OiBudW1iZXIsXG4gICAgICAgIHJldHJ5SW50ZXJ2YWw/OiBudW1iZXIsXG4gICAgICAgIG1heEJhY2tvZmY/OiBudW1iZXIsXG4gICAgICAgIG1pbkJhY2tvZmY/OiBudW1iZXJcbiAgICApOiBudW1iZXIge1xuICAgICAgICBtYXhCYWNrb2ZmID0gbWF4QmFja29mZiB8fCBMSU5FQVJfUkVUUllfREVGQVVMVF9TRVRUSU5HLk1BWF9CQUNLT0ZGO1xuICAgICAgICBtaW5CYWNrb2ZmID0gbWluQmFja29mZiB8fCBMSU5FQVJfUkVUUllfREVGQVVMVF9TRVRUSU5HLk1JTl9CQUNLT0ZGO1xuICAgICAgICByZXRyeUludGVydmFsID0gcmV0cnlJbnRlcnZhbCB8fCBMSU5FQVJfUkVUUllfREVGQVVMVF9TRVRUSU5HLlJFVFJZX0lOVEVSVkFMO1xuXG4gICAgICAgIGNvbnN0IHdhdmVTaGllbGQgPSBtaW5CYWNrb2ZmICsgTWF0aC5yYW5kb20oKTtcbiAgICAgICAgcmV0dXJuIE1hdGgubWluKGF0dGVtcHRDb3VudCAqIHJldHJ5SW50ZXJ2YWwgKyB3YXZlU2hpZWxkLCBtYXhCYWNrb2ZmKTtcbiAgICB9XG5cbiAgICBjYW5SZXRyeShhdHRlbXB0Q291bnQ6IG51bWJlciwgbWF4QXR0ZW1wdD86IG51bWJlcik6IGJvb2xlYW4ge1xuICAgICAgICBtYXhBdHRlbXB0ID0gbWF4QXR0ZW1wdCB8fCBMSU5FQVJfUkVUUllfREVGQVVMVF9TRVRUSU5HLk1BWF9BVFRFTVBUO1xuICAgICAgICByZXR1cm4gYXR0ZW1wdENvdW50IDw9IG1heEF0dGVtcHQ7XG4gICAgfVxufVxuIl19