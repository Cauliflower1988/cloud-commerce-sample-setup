/**
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
/**
 * @ngdoc object
 * @name @smartutils.object:SIMPLE_RETRY_DEFAULT_SETTING
 *
 * @description
 * The setting object to be used as default values for retry.
 */
export var SIMPLE_RETRY_DEFAULT_SETTING = {
    MAX_ATTEMPT: 5,
    MIN_BACKOFF: 0,
    RETRY_INTERVAL: 500
};
/**
 * @ngdoc service
 * @name @smartutils.services:simpleRetry
 * @description
 * When used by a retry strategy, this service could provide a simple fixed delay time to be used by the strategy before the next request is sent. The service also provides functionality to check if it is possible to perform a next retry.
 */
var SimpleRetry = /** @class */ (function () {
    function SimpleRetry() {
    }
    SimpleRetry.prototype.calculateNextDelay = function (retryInterval, minBackoff) {
        minBackoff = minBackoff || SIMPLE_RETRY_DEFAULT_SETTING.MIN_BACKOFF;
        retryInterval = retryInterval || SIMPLE_RETRY_DEFAULT_SETTING.RETRY_INTERVAL;
        var waveShield = minBackoff + Math.random();
        return retryInterval + waveShield;
    };
    SimpleRetry.prototype.canRetry = function (attemptCount, _maxAttempt) {
        var maxAttempt = _maxAttempt || SIMPLE_RETRY_DEFAULT_SETTING.MAX_ATTEMPT;
        return attemptCount <= maxAttempt;
    };
    return SimpleRetry;
}());
export { SimpleRetry };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltcGxlLXJldHJ5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNtYXJ0L3V0aWxzLyIsInNvdXJjZXMiOlsic2VydmljZXMvaW50ZXJjZXB0b3JzL2Vycm9ycy9yZXRyaWVzL3JldHJ5UG9saWNpZXMvc2ltcGxlLXJldHJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBOzs7Ozs7R0FNRztBQUNILE1BQU0sQ0FBQyxJQUFNLDRCQUE0QixHQUFHO0lBQ3hDLFdBQVcsRUFBRSxDQUFDO0lBQ2QsV0FBVyxFQUFFLENBQUM7SUFDZCxjQUFjLEVBQUUsR0FBRztDQUN0QixDQUFDO0FBRUY7Ozs7O0dBS0c7QUFDSDtJQUFBO0lBYUEsQ0FBQztJQVpHLHdDQUFrQixHQUFsQixVQUFtQixhQUFzQixFQUFFLFVBQW1CO1FBQzFELFVBQVUsR0FBRyxVQUFVLElBQUksNEJBQTRCLENBQUMsV0FBVyxDQUFDO1FBQ3BFLGFBQWEsR0FBRyxhQUFhLElBQUksNEJBQTRCLENBQUMsY0FBYyxDQUFDO1FBRTdFLElBQU0sVUFBVSxHQUFHLFVBQVUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDOUMsT0FBTyxhQUFhLEdBQUcsVUFBVSxDQUFDO0lBQ3RDLENBQUM7SUFFRCw4QkFBUSxHQUFSLFVBQVMsWUFBb0IsRUFBRSxXQUFvQjtRQUMvQyxJQUFNLFVBQVUsR0FBRyxXQUFXLElBQUksNEJBQTRCLENBQUMsV0FBVyxDQUFDO1FBQzNFLE9BQU8sWUFBWSxJQUFJLFVBQVUsQ0FBQztJQUN0QyxDQUFDO0lBQ0wsa0JBQUM7QUFBRCxDQUFDLEFBYkQsSUFhQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE5IFNBUCBTRSBvciBhbiBTQVAgYWZmaWxpYXRlIGNvbXBhbnkuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBAbW9kdWxlIHNtYXJ0dXRpbHNcbiAqL1xuaW1wb3J0IHsgSVJldHJ5IH0gZnJvbSAnLi9pLXJldHJ5Jztcbi8qKlxuICogQG5nZG9jIG9iamVjdFxuICogQG5hbWUgQHNtYXJ0dXRpbHMub2JqZWN0OlNJTVBMRV9SRVRSWV9ERUZBVUxUX1NFVFRJTkdcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBzZXR0aW5nIG9iamVjdCB0byBiZSB1c2VkIGFzIGRlZmF1bHQgdmFsdWVzIGZvciByZXRyeS5cbiAqL1xuZXhwb3J0IGNvbnN0IFNJTVBMRV9SRVRSWV9ERUZBVUxUX1NFVFRJTkcgPSB7XG4gICAgTUFYX0FUVEVNUFQ6IDUsXG4gICAgTUlOX0JBQ0tPRkY6IDAsXG4gICAgUkVUUllfSU5URVJWQUw6IDUwMFxufTtcblxuLyoqXG4gKiBAbmdkb2Mgc2VydmljZVxuICogQG5hbWUgQHNtYXJ0dXRpbHMuc2VydmljZXM6c2ltcGxlUmV0cnlcbiAqIEBkZXNjcmlwdGlvblxuICogV2hlbiB1c2VkIGJ5IGEgcmV0cnkgc3RyYXRlZ3ksIHRoaXMgc2VydmljZSBjb3VsZCBwcm92aWRlIGEgc2ltcGxlIGZpeGVkIGRlbGF5IHRpbWUgdG8gYmUgdXNlZCBieSB0aGUgc3RyYXRlZ3kgYmVmb3JlIHRoZSBuZXh0IHJlcXVlc3QgaXMgc2VudC4gVGhlIHNlcnZpY2UgYWxzbyBwcm92aWRlcyBmdW5jdGlvbmFsaXR5IHRvIGNoZWNrIGlmIGl0IGlzIHBvc3NpYmxlIHRvIHBlcmZvcm0gYSBuZXh0IHJldHJ5LlxuICovXG5leHBvcnQgY2xhc3MgU2ltcGxlUmV0cnkgaW1wbGVtZW50cyBJUmV0cnkge1xuICAgIGNhbGN1bGF0ZU5leHREZWxheShyZXRyeUludGVydmFsPzogbnVtYmVyLCBtaW5CYWNrb2ZmPzogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgICAgbWluQmFja29mZiA9IG1pbkJhY2tvZmYgfHwgU0lNUExFX1JFVFJZX0RFRkFVTFRfU0VUVElORy5NSU5fQkFDS09GRjtcbiAgICAgICAgcmV0cnlJbnRlcnZhbCA9IHJldHJ5SW50ZXJ2YWwgfHwgU0lNUExFX1JFVFJZX0RFRkFVTFRfU0VUVElORy5SRVRSWV9JTlRFUlZBTDtcblxuICAgICAgICBjb25zdCB3YXZlU2hpZWxkID0gbWluQmFja29mZiArIE1hdGgucmFuZG9tKCk7XG4gICAgICAgIHJldHVybiByZXRyeUludGVydmFsICsgd2F2ZVNoaWVsZDtcbiAgICB9XG5cbiAgICBjYW5SZXRyeShhdHRlbXB0Q291bnQ6IG51bWJlciwgX21heEF0dGVtcHQ/OiBudW1iZXIpOiBib29sZWFuIHtcbiAgICAgICAgY29uc3QgbWF4QXR0ZW1wdCA9IF9tYXhBdHRlbXB0IHx8IFNJTVBMRV9SRVRSWV9ERUZBVUxUX1NFVFRJTkcuTUFYX0FUVEVNUFQ7XG4gICAgICAgIHJldHVybiBhdHRlbXB0Q291bnQgPD0gbWF4QXR0ZW1wdDtcbiAgICB9XG59XG4iXX0=