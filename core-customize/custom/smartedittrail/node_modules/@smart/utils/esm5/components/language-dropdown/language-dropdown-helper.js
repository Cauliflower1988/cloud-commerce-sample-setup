/**
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
/**
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
import * as tslib_1 from "tslib";
export var LanguageSortStrategy;
(function (LanguageSortStrategy) {
    LanguageSortStrategy["Default"] = "default";
    LanguageSortStrategy["None"] = "none";
})(LanguageSortStrategy || (LanguageSortStrategy = {}));
// @dynamic
var LanguageDropdownHelper = /** @class */ (function () {
    function LanguageDropdownHelper() {
    }
    LanguageDropdownHelper.findSelectLanguageWithIsoCodePredicate = function (isoCode) {
        return function (item) { return item.value.isoCode === isoCode; };
    };
    /**
     * Finds the language with a specified isoCode.
     *
     * @param {string} isoCode
     * @param {IToolingLanguage[]} languages
     * @returns {IToolingLanguage}
     */
    LanguageDropdownHelper.findLanguageWithIsoCode = function (isoCode, languages) {
        return languages.find(function (language) { return language.isoCode === isoCode; });
    };
    /**
     * Returns an ordered language array by name and sets the selected language at the beginning.
     *
     * @param {IToolingLanguage} selectedLanguage
     * @param {IToolingLanguage[]} languages
     * @param {ILanguageSortConfig} config
     * @returns {IToolingLanguage[]}
     */
    LanguageDropdownHelper.order = function (selectedLanguage, languages, config) {
        if (config === void 0) { config = { strategy: LanguageSortStrategy.Default }; }
        switch (config.strategy) {
            case LanguageSortStrategy.Default:
                var orderedLanguages = languages
                    .filter(function (language) { return language.isoCode !== selectedLanguage.isoCode; })
                    .sort(function (a, b) {
                    return a.isoCode.localeCompare(b.isoCode);
                });
                return tslib_1.__spread([selectedLanguage], orderedLanguages);
            case LanguageSortStrategy.None:
                return languages;
        }
    };
    return LanguageDropdownHelper;
}());
export { LanguageDropdownHelper };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2UtZHJvcGRvd24taGVscGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNtYXJ0L3V0aWxzLyIsInNvdXJjZXMiOlsiY29tcG9uZW50cy9sYW5ndWFnZS1kcm9wZG93bi9sYW5ndWFnZS1kcm9wZG93bi1oZWxwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHOztBQUtILE1BQU0sQ0FBTixJQUFZLG9CQUdYO0FBSEQsV0FBWSxvQkFBb0I7SUFDNUIsMkNBQW1CLENBQUE7SUFDbkIscUNBQWEsQ0FBQTtBQUNqQixDQUFDLEVBSFcsb0JBQW9CLEtBQXBCLG9CQUFvQixRQUcvQjtBQUtELFdBQVc7QUFDWDtJQUFBO0lBaURBLENBQUM7SUFoRFUsNkRBQXNDLEdBQTdDLFVBQ0ksT0FBZTtRQUVmLE9BQU8sVUFBQyxJQUFtQyxJQUFLLE9BQUEsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEtBQUssT0FBTyxFQUE5QixDQUE4QixDQUFDO0lBQ25GLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSSw4Q0FBdUIsR0FBOUIsVUFDSSxPQUFlLEVBQ2YsU0FBNkI7UUFFN0IsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLFVBQUMsUUFBUSxJQUFLLE9BQUEsUUFBUSxDQUFDLE9BQU8sS0FBSyxPQUFPLEVBQTVCLENBQTRCLENBQXFCLENBQUM7SUFDMUYsQ0FBQztJQUVEOzs7Ozs7O09BT0c7SUFFSSw0QkFBSyxHQUFaLFVBQ0ksZ0JBQWtDLEVBQ2xDLFNBQTZCLEVBQzdCLE1BQXdFO1FBQXhFLHVCQUFBLEVBQUEsV0FBZ0MsUUFBUSxFQUFFLG9CQUFvQixDQUFDLE9BQU8sRUFBRTtRQUV4RSxRQUFRLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDckIsS0FBSyxvQkFBb0IsQ0FBQyxPQUFPO2dCQUM3QixJQUFNLGdCQUFnQixHQUFHLFNBQVM7cUJBQzdCLE1BQU0sQ0FBQyxVQUFDLFFBQVEsSUFBSyxPQUFBLFFBQVEsQ0FBQyxPQUFPLEtBQUssZ0JBQWdCLENBQUMsT0FBTyxFQUE3QyxDQUE2QyxDQUFDO3FCQUNuRSxJQUFJLENBQUMsVUFBQyxDQUFDLEVBQUUsQ0FBQztvQkFDUCxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDOUMsQ0FBQyxDQUFDLENBQUM7Z0JBRVAseUJBQVEsZ0JBQWdCLEdBQUssZ0JBQWdCLEVBQUU7WUFFbkQsS0FBSyxvQkFBb0IsQ0FBQyxJQUFJO2dCQUMxQixPQUFPLFNBQVMsQ0FBQztTQUN4QjtJQUNMLENBQUM7SUFDTCw2QkFBQztBQUFELENBQUMsQUFqREQsSUFpREMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxOSBTQVAgU0Ugb3IgYW4gU0FQIGFmZmlsaWF0ZSBjb21wYW55LiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogQG1vZHVsZSBzbWFydHV0aWxzXG4gKi9cblxuaW1wb3J0IHsgSVNlbGVjdEl0ZW0gfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IElUb29saW5nTGFuZ3VhZ2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcyc7XG5cbmV4cG9ydCBlbnVtIExhbmd1YWdlU29ydFN0cmF0ZWd5IHtcbiAgICBEZWZhdWx0ID0gJ2RlZmF1bHQnLFxuICAgIE5vbmUgPSAnbm9uZSdcbn1cbmV4cG9ydCBpbnRlcmZhY2UgSUxhbmd1YWdlU29ydENvbmZpZyB7XG4gICAgc3RyYXRlZ3k6IExhbmd1YWdlU29ydFN0cmF0ZWd5O1xufVxuXG4vLyBAZHluYW1pY1xuZXhwb3J0IGNsYXNzIExhbmd1YWdlRHJvcGRvd25IZWxwZXIge1xuICAgIHN0YXRpYyBmaW5kU2VsZWN0TGFuZ3VhZ2VXaXRoSXNvQ29kZVByZWRpY2F0ZShcbiAgICAgICAgaXNvQ29kZTogc3RyaW5nXG4gICAgKTogKGl0ZW06IElTZWxlY3RJdGVtPElUb29saW5nTGFuZ3VhZ2U+KSA9PiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIChpdGVtOiBJU2VsZWN0SXRlbTxJVG9vbGluZ0xhbmd1YWdlPikgPT4gaXRlbS52YWx1ZS5pc29Db2RlID09PSBpc29Db2RlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZpbmRzIHRoZSBsYW5ndWFnZSB3aXRoIGEgc3BlY2lmaWVkIGlzb0NvZGUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gaXNvQ29kZVxuICAgICAqIEBwYXJhbSB7SVRvb2xpbmdMYW5ndWFnZVtdfSBsYW5ndWFnZXNcbiAgICAgKiBAcmV0dXJucyB7SVRvb2xpbmdMYW5ndWFnZX1cbiAgICAgKi9cbiAgICBzdGF0aWMgZmluZExhbmd1YWdlV2l0aElzb0NvZGUoXG4gICAgICAgIGlzb0NvZGU6IHN0cmluZyxcbiAgICAgICAgbGFuZ3VhZ2VzOiBJVG9vbGluZ0xhbmd1YWdlW11cbiAgICApOiBJVG9vbGluZ0xhbmd1YWdlIHtcbiAgICAgICAgcmV0dXJuIGxhbmd1YWdlcy5maW5kKChsYW5ndWFnZSkgPT4gbGFuZ3VhZ2UuaXNvQ29kZSA9PT0gaXNvQ29kZSkgYXMgSVRvb2xpbmdMYW5ndWFnZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGFuIG9yZGVyZWQgbGFuZ3VhZ2UgYXJyYXkgYnkgbmFtZSBhbmQgc2V0cyB0aGUgc2VsZWN0ZWQgbGFuZ3VhZ2UgYXQgdGhlIGJlZ2lubmluZy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7SVRvb2xpbmdMYW5ndWFnZX0gc2VsZWN0ZWRMYW5ndWFnZVxuICAgICAqIEBwYXJhbSB7SVRvb2xpbmdMYW5ndWFnZVtdfSBsYW5ndWFnZXNcbiAgICAgKiBAcGFyYW0ge0lMYW5ndWFnZVNvcnRDb25maWd9IGNvbmZpZ1xuICAgICAqIEByZXR1cm5zIHtJVG9vbGluZ0xhbmd1YWdlW119XG4gICAgICovXG5cbiAgICBzdGF0aWMgb3JkZXIoXG4gICAgICAgIHNlbGVjdGVkTGFuZ3VhZ2U6IElUb29saW5nTGFuZ3VhZ2UsXG4gICAgICAgIGxhbmd1YWdlczogSVRvb2xpbmdMYW5ndWFnZVtdLFxuICAgICAgICBjb25maWc6IElMYW5ndWFnZVNvcnRDb25maWcgPSB7IHN0cmF0ZWd5OiBMYW5ndWFnZVNvcnRTdHJhdGVneS5EZWZhdWx0IH1cbiAgICApOiBJVG9vbGluZ0xhbmd1YWdlW10ge1xuICAgICAgICBzd2l0Y2ggKGNvbmZpZy5zdHJhdGVneSkge1xuICAgICAgICAgICAgY2FzZSBMYW5ndWFnZVNvcnRTdHJhdGVneS5EZWZhdWx0OlxuICAgICAgICAgICAgICAgIGNvbnN0IG9yZGVyZWRMYW5ndWFnZXMgPSBsYW5ndWFnZXNcbiAgICAgICAgICAgICAgICAgICAgLmZpbHRlcigobGFuZ3VhZ2UpID0+IGxhbmd1YWdlLmlzb0NvZGUgIT09IHNlbGVjdGVkTGFuZ3VhZ2UuaXNvQ29kZSlcbiAgICAgICAgICAgICAgICAgICAgLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhLmlzb0NvZGUubG9jYWxlQ29tcGFyZShiLmlzb0NvZGUpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHJldHVybiBbc2VsZWN0ZWRMYW5ndWFnZSwgLi4ub3JkZXJlZExhbmd1YWdlc107XG5cbiAgICAgICAgICAgIGNhc2UgTGFuZ3VhZ2VTb3J0U3RyYXRlZ3kuTm9uZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbGFuZ3VhZ2VzO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19