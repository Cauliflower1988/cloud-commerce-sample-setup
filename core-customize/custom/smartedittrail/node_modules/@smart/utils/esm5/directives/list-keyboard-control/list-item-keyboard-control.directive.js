/**
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 * @module smartutils
 */
import * as tslib_1 from "tslib";
import { Directive, ElementRef, OnInit, Renderer2 } from '@angular/core';
/**
 * Directive for marking list item for 'ListKeyboardControlDirective' to allow for navigating with keyboard.
 */
var ListItemKeyboardControlDirective = /** @class */ (function () {
    function ListItemKeyboardControlDirective(hostElement, renderer) {
        this.hostElement = hostElement;
        this.renderer = renderer;
        /** @internal */
        this.activeClassName = 'is-active';
    }
    /** @internal */
    ListItemKeyboardControlDirective.prototype.ngOnInit = function () {
        this.setTabIndex();
    };
    ListItemKeyboardControlDirective.prototype.getElement = function () {
        return this.hostElement.nativeElement;
    };
    ListItemKeyboardControlDirective.prototype.setActive = function () {
        var elm = this.getElement();
        this.renderer.addClass(elm, this.activeClassName);
        elm.scrollIntoView({ block: 'nearest' });
    };
    ListItemKeyboardControlDirective.prototype.setInactive = function () {
        this.renderer.removeClass(this.getElement(), this.activeClassName);
    };
    /** @internal */
    ListItemKeyboardControlDirective.prototype.setTabIndex = function () {
        this.renderer.setAttribute(this.getElement(), 'tabindex', '-1');
    };
    ListItemKeyboardControlDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    ListItemKeyboardControlDirective = tslib_1.__decorate([
        Directive({
            selector: '[suListItemKeyboardControl]'
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef, Renderer2])
    ], ListItemKeyboardControlDirective);
    return ListItemKeyboardControlDirective;
}());
export { ListItemKeyboardControlDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pdGVtLWtleWJvYXJkLWNvbnRyb2wuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNtYXJ0L3V0aWxzLyIsInNvdXJjZXMiOlsiZGlyZWN0aXZlcy9saXN0LWtleWJvYXJkLWNvbnRyb2wvbGlzdC1pdGVtLWtleWJvYXJkLWNvbnRyb2wuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpFOztHQUVHO0FBSUg7SUFJSSwwQ0FBb0IsV0FBdUIsRUFBVSxRQUFtQjtRQUFwRCxnQkFBVyxHQUFYLFdBQVcsQ0FBWTtRQUFVLGFBQVEsR0FBUixRQUFRLENBQVc7UUFIeEUsZ0JBQWdCO1FBQ0Msb0JBQWUsR0FBRyxXQUFXLENBQUM7SUFFNEIsQ0FBQztJQUU1RSxnQkFBZ0I7SUFDaEIsbURBQVEsR0FBUjtRQUNJLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRU0scURBQVUsR0FBakI7UUFDSSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDO0lBQzFDLENBQUM7SUFFTSxvREFBUyxHQUFoQjtRQUNJLElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUM5QixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBRWxELEdBQUcsQ0FBQyxjQUFjLENBQUMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU0sc0RBQVcsR0FBbEI7UUFDSSxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7SUFFRCxnQkFBZ0I7SUFDUixzREFBVyxHQUFuQjtRQUNJLElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsRUFBRSxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDcEUsQ0FBQzs7Z0JBekJnQyxVQUFVO2dCQUFvQixTQUFTOztJQUovRCxnQ0FBZ0M7UUFINUMsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLDZCQUE2QjtTQUMxQyxDQUFDO2lEQUttQyxVQUFVLEVBQW9CLFNBQVM7T0FKL0QsZ0NBQWdDLENBOEI1QztJQUFELHVDQUFDO0NBQUEsQUE5QkQsSUE4QkM7U0E5QlksZ0NBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBPbkluaXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIERpcmVjdGl2ZSBmb3IgbWFya2luZyBsaXN0IGl0ZW0gZm9yICdMaXN0S2V5Ym9hcmRDb250cm9sRGlyZWN0aXZlJyB0byBhbGxvdyBmb3IgbmF2aWdhdGluZyB3aXRoIGtleWJvYXJkLlxuICovXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tzdUxpc3RJdGVtS2V5Ym9hcmRDb250cm9sXSdcbn0pXG5leHBvcnQgY2xhc3MgTGlzdEl0ZW1LZXlib2FyZENvbnRyb2xEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBwcml2YXRlIHJlYWRvbmx5IGFjdGl2ZUNsYXNzTmFtZSA9ICdpcy1hY3RpdmUnO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBob3N0RWxlbWVudDogRWxlbWVudFJlZiwgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7fVxuXG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLnNldFRhYkluZGV4KCk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEVsZW1lbnQoKTogSFRNTEVsZW1lbnQge1xuICAgICAgICByZXR1cm4gdGhpcy5ob3N0RWxlbWVudC5uYXRpdmVFbGVtZW50O1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXRBY3RpdmUoKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IGVsbSA9IHRoaXMuZ2V0RWxlbWVudCgpO1xuICAgICAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKGVsbSwgdGhpcy5hY3RpdmVDbGFzc05hbWUpO1xuXG4gICAgICAgIGVsbS5zY3JvbGxJbnRvVmlldyh7IGJsb2NrOiAnbmVhcmVzdCcgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIHNldEluYWN0aXZlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKHRoaXMuZ2V0RWxlbWVudCgpLCB0aGlzLmFjdGl2ZUNsYXNzTmFtZSk7XG4gICAgfVxuXG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIHByaXZhdGUgc2V0VGFiSW5kZXgoKTogdm9pZCB7XG4gICAgICAgIHRoaXMucmVuZGVyZXIuc2V0QXR0cmlidXRlKHRoaXMuZ2V0RWxlbWVudCgpLCAndGFiaW5kZXgnLCAnLTEnKTtcbiAgICB9XG59XG4iXX0=