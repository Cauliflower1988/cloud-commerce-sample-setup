/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ContentChild, Input, TemplateRef, ViewEncapsulation } from '@angular/core';
import { LocalizationEditorInputDirective, LocalizationEditorLabel, LocalizationEditorTextareaDirective } from '../localization-editor.directives';
/**
 *  Component that represents field with add-on.
 *  ```html
 *  <fd-localization-editor-item [label]="'EN'">
 *      <input fd-localization-editor-input type="text" placeholder="EN">
 *  </fd-localization-editor-item>
 *  ```
 */
var LocalizationEditorItemComponent = /** @class */ (function () {
    function LocalizationEditorItemComponent() {
    }
    /** @hidden */
    /**
     * @hidden
     * @return {?}
     */
    LocalizationEditorItemComponent.prototype.ngOnInit = /**
     * @hidden
     * @return {?}
     */
    function () {
        this.refreshChildInput();
    };
    /**
     * @return {?}
     */
    LocalizationEditorItemComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.refreshChildInput();
    };
    /**
     * @return {?}
     */
    LocalizationEditorItemComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        if (this.textarea) {
            this.type = 'textarea';
        }
    };
    /**
     * @private
     * @return {?}
     */
    LocalizationEditorItemComponent.prototype.refreshChildInput = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.input) {
            this.input.compact = this.compact;
        }
        if (this.textarea) {
            this.textarea.compact = this.compact;
        }
    };
    LocalizationEditorItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'fd-localization-editor-item',
                    template: "<fd-input-group [compact]=\"compact\" [inputTemplate]=\"input\">\n    <span fd-input-group-addon [type]=\"type\">\n        <ng-container *ngIf=\"labelTemplate\">\n            <ng-container [fd-localization-editor-load-label]=\"labelTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!labelTemplate\">\n            {{label}}\n        </ng-container>\n    </span>\n</fd-input-group>\n<ng-template #input>\n    <ng-content select=\"[fd-localization-editor-input]\"></ng-content>\n    <ng-content select=\"[fd-localization-editor-textarea]\"></ng-content>\n</ng-template>\n<ng-content></ng-content>\n",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    LocalizationEditorItemComponent.propDecorators = {
        label: [{ type: Input }],
        compact: [{ type: Input }],
        input: [{ type: ContentChild, args: [LocalizationEditorInputDirective, { static: false },] }],
        textarea: [{ type: ContentChild, args: [LocalizationEditorTextareaDirective, { static: false },] }],
        labelTemplate: [{ type: ContentChild, args: [LocalizationEditorLabel, { read: TemplateRef, static: false },] }]
    };
    return LocalizationEditorItemComponent;
}());
export { LocalizationEditorItemComponent };
if (false) {
    /**
     * @hidden
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.type;
    /**
     * The text for the add-on on the right side.
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.label;
    /**
     * Whether to apply compact mode to to field.
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.compact;
    /**
     * @hidden
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.input;
    /**
     * @hidden
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.textarea;
    /**
     * @hidden
     * @type {?}
     */
    LocalizationEditorItemComponent.prototype.labelTemplate;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxpemF0aW9uLWVkaXRvci1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmdW5kYW1lbnRhbC1uZ3gvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9sb2NhbGl6YXRvci1lZGl0b3IvbG9jYWxpemF0aW9uLWVkaXRvci1pdGVtL2xvY2FsaXphdGlvbi1lZGl0b3ItaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFFSCxTQUFTLEVBQ1QsWUFBWSxFQUNaLEtBQUssRUFHTCxXQUFXLEVBQ1gsaUJBQWlCLEVBQ3BCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFDSCxnQ0FBZ0MsRUFDaEMsdUJBQXVCLEVBQ3ZCLG1DQUFtQyxFQUN0QyxNQUFNLG1DQUFtQyxDQUFDOzs7Ozs7Ozs7QUFVM0M7SUFBQTtJQXFEQSxDQUFDO0lBdkJHLGNBQWM7Ozs7O0lBQ2Qsa0RBQVE7Ozs7SUFBUjtRQUNJLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0lBQzdCLENBQUM7Ozs7SUFFRCxxREFBVzs7O0lBQVg7UUFDSSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztJQUM3QixDQUFDOzs7O0lBRUQsNERBQWtCOzs7SUFBbEI7UUFDSSxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDZixJQUFJLENBQUMsSUFBSSxHQUFHLFVBQVUsQ0FBQztTQUMxQjtJQUNMLENBQUM7Ozs7O0lBRU8sMkRBQWlCOzs7O0lBQXpCO1FBQ0ksSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1osSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztTQUNyQztRQUNELElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNmLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7U0FDeEM7SUFDTCxDQUFDOztnQkFwREosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLGdvQkFBd0Q7b0JBQ3hELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2lCQUN4Qzs7O3dCQU9JLEtBQUs7MEJBSUwsS0FBSzt3QkFJTCxZQUFZLFNBQUMsZ0NBQWdDLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFOzJCQUloRSxZQUFZLFNBQUMsbUNBQW1DLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFO2dDQUluRSxZQUFZLFNBQUMsdUJBQXVCLEVBQUUsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUU7O0lBMEIvRSxzQ0FBQztDQUFBLEFBckRELElBcURDO1NBaERZLCtCQUErQjs7Ozs7O0lBR3hDLCtDQUFhOzs7OztJQUdiLGdEQUNjOzs7OztJQUdkLGtEQUNpQjs7Ozs7SUFHakIsZ0RBQ3dDOzs7OztJQUd4QyxtREFDOEM7Ozs7O0lBRzlDLHdEQUNnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQWZ0ZXJDb250ZW50SW5pdCxcbiAgICBDb21wb25lbnQsXG4gICAgQ29udGVudENoaWxkLFxuICAgIElucHV0LFxuICAgIE9uQ2hhbmdlcyxcbiAgICBPbkluaXQsXG4gICAgVGVtcGxhdGVSZWYsXG4gICAgVmlld0VuY2Fwc3VsYXRpb25cbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICAgIExvY2FsaXphdGlvbkVkaXRvcklucHV0RGlyZWN0aXZlLFxuICAgIExvY2FsaXphdGlvbkVkaXRvckxhYmVsLFxuICAgIExvY2FsaXphdGlvbkVkaXRvclRleHRhcmVhRGlyZWN0aXZlXG59IGZyb20gJy4uL2xvY2FsaXphdGlvbi1lZGl0b3IuZGlyZWN0aXZlcyc7XG5cbi8qKlxuICogIENvbXBvbmVudCB0aGF0IHJlcHJlc2VudHMgZmllbGQgd2l0aCBhZGQtb24uXG4gKiAgYGBgaHRtbFxuICogIDxmZC1sb2NhbGl6YXRpb24tZWRpdG9yLWl0ZW0gW2xhYmVsXT1cIidFTidcIj5cbiAqICAgICAgPGlucHV0IGZkLWxvY2FsaXphdGlvbi1lZGl0b3ItaW5wdXQgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkVOXCI+XG4gKiAgPC9mZC1sb2NhbGl6YXRpb24tZWRpdG9yLWl0ZW0+XG4gKiAgYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnZmQtbG9jYWxpemF0aW9uLWVkaXRvci1pdGVtJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbG9jYWxpemF0aW9uLWVkaXRvci1pdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIExvY2FsaXphdGlvbkVkaXRvckl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyQ29udGVudEluaXQsIE9uQ2hhbmdlcyB7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIHR5cGU6IHN0cmluZztcblxuICAgIC8qKiBUaGUgdGV4dCBmb3IgdGhlIGFkZC1vbiBvbiB0aGUgcmlnaHQgc2lkZS4gKi9cbiAgICBASW5wdXQoKVxuICAgIGxhYmVsOiBzdHJpbmc7XG5cbiAgICAvKiogV2hldGhlciB0byBhcHBseSBjb21wYWN0IG1vZGUgdG8gdG8gZmllbGQuICovXG4gICAgQElucHV0KClcbiAgICBjb21wYWN0OiBib29sZWFuO1xuXG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICBAQ29udGVudENoaWxkKExvY2FsaXphdGlvbkVkaXRvcklucHV0RGlyZWN0aXZlLCB7IHN0YXRpYzogZmFsc2UgfSlcbiAgICBpbnB1dDogTG9jYWxpemF0aW9uRWRpdG9ySW5wdXREaXJlY3RpdmU7XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIEBDb250ZW50Q2hpbGQoTG9jYWxpemF0aW9uRWRpdG9yVGV4dGFyZWFEaXJlY3RpdmUsIHsgc3RhdGljOiBmYWxzZSB9KVxuICAgIHRleHRhcmVhOiBMb2NhbGl6YXRpb25FZGl0b3JUZXh0YXJlYURpcmVjdGl2ZTtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgQENvbnRlbnRDaGlsZChMb2NhbGl6YXRpb25FZGl0b3JMYWJlbCwgeyByZWFkOiBUZW1wbGF0ZVJlZiwgc3RhdGljOiBmYWxzZSB9KVxuICAgIGxhYmVsVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIG5nT25Jbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLnJlZnJlc2hDaGlsZElucHV0KCk7XG4gICAgfVxuXG4gICAgbmdPbkNoYW5nZXMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMucmVmcmVzaENoaWxkSW5wdXQoKTtcbiAgICB9XG5cbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLnRleHRhcmVhKSB7XG4gICAgICAgICAgICB0aGlzLnR5cGUgPSAndGV4dGFyZWEnO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSByZWZyZXNoQ2hpbGRJbnB1dCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuaW5wdXQpIHtcbiAgICAgICAgICAgIHRoaXMuaW5wdXQuY29tcGFjdCA9IHRoaXMuY29tcGFjdDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy50ZXh0YXJlYSkge1xuICAgICAgICAgICAgdGhpcy50ZXh0YXJlYS5jb21wYWN0ID0gdGhpcy5jb21wYWN0O1xuICAgICAgICB9XG4gICAgfVxufVxuIl19