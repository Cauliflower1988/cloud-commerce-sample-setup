/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, Input } from '@angular/core';
import { AbstractFdNgxClass } from '../utils/abstract-fd-ngx-class';
export class LayoutGridSpanDirective extends AbstractFdNgxClass {
    /**
     * @hidden
     * @param {?} elementRef
     */
    constructor(elementRef) {
        super(elementRef);
        this.elementRef = elementRef;
    }
    /**
     * @hidden
     * @return {?}
     */
    _setProperties() {
        if (this.columnSpan) {
            this._addClassToElement('fd-layout-grid__span-column-' + this.columnSpan);
        }
    }
}
LayoutGridSpanDirective.decorators = [
    { type: Directive, args: [{
                selector: '[fdLayoutGridSpan], [fd-layout-grid-span]'
            },] }
];
/** @nocollapse */
LayoutGridSpanDirective.ctorParameters = () => [
    { type: ElementRef }
];
LayoutGridSpanDirective.propDecorators = {
    columnSpan: [{ type: Input }]
};
if (false) {
    /**
     * \@Input Column span for the grid system
     * @type {?}
     */
    LayoutGridSpanDirective.prototype.columnSpan;
    /**
     * @type {?}
     * @private
     */
    LayoutGridSpanDirective.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LWdyaWQtc3Bhbi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvbGF5b3V0LWdyaWQvbGF5b3V0LWdyaWQtc3Bhbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUtwRSxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsa0JBQWtCOzs7OztJQWMzRCxZQUFvQixVQUFzQjtRQUN0QyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7UUFERixlQUFVLEdBQVYsVUFBVSxDQUFZO0lBRTFDLENBQUM7Ozs7O0lBVEQsY0FBYztRQUNWLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNqQixJQUFJLENBQUMsa0JBQWtCLENBQUMsOEJBQThCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQzdFO0lBQ0wsQ0FBQzs7O1lBZEosU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSwyQ0FBMkM7YUFDdEQ7Ozs7WUFMbUIsVUFBVTs7O3lCQVN6QixLQUFLOzs7Ozs7O0lBQU4sNkNBQ21COzs7OztJQVVQLDZDQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFic3RyYWN0RmROZ3hDbGFzcyB9IGZyb20gJy4uL3V0aWxzL2Fic3RyYWN0LWZkLW5neC1jbGFzcyc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tmZExheW91dEdyaWRTcGFuXSwgW2ZkLWxheW91dC1ncmlkLXNwYW5dJ1xufSlcbmV4cG9ydCBjbGFzcyBMYXlvdXRHcmlkU3BhbkRpcmVjdGl2ZSBleHRlbmRzIEFic3RyYWN0RmROZ3hDbGFzcyB7XG5cbiAgICAvKiogQElucHV0IENvbHVtbiBzcGFuIGZvciB0aGUgZ3JpZCBzeXN0ZW0gKi9cbiAgICBASW5wdXQoKVxuICAgIGNvbHVtblNwYW46IG51bWJlcjtcblxuICAgIC8qKiBAaGlkZGVuICovXG4gICAgX3NldFByb3BlcnRpZXMoKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbHVtblNwYW4pIHtcbiAgICAgICAgICAgIHRoaXMuX2FkZENsYXNzVG9FbGVtZW50KCdmZC1sYXlvdXQtZ3JpZF9fc3Bhbi1jb2x1bW4tJyArIHRoaXMuY29sdW1uU3Bhbik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQGhpZGRlbiAqL1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICAgICAgICBzdXBlcihlbGVtZW50UmVmKTtcbiAgICB9XG59XG4iXX0=