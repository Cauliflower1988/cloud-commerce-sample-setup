/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
/**
 * A component used to enforce a certain layout for the popover. With additional styling
 * ```html
 * <fd-popover>
 *     <fd-dropdown>Dropdown</fd-dropdown>
 *     <fd-popover-body>Popover Body</fd-popover-body>
 * </fd-popover>
 * ```
 */
export class PopoverDropdownComponent {
    constructor() {
        /**
         * Whether the popover should have an arrow.
         */
        this.noArrow = true;
        /**
         * Whether the popover is disabled.
         */
        this.disabled = false;
        /**
         * Whether the dropdown is in compact format.
         */
        this.compact = false;
        /**
         * Whether the dropdown is in a toolbar.
         */
        this.toolbar = false;
        /**
         * Whether the dropdown is opened.
         */
        this.isOpen = false;
    }
}
PopoverDropdownComponent.decorators = [
    { type: Component, args: [{
                selector: 'fd-dropdown-control',
                host: {
                    class: 'fd-dropdown',
                },
                template: "<div class=\"fd-dropdown\">\n    <button\n        fd-button\n        class=\"fd-dropdown__control\"\n        [fdType]=\"btnType\"\n        [glyph]=\"glyph\"\n        [compact]=\"compact\"\n        [disabled]=\"disabled\"\n        [attr.aria-expanded]=\"this.disabled ? false : isOpen\"\n        [attr.aria-disabled]=\"this.disabled\"\n        aria-haspopup=\"true\"\n        [disabled]=\"disabled\"\n    >\n        <ng-content></ng-content>\n    </button>\n</div>\n",
                encapsulation: ViewEncapsulation.None
            }] }
];
PopoverDropdownComponent.propDecorators = {
    noArrow: [{ type: Input }],
    disabled: [{ type: Input }],
    glyph: [{ type: Input }],
    btnType: [{ type: Input }],
    compact: [{ type: Input }],
    toolbar: [{ type: Input }],
    isOpen: [{ type: Input }]
};
if (false) {
    /**
     * Whether the popover should have an arrow.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.noArrow;
    /**
     * Whether the popover is disabled.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.disabled;
    /**
     * The glyph to display.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.glyph;
    /**
     * The btnType to display.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.btnType;
    /**
     * Whether the dropdown is in compact format.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.compact;
    /**
     * Whether the dropdown is in a toolbar.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.toolbar;
    /**
     * Whether the dropdown is opened.
     * @type {?}
     */
    PopoverDropdownComponent.prototype.isOpen;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1kcm9wZG93bi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZnVuZGFtZW50YWwtbmd4L2NvcmUvIiwic291cmNlcyI6WyJsaWIvcG9wb3Zlci9wb3BvdmVyLWRyb3Bkb3duL3BvcG92ZXItZHJvcGRvd24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFnQixLQUFLLEVBQWEsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7QUFxQjdGLE1BQU0sT0FBTyx3QkFBd0I7SUFSckM7Ozs7UUFXSSxZQUFPLEdBQVksSUFBSSxDQUFDOzs7O1FBSXhCLGFBQVEsR0FBWSxLQUFLLENBQUM7Ozs7UUFZMUIsWUFBTyxHQUFZLEtBQUssQ0FBQzs7OztRQUl6QixZQUFPLEdBQVksS0FBSyxDQUFDOzs7O1FBSXpCLFdBQU0sR0FBWSxLQUFLLENBQUM7SUFFNUIsQ0FBQzs7O1lBckNBLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixJQUFJLEVBQUU7b0JBQ0YsS0FBSyxFQUFFLGFBQWE7aUJBQ3ZCO2dCQUNELDZkQUE4QztnQkFDOUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7YUFDeEM7OztzQkFHSSxLQUFLO3VCQUlMLEtBQUs7b0JBSUwsS0FBSztzQkFJTCxLQUFLO3NCQUlMLEtBQUs7c0JBSUwsS0FBSztxQkFJTCxLQUFLOzs7Ozs7O0lBeEJOLDJDQUN3Qjs7Ozs7SUFHeEIsNENBQzBCOzs7OztJQUcxQix5Q0FDYzs7Ozs7SUFHZCwyQ0FDb0I7Ozs7O0lBR3BCLDJDQUN5Qjs7Ozs7SUFHekIsMkNBQ3lCOzs7OztJQUd6QiwwQ0FDd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3QsIEluamVjdCwgSW5wdXQsIE9uRGVzdHJveSwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgUG9wb3ZlckNvbXBvbmVudCB9IGZyb20gJy4uL3BvcG92ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IEJ1dHRvblR5cGUgfSBmcm9tICcuLi8uLi9idXR0b24vYnV0dG9uLmNvbXBvbmVudCc7XG4vKipcbiAqIEEgY29tcG9uZW50IHVzZWQgdG8gZW5mb3JjZSBhIGNlcnRhaW4gbGF5b3V0IGZvciB0aGUgcG9wb3Zlci4gV2l0aCBhZGRpdGlvbmFsIHN0eWxpbmdcbiAqIGBgYGh0bWxcbiAqIDxmZC1wb3BvdmVyPlxuICogICAgIDxmZC1kcm9wZG93bj5Ecm9wZG93bjwvZmQtZHJvcGRvd24+XG4gKiAgICAgPGZkLXBvcG92ZXItYm9keT5Qb3BvdmVyIEJvZHk8L2ZkLXBvcG92ZXItYm9keT5cbiAqIDwvZmQtcG9wb3Zlcj5cbiAqIGBgYFxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2ZkLWRyb3Bkb3duLWNvbnRyb2wnLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgY2xhc3M6ICdmZC1kcm9wZG93bicsXG4gICAgfSxcbiAgICB0ZW1wbGF0ZVVybDogJ3BvcG92ZXItZHJvcGRvd24uY29tcG9uZW50Lmh0bWwnLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG59KVxuZXhwb3J0IGNsYXNzIFBvcG92ZXJEcm9wZG93bkNvbXBvbmVudCB7XG4gICAgLyoqIFdoZXRoZXIgdGhlIHBvcG92ZXIgc2hvdWxkIGhhdmUgYW4gYXJyb3cuICovXG4gICAgQElucHV0KClcbiAgICBub0Fycm93OiBib29sZWFuID0gdHJ1ZTtcblxuICAgIC8qKiBXaGV0aGVyIHRoZSBwb3BvdmVyIGlzIGRpc2FibGVkLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgZGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIC8qKiBUaGUgZ2x5cGggdG8gZGlzcGxheS4gKi9cbiAgICBASW5wdXQoKVxuICAgIGdseXBoOiBzdHJpbmc7XG5cbiAgICAvKiogVGhlIGJ0blR5cGUgdG8gZGlzcGxheS4gKi9cbiAgICBASW5wdXQoKVxuICAgIGJ0blR5cGU6IEJ1dHRvblR5cGU7XG5cbiAgICAvKiogV2hldGhlciB0aGUgZHJvcGRvd24gaXMgaW4gY29tcGFjdCBmb3JtYXQuICovXG4gICAgQElucHV0KClcbiAgICBjb21wYWN0OiBib29sZWFuID0gZmFsc2U7XG5cbiAgICAvKiogV2hldGhlciB0aGUgZHJvcGRvd24gaXMgaW4gYSB0b29sYmFyLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgdG9vbGJhcjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgLyoqIFdoZXRoZXIgdGhlIGRyb3Bkb3duIGlzIG9wZW5lZC4gKi9cbiAgICBASW5wdXQoKVxuICAgIGlzT3BlbjogYm9vbGVhbiA9IGZhbHNlO1xuXG59XG4iXX0=